openapi: 3.0.1
info:
  contact:
    email: support@commercelayer.io
    name: API Support
    url: https://commercelayer.io
  description: Headless Commerce for Global Brands.
  title: Commerce Layer API
  version: 2.9.4
servers:
- description: Sign in
  url: https://core.commercelayer.io/users/sign_in
- description: API reference
  url: https://docs.commercelayer.io/api
tags:
- description: singleton resource
  name: singleton
- description: resource type
  name: addresses
- description: relationship kind
  name: has_one
- description: resource type
  name: adjustments
- description: resource type
  name: adyen_gateways
- description: relationship kind
  name: has_many
- description: resource type
  name: adyen_payments
- description: resource type
  name: application
- description: resource type
  name: attachments
- description: resource type
  name: authorizations
- description: resource type
  name: avalara_accounts
- description: resource type
  name: billing_info_validation_rules
- description: resource type
  name: bing_geocoders
- description: resource type
  name: braintree_gateways
- description: resource type
  name: braintree_payments
- description: resource type
  name: bundles
- description: resource type
  name: captures
- description: resource type
  name: carrier_accounts
- description: resource type
  name: checkout_com_gateways
- description: resource type
  name: checkout_com_payments
- description: resource type
  name: coupon_codes_promotion_rules
- description: resource type
  name: coupon_recipients
- description: resource type
  name: coupons
- description: resource type
  name: customer_addresses
- description: resource type
  name: customer_groups
- description: resource type
  name: customer_password_resets
- description: resource type
  name: customer_payment_sources
- description: resource type
  name: customer_subscriptions
- description: resource type
  name: customers
- description: resource type
  name: delivery_lead_times
- description: resource type
  name: event_callbacks
- description: resource type
  name: external_gateways
- description: resource type
  name: external_payments
- description: resource type
  name: external_promotions
- description: resource type
  name: external_tax_calculators
- description: resource type
  name: fixed_amount_promotions
- description: resource type
  name: fixed_price_promotions
- description: resource type
  name: free_gift_promotions
- description: resource type
  name: free_shipping_promotions
- description: resource type
  name: geocoders
- description: resource type
  name: gift_card_recipients
- description: resource type
  name: gift_cards
- description: resource type
  name: google_geocoders
- description: resource type
  name: imports
- description: resource type
  name: in_stock_subscriptions
- description: resource type
  name: inventory_models
- description: resource type
  name: inventory_return_locations
- description: resource type
  name: inventory_stock_locations
- description: resource type
  name: klarna_gateways
- description: resource type
  name: klarna_payments
- description: resource type
  name: line_item_options
- description: resource type
  name: line_items
- description: resource type
  name: manual_gateways
- description: resource type
  name: manual_tax_calculators
- description: resource type
  name: markets
- description: resource type
  name: merchants
- description: resource type
  name: order_amount_promotion_rules
- description: resource type
  name: order_copies
- description: resource type
  name: order_subscriptions
- description: resource type
  name: order_validation_rules
- description: resource type
  name: orders
- description: resource type
  name: organization
- description: resource type
  name: packages
- description: resource type
  name: parcel_line_items
- description: resource type
  name: parcels
- description: resource type
  name: payment_gateways
- description: resource type
  name: payment_methods
- description: resource type
  name: paypal_gateways
- description: resource type
  name: paypal_payments
- description: resource type
  name: percentage_discount_promotions
- description: resource type
  name: price_lists
- description: resource type
  name: prices
- description: resource type
  name: promotion_rules
- description: resource type
  name: promotions
- description: resource type
  name: refunds
- description: resource type
  name: return_line_items
- description: resource type
  name: returns
- description: resource type
  name: shipments
- description: resource type
  name: shipping_categories
- description: resource type
  name: shipping_methods
- description: resource type
  name: shipping_zones
- description: resource type
  name: sku_list_items
- description: resource type
  name: sku_list_promotion_rules
- description: resource type
  name: sku_lists
- description: resource type
  name: sku_options
- description: resource type
  name: skus
- description: resource type
  name: stock_items
- description: resource type
  name: stock_line_items
- description: resource type
  name: stock_locations
- description: resource type
  name: stock_transfers
- description: resource type
  name: stripe_gateways
- description: resource type
  name: stripe_payments
- description: resource type
  name: tax_calculators
- description: resource type
  name: tax_categories
- description: resource type
  name: tax_rules
- description: resource type
  name: taxjar_accounts
- description: resource type
  name: transactions
- description: resource type
  name: voids
- description: resource type
  name: webhooks
- description: resource type
  name: wire_transfers
paths:
  /addresses:
    get:
      description: List all addresses
      operationId: GET/addresses
      responses:
        "200":
          description: A list of address objects
      summary: List all addresses
      tags:
      - addresses
    post:
      description: Create an address
      operationId: POST/addresses
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/addressCreate'
        required: true
      responses:
        "201":
          description: The created address object
      summary: Create an address
      tags:
      - addresses
  /addresses/{addressId}:
    delete:
      description: Delete an address
      operationId: DELETE/addresses/addressId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: addressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an address
      tags:
      - addresses
    get:
      description: Retrieve an address
      operationId: GET/addresses/addressId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: addressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/address'
          description: The address object
      summary: Retrieve an address
      tags:
      - addresses
    patch:
      description: Update an address
      operationId: PATCH/addresses/addressId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: addressId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/addressUpdate'
        required: true
      responses:
        "200":
          description: The updated address object
      summary: Update an address
      tags:
      - addresses
  /addresses/{addressId}/geocoder:
    get:
      description: Retrieve the geocoder associated to the address
      operationId: GET/addressId/geocoder
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: addressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The geocoder associated to the address
      summary: Retrieve the geocoder associated to the address
      tags:
      - has_one
      - geocoders
  /adjustments:
    get:
      description: List all adjustments
      operationId: GET/adjustments
      responses:
        "200":
          description: A list of adjustment objects
      summary: List all adjustments
      tags:
      - adjustments
    post:
      description: Create an adjustment
      operationId: POST/adjustments
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/adjustmentCreate'
        required: true
      responses:
        "201":
          description: The created adjustment object
      summary: Create an adjustment
      tags:
      - adjustments
  /adjustments/{adjustmentId}:
    delete:
      description: Delete an adjustment
      operationId: DELETE/adjustments/adjustmentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adjustmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an adjustment
      tags:
      - adjustments
    get:
      description: Retrieve an adjustment
      operationId: GET/adjustments/adjustmentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adjustmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/adjustment'
          description: The adjustment object
      summary: Retrieve an adjustment
      tags:
      - adjustments
    patch:
      description: Update an adjustment
      operationId: PATCH/adjustments/adjustmentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adjustmentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/adjustmentUpdate'
        required: true
      responses:
        "200":
          description: The updated adjustment object
      summary: Update an adjustment
      tags:
      - adjustments
  /adyen_gateways:
    get:
      description: List all adyen gateways
      operationId: GET/adyen_gateways
      responses:
        "200":
          description: A list of adyen gateway objects
      summary: List all adyen gateways
      tags:
      - adyen_gateways
    post:
      description: Create an adyen gateway
      operationId: POST/adyen_gateways
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/adyenGatewayCreate'
        required: true
      responses:
        "201":
          description: The created adyen gateway object
      summary: Create an adyen gateway
      tags:
      - adyen_gateways
  /adyen_gateways/{adyenGatewayId}:
    delete:
      description: Delete an adyen gateway
      operationId: DELETE/adyen_gateways/adyenGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an adyen gateway
      tags:
      - adyen_gateways
    get:
      description: Retrieve an adyen gateway
      operationId: GET/adyen_gateways/adyenGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/adyenGateway'
          description: The adyen gateway object
      summary: Retrieve an adyen gateway
      tags:
      - adyen_gateways
    patch:
      description: Update an adyen gateway
      operationId: PATCH/adyen_gateways/adyenGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenGatewayId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/adyenGatewayUpdate'
        required: true
      responses:
        "200":
          description: The updated adyen gateway object
      summary: Update an adyen gateway
      tags:
      - adyen_gateways
  /adyen_gateways/{adyenGatewayId}/payment_methods:
    get:
      description: Retrieve the payment methods associated to the adyen gateway
      operationId: GET/adyenGatewayId/payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_methods associated to the adyen gateway
      summary: Retrieve the payment methods associated to the adyen gateway
      tags:
      - has_many
      - payment_methods
  /adyen_gateways/{adyenGatewayId}/adyen_payments:
    get:
      description: Retrieve the adyen payments associated to the adyen gateway
      operationId: GET/adyenGatewayId/adyen_payments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The adyen_payments associated to the adyen gateway
      summary: Retrieve the adyen payments associated to the adyen gateway
      tags:
      - has_many
      - adyen_payments
  /adyen_payments:
    get:
      description: List all adyen payments
      operationId: GET/adyen_payments
      responses:
        "200":
          description: A list of adyen payment objects
      summary: List all adyen payments
      tags:
      - adyen_payments
    post:
      description: Create an adyen payment
      operationId: POST/adyen_payments
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/adyenPaymentCreate'
        required: true
      responses:
        "201":
          description: The created adyen payment object
      summary: Create an adyen payment
      tags:
      - adyen_payments
  /adyen_payments/{adyenPaymentId}:
    delete:
      description: Delete an adyen payment
      operationId: DELETE/adyen_payments/adyenPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an adyen payment
      tags:
      - adyen_payments
    get:
      description: Retrieve an adyen payment
      operationId: GET/adyen_payments/adyenPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/adyenPayment'
          description: The adyen payment object
      summary: Retrieve an adyen payment
      tags:
      - adyen_payments
    patch:
      description: Update an adyen payment
      operationId: PATCH/adyen_payments/adyenPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/adyenPaymentUpdate'
        required: true
      responses:
        "200":
          description: The updated adyen payment object
      summary: Update an adyen payment
      tags:
      - adyen_payments
  /adyen_payments/{adyenPaymentId}/order:
    get:
      description: Retrieve the order associated to the adyen payment
      operationId: GET/adyenPaymentId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the adyen payment
      summary: Retrieve the order associated to the adyen payment
      tags:
      - has_one
      - orders
  /adyen_payments/{adyenPaymentId}/payment_gateway:
    get:
      description: Retrieve the payment gateway associated to the adyen payment
      operationId: GET/adyenPaymentId/payment_gateway
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: adyenPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_gateway associated to the adyen payment
      summary: Retrieve the payment gateway associated to the adyen payment
      tags:
      - has_one
      - payment_gateways
  /application:
    get:
      description: Retrieve the application
      operationId: GET/application/applicationId
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/application'
          description: The application object
      summary: Retrieve the application
      tags:
      - application
      - singleton
  /attachments:
    get:
      description: List all attachments
      operationId: GET/attachments
      responses:
        "200":
          description: A list of attachment objects
      summary: List all attachments
      tags:
      - attachments
    post:
      description: Create an attachment
      operationId: POST/attachments
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/attachmentCreate'
        required: true
      responses:
        "201":
          description: The created attachment object
      summary: Create an attachment
      tags:
      - attachments
  /attachments/{attachmentId}:
    delete:
      description: Delete an attachment
      operationId: DELETE/attachments/attachmentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an attachment
      tags:
      - attachments
    get:
      description: Retrieve an attachment
      operationId: GET/attachments/attachmentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/attachment'
          description: The attachment object
      summary: Retrieve an attachment
      tags:
      - attachments
    patch:
      description: Update an attachment
      operationId: PATCH/attachments/attachmentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: attachmentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/attachmentUpdate'
        required: true
      responses:
        "200":
          description: The updated attachment object
      summary: Update an attachment
      tags:
      - attachments
  /authorizations:
    get:
      description: List all authorizations
      operationId: GET/authorizations
      responses:
        "200":
          description: A list of authorization objects
      summary: List all authorizations
      tags:
      - authorizations
  /authorizations/{authorizationId}:
    get:
      description: Retrieve an authorization
      operationId: GET/authorizations/authorizationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/authorization'
          description: The authorization object
      summary: Retrieve an authorization
      tags:
      - authorizations
    patch:
      description: Update an authorization
      operationId: PATCH/authorizations/authorizationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/authorizationUpdate'
        required: true
      responses:
        "200":
          description: The updated authorization object
      summary: Update an authorization
      tags:
      - authorizations
  /authorizations/{authorizationId}/order:
    get:
      description: Retrieve the order associated to the authorization
      operationId: GET/authorizationId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the authorization
      summary: Retrieve the order associated to the authorization
      tags:
      - has_one
      - orders
  /authorizations/{authorizationId}/captures:
    get:
      description: Retrieve the captures associated to the authorization
      operationId: GET/authorizationId/captures
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The captures associated to the authorization
      summary: Retrieve the captures associated to the authorization
      tags:
      - has_many
      - captures
  /authorizations/{authorizationId}/voids:
    get:
      description: Retrieve the voids associated to the authorization
      operationId: GET/authorizationId/voids
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The voids associated to the authorization
      summary: Retrieve the voids associated to the authorization
      tags:
      - has_many
      - voids
  /avalara_accounts:
    get:
      description: List all avalara accounts
      operationId: GET/avalara_accounts
      responses:
        "200":
          description: A list of avalara account objects
      summary: List all avalara accounts
      tags:
      - avalara_accounts
    post:
      description: Create an avalara account
      operationId: POST/avalara_accounts
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/avalaraAccountCreate'
        required: true
      responses:
        "201":
          description: The created avalara account object
      summary: Create an avalara account
      tags:
      - avalara_accounts
  /avalara_accounts/{avalaraAccountId}:
    delete:
      description: Delete an avalara account
      operationId: DELETE/avalara_accounts/avalaraAccountId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: avalaraAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an avalara account
      tags:
      - avalara_accounts
    get:
      description: Retrieve an avalara account
      operationId: GET/avalara_accounts/avalaraAccountId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: avalaraAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/avalaraAccount'
          description: The avalara account object
      summary: Retrieve an avalara account
      tags:
      - avalara_accounts
    patch:
      description: Update an avalara account
      operationId: PATCH/avalara_accounts/avalaraAccountId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: avalaraAccountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/avalaraAccountUpdate'
        required: true
      responses:
        "200":
          description: The updated avalara account object
      summary: Update an avalara account
      tags:
      - avalara_accounts
  /avalara_accounts/{avalaraAccountId}/tax_categories:
    get:
      description: Retrieve the tax categories associated to the avalara account
      operationId: GET/avalaraAccountId/tax_categories
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: avalaraAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The tax_categories associated to the avalara account
      summary: Retrieve the tax categories associated to the avalara account
      tags:
      - has_many
      - tax_categories
  /avalara_accounts/{avalaraAccountId}/markets:
    get:
      description: Retrieve the markets associated to the avalara account
      operationId: GET/avalaraAccountId/markets
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: avalaraAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The markets associated to the avalara account
      summary: Retrieve the markets associated to the avalara account
      tags:
      - has_many
      - markets
  /avalara_accounts/{avalaraAccountId}/attachments:
    get:
      description: Retrieve the attachments associated to the avalara account
      operationId: GET/avalaraAccountId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: avalaraAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the avalara account
      summary: Retrieve the attachments associated to the avalara account
      tags:
      - has_many
      - attachments
  /billing_info_validation_rules:
    get:
      description: List all billing info validation rules
      operationId: GET/billing_info_validation_rules
      responses:
        "200":
          description: A list of billing info validation rule objects
      summary: List all billing info validation rules
      tags:
      - billing_info_validation_rules
    post:
      description: Create a billing info validation rule
      operationId: POST/billing_info_validation_rules
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/billingInfoValidationRuleCreate'
        required: true
      responses:
        "201":
          description: The created billing info validation rule object
      summary: Create a billing info validation rule
      tags:
      - billing_info_validation_rules
  /billing_info_validation_rules/{billingInfoValidationRuleId}:
    delete:
      description: Delete a billing info validation rule
      operationId: DELETE/billing_info_validation_rules/billingInfoValidationRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: billingInfoValidationRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a billing info validation rule
      tags:
      - billing_info_validation_rules
    get:
      description: Retrieve a billing info validation rule
      operationId: GET/billing_info_validation_rules/billingInfoValidationRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: billingInfoValidationRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/billingInfoValidationRule'
          description: The billing info validation rule object
      summary: Retrieve a billing info validation rule
      tags:
      - billing_info_validation_rules
    patch:
      description: Update a billing info validation rule
      operationId: PATCH/billing_info_validation_rules/billingInfoValidationRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: billingInfoValidationRuleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/billingInfoValidationRuleUpdate'
        required: true
      responses:
        "200":
          description: The updated billing info validation rule object
      summary: Update a billing info validation rule
      tags:
      - billing_info_validation_rules
  /billing_info_validation_rules/{billingInfoValidationRuleId}/market:
    get:
      description: Retrieve the market associated to the billing info validation rule
      operationId: GET/billingInfoValidationRuleId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: billingInfoValidationRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the billing info validation rule
      summary: Retrieve the market associated to the billing info validation rule
      tags:
      - has_one
      - markets
  /bing_geocoders:
    get:
      description: List all bing geocoders
      operationId: GET/bing_geocoders
      responses:
        "200":
          description: A list of bing geocoder objects
      summary: List all bing geocoders
      tags:
      - bing_geocoders
    post:
      description: Create a bing geocoder
      operationId: POST/bing_geocoders
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/bingGeocoderCreate'
        required: true
      responses:
        "201":
          description: The created bing geocoder object
      summary: Create a bing geocoder
      tags:
      - bing_geocoders
  /bing_geocoders/{bingGeocoderId}:
    delete:
      description: Delete a bing geocoder
      operationId: DELETE/bing_geocoders/bingGeocoderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bingGeocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a bing geocoder
      tags:
      - bing_geocoders
    get:
      description: Retrieve a bing geocoder
      operationId: GET/bing_geocoders/bingGeocoderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bingGeocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/bingGeocoder'
          description: The bing geocoder object
      summary: Retrieve a bing geocoder
      tags:
      - bing_geocoders
    patch:
      description: Update a bing geocoder
      operationId: PATCH/bing_geocoders/bingGeocoderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bingGeocoderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/bingGeocoderUpdate'
        required: true
      responses:
        "200":
          description: The updated bing geocoder object
      summary: Update a bing geocoder
      tags:
      - bing_geocoders
  /bing_geocoders/{bingGeocoderId}/addresses:
    get:
      description: Retrieve the addresses associated to the bing geocoder
      operationId: GET/bingGeocoderId/addresses
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bingGeocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The addresses associated to the bing geocoder
      summary: Retrieve the addresses associated to the bing geocoder
      tags:
      - has_many
      - addresses
  /bing_geocoders/{bingGeocoderId}/attachments:
    get:
      description: Retrieve the attachments associated to the bing geocoder
      operationId: GET/bingGeocoderId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bingGeocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the bing geocoder
      summary: Retrieve the attachments associated to the bing geocoder
      tags:
      - has_many
      - attachments
  /braintree_gateways:
    get:
      description: List all braintree gateways
      operationId: GET/braintree_gateways
      responses:
        "200":
          description: A list of braintree gateway objects
      summary: List all braintree gateways
      tags:
      - braintree_gateways
    post:
      description: Create a braintree gateway
      operationId: POST/braintree_gateways
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/braintreeGatewayCreate'
        required: true
      responses:
        "201":
          description: The created braintree gateway object
      summary: Create a braintree gateway
      tags:
      - braintree_gateways
  /braintree_gateways/{braintreeGatewayId}:
    delete:
      description: Delete a braintree gateway
      operationId: DELETE/braintree_gateways/braintreeGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreeGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a braintree gateway
      tags:
      - braintree_gateways
    get:
      description: Retrieve a braintree gateway
      operationId: GET/braintree_gateways/braintreeGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreeGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/braintreeGateway'
          description: The braintree gateway object
      summary: Retrieve a braintree gateway
      tags:
      - braintree_gateways
    patch:
      description: Update a braintree gateway
      operationId: PATCH/braintree_gateways/braintreeGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreeGatewayId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/braintreeGatewayUpdate'
        required: true
      responses:
        "200":
          description: The updated braintree gateway object
      summary: Update a braintree gateway
      tags:
      - braintree_gateways
  /braintree_gateways/{braintreeGatewayId}/payment_methods:
    get:
      description: Retrieve the payment methods associated to the braintree gateway
      operationId: GET/braintreeGatewayId/payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreeGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_methods associated to the braintree gateway
      summary: Retrieve the payment methods associated to the braintree gateway
      tags:
      - has_many
      - payment_methods
  /braintree_gateways/{braintreeGatewayId}/braintree_payments:
    get:
      description: Retrieve the braintree payments associated to the braintree gateway
      operationId: GET/braintreeGatewayId/braintree_payments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreeGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The braintree_payments associated to the braintree gateway
      summary: Retrieve the braintree payments associated to the braintree gateway
      tags:
      - has_many
      - braintree_payments
  /braintree_payments:
    get:
      description: List all braintree payments
      operationId: GET/braintree_payments
      responses:
        "200":
          description: A list of braintree payment objects
      summary: List all braintree payments
      tags:
      - braintree_payments
    post:
      description: Create a braintree payment
      operationId: POST/braintree_payments
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/braintreePaymentCreate'
        required: true
      responses:
        "201":
          description: The created braintree payment object
      summary: Create a braintree payment
      tags:
      - braintree_payments
  /braintree_payments/{braintreePaymentId}:
    delete:
      description: Delete a braintree payment
      operationId: DELETE/braintree_payments/braintreePaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreePaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a braintree payment
      tags:
      - braintree_payments
    get:
      description: Retrieve a braintree payment
      operationId: GET/braintree_payments/braintreePaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreePaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/braintreePayment'
          description: The braintree payment object
      summary: Retrieve a braintree payment
      tags:
      - braintree_payments
    patch:
      description: Update a braintree payment
      operationId: PATCH/braintree_payments/braintreePaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreePaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/braintreePaymentUpdate'
        required: true
      responses:
        "200":
          description: The updated braintree payment object
      summary: Update a braintree payment
      tags:
      - braintree_payments
  /braintree_payments/{braintreePaymentId}/order:
    get:
      description: Retrieve the order associated to the braintree payment
      operationId: GET/braintreePaymentId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreePaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the braintree payment
      summary: Retrieve the order associated to the braintree payment
      tags:
      - has_one
      - orders
  /braintree_payments/{braintreePaymentId}/payment_gateway:
    get:
      description: Retrieve the payment gateway associated to the braintree payment
      operationId: GET/braintreePaymentId/payment_gateway
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: braintreePaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_gateway associated to the braintree payment
      summary: Retrieve the payment gateway associated to the braintree payment
      tags:
      - has_one
      - payment_gateways
  /bundles:
    get:
      description: List all bundles
      operationId: GET/bundles
      responses:
        "200":
          description: A list of bundle objects
      summary: List all bundles
      tags:
      - bundles
    post:
      description: Create a bundle
      operationId: POST/bundles
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/bundleCreate'
        required: true
      responses:
        "201":
          description: The created bundle object
      summary: Create a bundle
      tags:
      - bundles
  /bundles/{bundleId}:
    delete:
      description: Delete a bundle
      operationId: DELETE/bundles/bundleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a bundle
      tags:
      - bundles
    get:
      description: Retrieve a bundle
      operationId: GET/bundles/bundleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/bundle'
          description: The bundle object
      summary: Retrieve a bundle
      tags:
      - bundles
    patch:
      description: Update a bundle
      operationId: PATCH/bundles/bundleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/bundleUpdate'
        required: true
      responses:
        "200":
          description: The updated bundle object
      summary: Update a bundle
      tags:
      - bundles
  /bundles/{bundleId}/market:
    get:
      description: Retrieve the market associated to the bundle
      operationId: GET/bundleId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the bundle
      summary: Retrieve the market associated to the bundle
      tags:
      - has_one
      - markets
  /bundles/{bundleId}/sku_list:
    get:
      description: Retrieve the sku list associated to the bundle
      operationId: GET/bundleId/sku_list
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list associated to the bundle
      summary: Retrieve the sku list associated to the bundle
      tags:
      - has_one
      - sku_lists
  /bundles/{bundleId}/skus:
    get:
      description: Retrieve the skus associated to the bundle
      operationId: GET/bundleId/skus
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The skus associated to the bundle
      summary: Retrieve the skus associated to the bundle
      tags:
      - has_many
      - skus
  /bundles/{bundleId}/attachments:
    get:
      description: Retrieve the attachments associated to the bundle
      operationId: GET/bundleId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the bundle
      summary: Retrieve the attachments associated to the bundle
      tags:
      - has_many
      - attachments
  /captures:
    get:
      description: List all captures
      operationId: GET/captures
      responses:
        "200":
          description: A list of capture objects
      summary: List all captures
      tags:
      - captures
  /captures/{captureId}:
    get:
      description: Retrieve a capture
      operationId: GET/captures/captureId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: captureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/capture'
          description: The capture object
      summary: Retrieve a capture
      tags:
      - captures
    patch:
      description: Update a capture
      operationId: PATCH/captures/captureId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: captureId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/captureUpdate'
        required: true
      responses:
        "200":
          description: The updated capture object
      summary: Update a capture
      tags:
      - captures
  /captures/{captureId}/order:
    get:
      description: Retrieve the order associated to the capture
      operationId: GET/captureId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: captureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the capture
      summary: Retrieve the order associated to the capture
      tags:
      - has_one
      - orders
  /captures/{captureId}/reference_authorization:
    get:
      description: Retrieve the reference authorization associated to the capture
      operationId: GET/captureId/reference_authorization
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: captureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The reference_authorization associated to the capture
      summary: Retrieve the reference authorization associated to the capture
      tags:
      - has_one
      - authorizations
  /captures/{captureId}/refunds:
    get:
      description: Retrieve the refunds associated to the capture
      operationId: GET/captureId/refunds
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: captureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The refunds associated to the capture
      summary: Retrieve the refunds associated to the capture
      tags:
      - has_many
      - refunds
  /carrier_accounts:
    get:
      description: List all carrier accounts
      operationId: GET/carrier_accounts
      responses:
        "200":
          description: A list of carrier account objects
      summary: List all carrier accounts
      tags:
      - carrier_accounts
  /carrier_accounts/{carrierAccountId}:
    get:
      description: Retrieve a carrier account
      operationId: GET/carrier_accounts/carrierAccountId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: carrierAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/carrierAccount'
          description: The carrier account object
      summary: Retrieve a carrier account
      tags:
      - carrier_accounts
  /carrier_accounts/{carrierAccountId}/market:
    get:
      description: Retrieve the market associated to the carrier account
      operationId: GET/carrierAccountId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: carrierAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the carrier account
      summary: Retrieve the market associated to the carrier account
      tags:
      - has_one
      - markets
  /carrier_accounts/{carrierAccountId}/attachments:
    get:
      description: Retrieve the attachments associated to the carrier account
      operationId: GET/carrierAccountId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: carrierAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the carrier account
      summary: Retrieve the attachments associated to the carrier account
      tags:
      - has_many
      - attachments
  /checkout_com_gateways:
    get:
      description: List all checkout.com gateways
      operationId: GET/checkout_com_gateways
      responses:
        "200":
          description: A list of checkout.com gateway objects
      summary: List all checkout.com gateways
      tags:
      - checkout_com_gateways
    post:
      description: Create a checkout.com gateway
      operationId: POST/checkout_com_gateways
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/checkoutComGatewayCreate'
        required: true
      responses:
        "201":
          description: The created checkout.com gateway object
      summary: Create a checkout.com gateway
      tags:
      - checkout_com_gateways
  /checkout_com_gateways/{checkoutComGatewayId}:
    delete:
      description: Delete a checkout.com gateway
      operationId: DELETE/checkout_com_gateways/checkoutComGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a checkout.com gateway
      tags:
      - checkout_com_gateways
    get:
      description: Retrieve a checkout.com gateway
      operationId: GET/checkout_com_gateways/checkoutComGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/checkoutComGateway'
          description: The checkout.com gateway object
      summary: Retrieve a checkout.com gateway
      tags:
      - checkout_com_gateways
    patch:
      description: Update a checkout.com gateway
      operationId: PATCH/checkout_com_gateways/checkoutComGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComGatewayId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/checkoutComGatewayUpdate'
        required: true
      responses:
        "200":
          description: The updated checkout.com gateway object
      summary: Update a checkout.com gateway
      tags:
      - checkout_com_gateways
  /checkout_com_gateways/{checkoutComGatewayId}/payment_methods:
    get:
      description: Retrieve the payment methods associated to the checkout.com gateway
      operationId: GET/checkoutComGatewayId/payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_methods associated to the checkout.com gateway
      summary: Retrieve the payment methods associated to the checkout.com gateway
      tags:
      - has_many
      - payment_methods
  /checkout_com_gateways/{checkoutComGatewayId}/checkout_com_payments:
    get:
      description: Retrieve the checkout com payments associated to the checkout.com
        gateway
      operationId: GET/checkoutComGatewayId/checkout_com_payments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The checkout_com_payments associated to the checkout.com gateway
      summary: Retrieve the checkout com payments associated to the checkout.com gateway
      tags:
      - has_many
      - checkout_com_payments
  /checkout_com_payments:
    get:
      description: List all checkout.com payments
      operationId: GET/checkout_com_payments
      responses:
        "200":
          description: A list of checkout.com payment objects
      summary: List all checkout.com payments
      tags:
      - checkout_com_payments
    post:
      description: Create a checkout.com payment
      operationId: POST/checkout_com_payments
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/checkoutComPaymentCreate'
        required: true
      responses:
        "201":
          description: The created checkout.com payment object
      summary: Create a checkout.com payment
      tags:
      - checkout_com_payments
  /checkout_com_payments/{checkoutComPaymentId}:
    delete:
      description: Delete a checkout.com payment
      operationId: DELETE/checkout_com_payments/checkoutComPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a checkout.com payment
      tags:
      - checkout_com_payments
    get:
      description: Retrieve a checkout.com payment
      operationId: GET/checkout_com_payments/checkoutComPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/checkoutComPayment'
          description: The checkout.com payment object
      summary: Retrieve a checkout.com payment
      tags:
      - checkout_com_payments
    patch:
      description: Update a checkout.com payment
      operationId: PATCH/checkout_com_payments/checkoutComPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/checkoutComPaymentUpdate'
        required: true
      responses:
        "200":
          description: The updated checkout.com payment object
      summary: Update a checkout.com payment
      tags:
      - checkout_com_payments
  /checkout_com_payments/{checkoutComPaymentId}/order:
    get:
      description: Retrieve the order associated to the checkout.com payment
      operationId: GET/checkoutComPaymentId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the checkout.com payment
      summary: Retrieve the order associated to the checkout.com payment
      tags:
      - has_one
      - orders
  /checkout_com_payments/{checkoutComPaymentId}/payment_gateway:
    get:
      description: Retrieve the payment gateway associated to the checkout.com payment
      operationId: GET/checkoutComPaymentId/payment_gateway
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: checkoutComPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_gateway associated to the checkout.com payment
      summary: Retrieve the payment gateway associated to the checkout.com payment
      tags:
      - has_one
      - payment_gateways
  /coupon_codes_promotion_rules:
    get:
      description: List all coupon codes promotion rules
      operationId: GET/coupon_codes_promotion_rules
      responses:
        "200":
          description: A list of coupon codes promotion rule objects
      summary: List all coupon codes promotion rules
      tags:
      - coupon_codes_promotion_rules
    post:
      description: Create a coupon codes promotion rule
      operationId: POST/coupon_codes_promotion_rules
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/couponCodesPromotionRuleCreate'
        required: true
      responses:
        "201":
          description: The created coupon codes promotion rule object
      summary: Create a coupon codes promotion rule
      tags:
      - coupon_codes_promotion_rules
  /coupon_codes_promotion_rules/{couponCodesPromotionRuleId}:
    delete:
      description: Delete a coupon codes promotion rule
      operationId: DELETE/coupon_codes_promotion_rules/couponCodesPromotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponCodesPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a coupon codes promotion rule
      tags:
      - coupon_codes_promotion_rules
    get:
      description: Retrieve a coupon codes promotion rule
      operationId: GET/coupon_codes_promotion_rules/couponCodesPromotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponCodesPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/couponCodesPromotionRule'
          description: The coupon codes promotion rule object
      summary: Retrieve a coupon codes promotion rule
      tags:
      - coupon_codes_promotion_rules
    patch:
      description: Update a coupon codes promotion rule
      operationId: PATCH/coupon_codes_promotion_rules/couponCodesPromotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponCodesPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/couponCodesPromotionRuleUpdate'
        required: true
      responses:
        "200":
          description: The updated coupon codes promotion rule object
      summary: Update a coupon codes promotion rule
      tags:
      - coupon_codes_promotion_rules
  /coupon_codes_promotion_rules/{couponCodesPromotionRuleId}/coupons:
    get:
      description: Retrieve the coupons associated to the coupon codes promotion rule
      operationId: GET/couponCodesPromotionRuleId/coupons
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponCodesPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The coupons associated to the coupon codes promotion rule
      summary: Retrieve the coupons associated to the coupon codes promotion rule
      tags:
      - has_many
      - coupons
  /coupon_recipients:
    get:
      description: List all coupon recipients
      operationId: GET/coupon_recipients
      responses:
        "200":
          description: A list of coupon recipient objects
      summary: List all coupon recipients
      tags:
      - coupon_recipients
    post:
      description: Create a coupon recipient
      operationId: POST/coupon_recipients
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/couponRecipientCreate'
        required: true
      responses:
        "201":
          description: The created coupon recipient object
      summary: Create a coupon recipient
      tags:
      - coupon_recipients
  /coupon_recipients/{couponRecipientId}:
    delete:
      description: Delete a coupon recipient
      operationId: DELETE/coupon_recipients/couponRecipientId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponRecipientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a coupon recipient
      tags:
      - coupon_recipients
    get:
      description: Retrieve a coupon recipient
      operationId: GET/coupon_recipients/couponRecipientId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponRecipientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/couponRecipient'
          description: The coupon recipient object
      summary: Retrieve a coupon recipient
      tags:
      - coupon_recipients
    patch:
      description: Update a coupon recipient
      operationId: PATCH/coupon_recipients/couponRecipientId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponRecipientId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/couponRecipientUpdate'
        required: true
      responses:
        "200":
          description: The updated coupon recipient object
      summary: Update a coupon recipient
      tags:
      - coupon_recipients
  /coupon_recipients/{couponRecipientId}/customer:
    get:
      description: Retrieve the customer associated to the coupon recipient
      operationId: GET/couponRecipientId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponRecipientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the coupon recipient
      summary: Retrieve the customer associated to the coupon recipient
      tags:
      - has_one
      - customers
  /coupon_recipients/{couponRecipientId}/attachments:
    get:
      description: Retrieve the attachments associated to the coupon recipient
      operationId: GET/couponRecipientId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponRecipientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the coupon recipient
      summary: Retrieve the attachments associated to the coupon recipient
      tags:
      - has_many
      - attachments
  /coupons:
    get:
      description: List all coupons
      operationId: GET/coupons
      responses:
        "200":
          description: A list of coupon objects
      summary: List all coupons
      tags:
      - coupons
    post:
      description: Create a coupon
      operationId: POST/coupons
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/couponCreate'
        required: true
      responses:
        "201":
          description: The created coupon object
      summary: Create a coupon
      tags:
      - coupons
  /coupons/{couponId}:
    delete:
      description: Delete a coupon
      operationId: DELETE/coupons/couponId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a coupon
      tags:
      - coupons
    get:
      description: Retrieve a coupon
      operationId: GET/coupons/couponId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/coupon'
          description: The coupon object
      summary: Retrieve a coupon
      tags:
      - coupons
    patch:
      description: Update a coupon
      operationId: PATCH/coupons/couponId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/couponUpdate'
        required: true
      responses:
        "200":
          description: The updated coupon object
      summary: Update a coupon
      tags:
      - coupons
  /coupons/{couponId}/promotion_rule:
    get:
      description: Retrieve the promotion rule associated to the coupon
      operationId: GET/couponId/promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: couponId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The promotion_rule associated to the coupon
      summary: Retrieve the promotion rule associated to the coupon
      tags:
      - has_one
      - coupon_codes_promotion_rules
  /customer_addresses:
    get:
      description: List all customer addresses
      operationId: GET/customer_addresses
      responses:
        "200":
          description: A list of customer address objects
      summary: List all customer addresses
      tags:
      - customer_addresses
    post:
      description: Create a customer address
      operationId: POST/customer_addresses
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerAddressCreate'
        required: true
      responses:
        "201":
          description: The created customer address object
      summary: Create a customer address
      tags:
      - customer_addresses
  /customer_addresses/{customerAddressId}:
    delete:
      description: Delete a customer address
      operationId: DELETE/customer_addresses/customerAddressId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerAddressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a customer address
      tags:
      - customer_addresses
    get:
      description: Retrieve a customer address
      operationId: GET/customer_addresses/customerAddressId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerAddressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/customerAddress'
          description: The customer address object
      summary: Retrieve a customer address
      tags:
      - customer_addresses
    patch:
      description: Update a customer address
      operationId: PATCH/customer_addresses/customerAddressId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerAddressId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerAddressUpdate'
        required: true
      responses:
        "200":
          description: The updated customer address object
      summary: Update a customer address
      tags:
      - customer_addresses
  /customer_addresses/{customerAddressId}/customer:
    get:
      description: Retrieve the customer associated to the customer address
      operationId: GET/customerAddressId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerAddressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the customer address
      summary: Retrieve the customer associated to the customer address
      tags:
      - has_one
      - customers
  /customer_addresses/{customerAddressId}/address:
    get:
      description: Retrieve the address associated to the customer address
      operationId: GET/customerAddressId/address
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerAddressId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The address associated to the customer address
      summary: Retrieve the address associated to the customer address
      tags:
      - has_one
      - addresses
  /customer_groups:
    get:
      description: List all customer groups
      operationId: GET/customer_groups
      responses:
        "200":
          description: A list of customer group objects
      summary: List all customer groups
      tags:
      - customer_groups
    post:
      description: Create a customer group
      operationId: POST/customer_groups
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerGroupCreate'
        required: true
      responses:
        "201":
          description: The created customer group object
      summary: Create a customer group
      tags:
      - customer_groups
  /customer_groups/{customerGroupId}:
    delete:
      description: Delete a customer group
      operationId: DELETE/customer_groups/customerGroupId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a customer group
      tags:
      - customer_groups
    get:
      description: Retrieve a customer group
      operationId: GET/customer_groups/customerGroupId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/customerGroup'
          description: The customer group object
      summary: Retrieve a customer group
      tags:
      - customer_groups
    patch:
      description: Update a customer group
      operationId: PATCH/customer_groups/customerGroupId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerGroupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerGroupUpdate'
        required: true
      responses:
        "200":
          description: The updated customer group object
      summary: Update a customer group
      tags:
      - customer_groups
  /customer_groups/{customerGroupId}/customers:
    get:
      description: Retrieve the customers associated to the customer group
      operationId: GET/customerGroupId/customers
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customers associated to the customer group
      summary: Retrieve the customers associated to the customer group
      tags:
      - has_many
      - customers
  /customer_groups/{customerGroupId}/markets:
    get:
      description: Retrieve the markets associated to the customer group
      operationId: GET/customerGroupId/markets
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The markets associated to the customer group
      summary: Retrieve the markets associated to the customer group
      tags:
      - has_many
      - markets
  /customer_groups/{customerGroupId}/attachments:
    get:
      description: Retrieve the attachments associated to the customer group
      operationId: GET/customerGroupId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the customer group
      summary: Retrieve the attachments associated to the customer group
      tags:
      - has_many
      - attachments
  /customer_password_resets:
    get:
      description: List all customer password resets
      operationId: GET/customer_password_resets
      responses:
        "200":
          description: A list of customer password reset objects
      summary: List all customer password resets
      tags:
      - customer_password_resets
    post:
      description: Create a customer password reset
      operationId: POST/customer_password_resets
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerPasswordResetCreate'
        required: true
      responses:
        "201":
          description: The created customer password reset object
      summary: Create a customer password reset
      tags:
      - customer_password_resets
  /customer_password_resets/{customerPasswordResetId}:
    delete:
      description: Delete a customer password reset
      operationId: DELETE/customer_password_resets/customerPasswordResetId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerPasswordResetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a customer password reset
      tags:
      - customer_password_resets
    get:
      description: Retrieve a customer password reset
      operationId: GET/customer_password_resets/customerPasswordResetId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerPasswordResetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/customerPasswordReset'
          description: The customer password reset object
      summary: Retrieve a customer password reset
      tags:
      - customer_password_resets
    patch:
      description: Update a customer password reset
      operationId: PATCH/customer_password_resets/customerPasswordResetId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerPasswordResetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerPasswordResetUpdate'
        required: true
      responses:
        "200":
          description: The updated customer password reset object
      summary: Update a customer password reset
      tags:
      - customer_password_resets
  /customer_password_resets/{customerPasswordResetId}/customer:
    get:
      description: Retrieve the customer associated to the customer password reset
      operationId: GET/customerPasswordResetId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerPasswordResetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the customer password reset
      summary: Retrieve the customer associated to the customer password reset
      tags:
      - has_one
      - customers
  /customer_payment_sources:
    get:
      description: List all customer payment sources
      operationId: GET/customer_payment_sources
      responses:
        "200":
          description: A list of customer payment source objects
      summary: List all customer payment sources
      tags:
      - customer_payment_sources
    post:
      description: Create a customer payment source
      operationId: POST/customer_payment_sources
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerPaymentSourceCreate'
        required: true
      responses:
        "201":
          description: The created customer payment source object
      summary: Create a customer payment source
      tags:
      - customer_payment_sources
  /customer_payment_sources/{customerPaymentSourceId}:
    delete:
      description: Delete a customer payment source
      operationId: DELETE/customer_payment_sources/customerPaymentSourceId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerPaymentSourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a customer payment source
      tags:
      - customer_payment_sources
    get:
      description: Retrieve a customer payment source
      operationId: GET/customer_payment_sources/customerPaymentSourceId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerPaymentSourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/customerPaymentSource'
          description: The customer payment source object
      summary: Retrieve a customer payment source
      tags:
      - customer_payment_sources
    patch:
      description: Update a customer payment source
      operationId: PATCH/customer_payment_sources/customerPaymentSourceId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerPaymentSourceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerPaymentSourceUpdate'
        required: true
      responses:
        "200":
          description: The updated customer payment source object
      summary: Update a customer payment source
      tags:
      - customer_payment_sources
  /customer_payment_sources/{customerPaymentSourceId}/customer:
    get:
      description: Retrieve the customer associated to the customer payment source
      operationId: GET/customerPaymentSourceId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerPaymentSourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the customer payment source
      summary: Retrieve the customer associated to the customer payment source
      tags:
      - has_one
      - customers
  /customer_subscriptions:
    get:
      description: List all customer subscriptions
      operationId: GET/customer_subscriptions
      responses:
        "200":
          description: A list of customer subscription objects
      summary: List all customer subscriptions
      tags:
      - customer_subscriptions
    post:
      description: Create a customer subscription
      operationId: POST/customer_subscriptions
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerSubscriptionCreate'
        required: true
      responses:
        "201":
          description: The created customer subscription object
      summary: Create a customer subscription
      tags:
      - customer_subscriptions
  /customer_subscriptions/{customerSubscriptionId}:
    delete:
      description: Delete a customer subscription
      operationId: DELETE/customer_subscriptions/customerSubscriptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a customer subscription
      tags:
      - customer_subscriptions
    get:
      description: Retrieve a customer subscription
      operationId: GET/customer_subscriptions/customerSubscriptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/customerSubscription'
          description: The customer subscription object
      summary: Retrieve a customer subscription
      tags:
      - customer_subscriptions
    patch:
      description: Update a customer subscription
      operationId: PATCH/customer_subscriptions/customerSubscriptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerSubscriptionUpdate'
        required: true
      responses:
        "200":
          description: The updated customer subscription object
      summary: Update a customer subscription
      tags:
      - customer_subscriptions
  /customer_subscriptions/{customerSubscriptionId}/customer:
    get:
      description: Retrieve the customer associated to the customer subscription
      operationId: GET/customerSubscriptionId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the customer subscription
      summary: Retrieve the customer associated to the customer subscription
      tags:
      - has_one
      - customers
  /customers:
    get:
      description: List all customers
      operationId: GET/customers
      responses:
        "200":
          description: A list of customer objects
      summary: List all customers
      tags:
      - customers
    post:
      description: Create a customer
      operationId: POST/customers
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerCreate'
        required: true
      responses:
        "201":
          description: The created customer object
      summary: Create a customer
      tags:
      - customers
  /customers/{customerId}:
    delete:
      description: Delete a customer
      operationId: DELETE/customers/customerId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a customer
      tags:
      - customers
    get:
      description: Retrieve a customer
      operationId: GET/customers/customerId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/customer'
          description: The customer object
      summary: Retrieve a customer
      tags:
      - customers
    patch:
      description: Update a customer
      operationId: PATCH/customers/customerId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/customerUpdate'
        required: true
      responses:
        "200":
          description: The updated customer object
      summary: Update a customer
      tags:
      - customers
  /customers/{customerId}/customer_group:
    get:
      description: Retrieve the customer group associated to the customer
      operationId: GET/customerId/customer_group
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer_group associated to the customer
      summary: Retrieve the customer group associated to the customer
      tags:
      - has_one
      - customer_groups
  /customers/{customerId}/customer_addresses:
    get:
      description: Retrieve the customer addresses associated to the customer
      operationId: GET/customerId/customer_addresses
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer_addresses associated to the customer
      summary: Retrieve the customer addresses associated to the customer
      tags:
      - has_many
      - customer_addresses
  /customers/{customerId}/customer_payment_sources:
    get:
      description: Retrieve the customer payment sources associated to the customer
      operationId: GET/customerId/customer_payment_sources
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer_payment_sources associated to the customer
      summary: Retrieve the customer payment sources associated to the customer
      tags:
      - has_many
      - customer_payment_sources
  /customers/{customerId}/customer_subscriptions:
    get:
      description: Retrieve the customer subscriptions associated to the customer
      operationId: GET/customerId/customer_subscriptions
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer_subscriptions associated to the customer
      summary: Retrieve the customer subscriptions associated to the customer
      tags:
      - has_many
      - customer_subscriptions
  /customers/{customerId}/orders:
    get:
      description: Retrieve the orders associated to the customer
      operationId: GET/customerId/orders
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The orders associated to the customer
      summary: Retrieve the orders associated to the customer
      tags:
      - has_many
      - orders
  /customers/{customerId}/order_subscriptions:
    get:
      description: Retrieve the order subscriptions associated to the customer
      operationId: GET/customerId/order_subscriptions
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_subscriptions associated to the customer
      summary: Retrieve the order subscriptions associated to the customer
      tags:
      - has_many
      - order_subscriptions
  /customers/{customerId}/returns:
    get:
      description: Retrieve the returns associated to the customer
      operationId: GET/customerId/returns
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The returns associated to the customer
      summary: Retrieve the returns associated to the customer
      tags:
      - has_many
      - returns
  /customers/{customerId}/attachments:
    get:
      description: Retrieve the attachments associated to the customer
      operationId: GET/customerId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the customer
      summary: Retrieve the attachments associated to the customer
      tags:
      - has_many
      - attachments
  /delivery_lead_times:
    get:
      description: List all delivery lead times
      operationId: GET/delivery_lead_times
      responses:
        "200":
          description: A list of delivery lead time objects
      summary: List all delivery lead times
      tags:
      - delivery_lead_times
    post:
      description: Create a delivery lead time
      operationId: POST/delivery_lead_times
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/deliveryLeadTimeCreate'
        required: true
      responses:
        "201":
          description: The created delivery lead time object
      summary: Create a delivery lead time
      tags:
      - delivery_lead_times
  /delivery_lead_times/{deliveryLeadTimeId}:
    delete:
      description: Delete a delivery lead time
      operationId: DELETE/delivery_lead_times/deliveryLeadTimeId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: deliveryLeadTimeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a delivery lead time
      tags:
      - delivery_lead_times
    get:
      description: Retrieve a delivery lead time
      operationId: GET/delivery_lead_times/deliveryLeadTimeId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: deliveryLeadTimeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/deliveryLeadTime'
          description: The delivery lead time object
      summary: Retrieve a delivery lead time
      tags:
      - delivery_lead_times
    patch:
      description: Update a delivery lead time
      operationId: PATCH/delivery_lead_times/deliveryLeadTimeId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: deliveryLeadTimeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/deliveryLeadTimeUpdate'
        required: true
      responses:
        "200":
          description: The updated delivery lead time object
      summary: Update a delivery lead time
      tags:
      - delivery_lead_times
  /delivery_lead_times/{deliveryLeadTimeId}/stock_location:
    get:
      description: Retrieve the stock location associated to the delivery lead time
      operationId: GET/deliveryLeadTimeId/stock_location
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: deliveryLeadTimeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_location associated to the delivery lead time
      summary: Retrieve the stock location associated to the delivery lead time
      tags:
      - has_one
      - stock_locations
  /delivery_lead_times/{deliveryLeadTimeId}/shipping_method:
    get:
      description: Retrieve the shipping method associated to the delivery lead time
      operationId: GET/deliveryLeadTimeId/shipping_method
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: deliveryLeadTimeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipping_method associated to the delivery lead time
      summary: Retrieve the shipping method associated to the delivery lead time
      tags:
      - has_one
      - shipping_methods
  /delivery_lead_times/{deliveryLeadTimeId}/attachments:
    get:
      description: Retrieve the attachments associated to the delivery lead time
      operationId: GET/deliveryLeadTimeId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: deliveryLeadTimeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the delivery lead time
      summary: Retrieve the attachments associated to the delivery lead time
      tags:
      - has_many
      - attachments
  /event_callbacks:
    get:
      description: List all event callbacks
      operationId: GET/event_callbacks
      responses:
        "200":
          description: A list of event callback objects
      summary: List all event callbacks
      tags:
      - event_callbacks
  /event_callbacks/{eventCallbackId}:
    get:
      description: Retrieve an event callback
      operationId: GET/event_callbacks/eventCallbackId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: eventCallbackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/eventCallback'
          description: The event callback object
      summary: Retrieve an event callback
      tags:
      - event_callbacks
  /event_callbacks/{eventCallbackId}/webhook:
    get:
      description: Retrieve the webhook associated to the event callback
      operationId: GET/eventCallbackId/webhook
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: eventCallbackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The webhook associated to the event callback
      summary: Retrieve the webhook associated to the event callback
      tags:
      - has_one
      - webhooks
  /external_gateways:
    get:
      description: List all external gateways
      operationId: GET/external_gateways
      responses:
        "200":
          description: A list of external gateway objects
      summary: List all external gateways
      tags:
      - external_gateways
    post:
      description: Create an external gateway
      operationId: POST/external_gateways
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/externalGatewayCreate'
        required: true
      responses:
        "201":
          description: The created external gateway object
      summary: Create an external gateway
      tags:
      - external_gateways
  /external_gateways/{externalGatewayId}:
    delete:
      description: Delete an external gateway
      operationId: DELETE/external_gateways/externalGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an external gateway
      tags:
      - external_gateways
    get:
      description: Retrieve an external gateway
      operationId: GET/external_gateways/externalGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/externalGateway'
          description: The external gateway object
      summary: Retrieve an external gateway
      tags:
      - external_gateways
    patch:
      description: Update an external gateway
      operationId: PATCH/external_gateways/externalGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalGatewayId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/externalGatewayUpdate'
        required: true
      responses:
        "200":
          description: The updated external gateway object
      summary: Update an external gateway
      tags:
      - external_gateways
  /external_gateways/{externalGatewayId}/payment_methods:
    get:
      description: Retrieve the payment methods associated to the external gateway
      operationId: GET/externalGatewayId/payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_methods associated to the external gateway
      summary: Retrieve the payment methods associated to the external gateway
      tags:
      - has_many
      - payment_methods
  /external_gateways/{externalGatewayId}/external_payments:
    get:
      description: Retrieve the external payments associated to the external gateway
      operationId: GET/externalGatewayId/external_payments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The external_payments associated to the external gateway
      summary: Retrieve the external payments associated to the external gateway
      tags:
      - has_many
      - external_payments
  /external_payments:
    get:
      description: List all external payments
      operationId: GET/external_payments
      responses:
        "200":
          description: A list of external payment objects
      summary: List all external payments
      tags:
      - external_payments
    post:
      description: Create an external payment
      operationId: POST/external_payments
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/externalPaymentCreate'
        required: true
      responses:
        "201":
          description: The created external payment object
      summary: Create an external payment
      tags:
      - external_payments
  /external_payments/{externalPaymentId}:
    delete:
      description: Delete an external payment
      operationId: DELETE/external_payments/externalPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an external payment
      tags:
      - external_payments
    get:
      description: Retrieve an external payment
      operationId: GET/external_payments/externalPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/externalPayment'
          description: The external payment object
      summary: Retrieve an external payment
      tags:
      - external_payments
    patch:
      description: Update an external payment
      operationId: PATCH/external_payments/externalPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/externalPaymentUpdate'
        required: true
      responses:
        "200":
          description: The updated external payment object
      summary: Update an external payment
      tags:
      - external_payments
  /external_payments/{externalPaymentId}/order:
    get:
      description: Retrieve the order associated to the external payment
      operationId: GET/externalPaymentId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the external payment
      summary: Retrieve the order associated to the external payment
      tags:
      - has_one
      - orders
  /external_payments/{externalPaymentId}/payment_gateway:
    get:
      description: Retrieve the payment gateway associated to the external payment
      operationId: GET/externalPaymentId/payment_gateway
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_gateway associated to the external payment
      summary: Retrieve the payment gateway associated to the external payment
      tags:
      - has_one
      - payment_gateways
  /external_payments/{externalPaymentId}/wallet:
    get:
      description: Retrieve the wallet associated to the external payment
      operationId: GET/externalPaymentId/wallet
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The wallet associated to the external payment
      summary: Retrieve the wallet associated to the external payment
      tags:
      - has_one
      - customer_payment_sources
  /external_promotions:
    get:
      description: List all external promotions
      operationId: GET/external_promotions
      responses:
        "200":
          description: A list of external promotion objects
      summary: List all external promotions
      tags:
      - external_promotions
    post:
      description: Create an external promotion
      operationId: POST/external_promotions
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/externalPromotionCreate'
        required: true
      responses:
        "201":
          description: The created external promotion object
      summary: Create an external promotion
      tags:
      - external_promotions
  /external_promotions/{externalPromotionId}:
    delete:
      description: Delete an external promotion
      operationId: DELETE/external_promotions/externalPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an external promotion
      tags:
      - external_promotions
    get:
      description: Retrieve an external promotion
      operationId: GET/external_promotions/externalPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/externalPromotion'
          description: The external promotion object
      summary: Retrieve an external promotion
      tags:
      - external_promotions
    patch:
      description: Update an external promotion
      operationId: PATCH/external_promotions/externalPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPromotionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/externalPromotionUpdate'
        required: true
      responses:
        "200":
          description: The updated external promotion object
      summary: Update an external promotion
      tags:
      - external_promotions
  /external_promotions/{externalPromotionId}/market:
    get:
      description: Retrieve the market associated to the external promotion
      operationId: GET/externalPromotionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the external promotion
      summary: Retrieve the market associated to the external promotion
      tags:
      - has_one
      - markets
  /external_promotions/{externalPromotionId}/order_amount_promotion_rule:
    get:
      description: Retrieve the order amount promotion rule associated to the external
        promotion
      operationId: GET/externalPromotionId/order_amount_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_amount_promotion_rule associated to the external
            promotion
      summary: Retrieve the order amount promotion rule associated to the external
        promotion
      tags:
      - has_one
      - order_amount_promotion_rules
  /external_promotions/{externalPromotionId}/sku_list_promotion_rule:
    get:
      description: Retrieve the sku list promotion rule associated to the external
        promotion
      operationId: GET/externalPromotionId/sku_list_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list_promotion_rule associated to the external promotion
      summary: Retrieve the sku list promotion rule associated to the external promotion
      tags:
      - has_one
      - sku_list_promotion_rules
  /external_promotions/{externalPromotionId}/coupon_codes_promotion_rule:
    get:
      description: Retrieve the coupon codes promotion rule associated to the external
        promotion
      operationId: GET/externalPromotionId/coupon_codes_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The coupon_codes_promotion_rule associated to the external
            promotion
      summary: Retrieve the coupon codes promotion rule associated to the external
        promotion
      tags:
      - has_one
      - coupon_codes_promotion_rules
  /external_promotions/{externalPromotionId}/attachments:
    get:
      description: Retrieve the attachments associated to the external promotion
      operationId: GET/externalPromotionId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the external promotion
      summary: Retrieve the attachments associated to the external promotion
      tags:
      - has_many
      - attachments
  /external_tax_calculators:
    get:
      description: List all external tax calculators
      operationId: GET/external_tax_calculators
      responses:
        "200":
          description: A list of external tax calculator objects
      summary: List all external tax calculators
      tags:
      - external_tax_calculators
    post:
      description: Create an external tax calculator
      operationId: POST/external_tax_calculators
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/externalTaxCalculatorCreate'
        required: true
      responses:
        "201":
          description: The created external tax calculator object
      summary: Create an external tax calculator
      tags:
      - external_tax_calculators
  /external_tax_calculators/{externalTaxCalculatorId}:
    delete:
      description: Delete an external tax calculator
      operationId: DELETE/external_tax_calculators/externalTaxCalculatorId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an external tax calculator
      tags:
      - external_tax_calculators
    get:
      description: Retrieve an external tax calculator
      operationId: GET/external_tax_calculators/externalTaxCalculatorId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/externalTaxCalculator'
          description: The external tax calculator object
      summary: Retrieve an external tax calculator
      tags:
      - external_tax_calculators
    patch:
      description: Update an external tax calculator
      operationId: PATCH/external_tax_calculators/externalTaxCalculatorId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/externalTaxCalculatorUpdate'
        required: true
      responses:
        "200":
          description: The updated external tax calculator object
      summary: Update an external tax calculator
      tags:
      - external_tax_calculators
  /external_tax_calculators/{externalTaxCalculatorId}/tax_categories:
    get:
      description: Retrieve the tax categories associated to the external tax calculator
      operationId: GET/externalTaxCalculatorId/tax_categories
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The tax_categories associated to the external tax calculator
      summary: Retrieve the tax categories associated to the external tax calculator
      tags:
      - has_many
      - tax_categories
  /external_tax_calculators/{externalTaxCalculatorId}/markets:
    get:
      description: Retrieve the markets associated to the external tax calculator
      operationId: GET/externalTaxCalculatorId/markets
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The markets associated to the external tax calculator
      summary: Retrieve the markets associated to the external tax calculator
      tags:
      - has_many
      - markets
  /external_tax_calculators/{externalTaxCalculatorId}/attachments:
    get:
      description: Retrieve the attachments associated to the external tax calculator
      operationId: GET/externalTaxCalculatorId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: externalTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the external tax calculator
      summary: Retrieve the attachments associated to the external tax calculator
      tags:
      - has_many
      - attachments
  /fixed_amount_promotions:
    get:
      description: List all fixed amount promotions
      operationId: GET/fixed_amount_promotions
      responses:
        "200":
          description: A list of fixed amount promotion objects
      summary: List all fixed amount promotions
      tags:
      - fixed_amount_promotions
    post:
      description: Create a fixed amount promotion
      operationId: POST/fixed_amount_promotions
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/fixedAmountPromotionCreate'
        required: true
      responses:
        "201":
          description: The created fixed amount promotion object
      summary: Create a fixed amount promotion
      tags:
      - fixed_amount_promotions
  /fixed_amount_promotions/{fixedAmountPromotionId}:
    delete:
      description: Delete a fixed amount promotion
      operationId: DELETE/fixed_amount_promotions/fixedAmountPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedAmountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a fixed amount promotion
      tags:
      - fixed_amount_promotions
    get:
      description: Retrieve a fixed amount promotion
      operationId: GET/fixed_amount_promotions/fixedAmountPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedAmountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/fixedAmountPromotion'
          description: The fixed amount promotion object
      summary: Retrieve a fixed amount promotion
      tags:
      - fixed_amount_promotions
    patch:
      description: Update a fixed amount promotion
      operationId: PATCH/fixed_amount_promotions/fixedAmountPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedAmountPromotionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/fixedAmountPromotionUpdate'
        required: true
      responses:
        "200":
          description: The updated fixed amount promotion object
      summary: Update a fixed amount promotion
      tags:
      - fixed_amount_promotions
  /fixed_amount_promotions/{fixedAmountPromotionId}/market:
    get:
      description: Retrieve the market associated to the fixed amount promotion
      operationId: GET/fixedAmountPromotionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedAmountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the fixed amount promotion
      summary: Retrieve the market associated to the fixed amount promotion
      tags:
      - has_one
      - markets
  /fixed_amount_promotions/{fixedAmountPromotionId}/order_amount_promotion_rule:
    get:
      description: Retrieve the order amount promotion rule associated to the fixed
        amount promotion
      operationId: GET/fixedAmountPromotionId/order_amount_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedAmountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_amount_promotion_rule associated to the fixed amount
            promotion
      summary: Retrieve the order amount promotion rule associated to the fixed amount
        promotion
      tags:
      - has_one
      - order_amount_promotion_rules
  /fixed_amount_promotions/{fixedAmountPromotionId}/sku_list_promotion_rule:
    get:
      description: Retrieve the sku list promotion rule associated to the fixed amount
        promotion
      operationId: GET/fixedAmountPromotionId/sku_list_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedAmountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list_promotion_rule associated to the fixed amount
            promotion
      summary: Retrieve the sku list promotion rule associated to the fixed amount
        promotion
      tags:
      - has_one
      - sku_list_promotion_rules
  /fixed_amount_promotions/{fixedAmountPromotionId}/coupon_codes_promotion_rule:
    get:
      description: Retrieve the coupon codes promotion rule associated to the fixed
        amount promotion
      operationId: GET/fixedAmountPromotionId/coupon_codes_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedAmountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The coupon_codes_promotion_rule associated to the fixed amount
            promotion
      summary: Retrieve the coupon codes promotion rule associated to the fixed amount
        promotion
      tags:
      - has_one
      - coupon_codes_promotion_rules
  /fixed_amount_promotions/{fixedAmountPromotionId}/attachments:
    get:
      description: Retrieve the attachments associated to the fixed amount promotion
      operationId: GET/fixedAmountPromotionId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedAmountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the fixed amount promotion
      summary: Retrieve the attachments associated to the fixed amount promotion
      tags:
      - has_many
      - attachments
  /fixed_price_promotions:
    get:
      description: List all fixed price promotions
      operationId: GET/fixed_price_promotions
      responses:
        "200":
          description: A list of fixed price promotion objects
      summary: List all fixed price promotions
      tags:
      - fixed_price_promotions
    post:
      description: Create a fixed price promotion
      operationId: POST/fixed_price_promotions
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/fixedPricePromotionCreate'
        required: true
      responses:
        "201":
          description: The created fixed price promotion object
      summary: Create a fixed price promotion
      tags:
      - fixed_price_promotions
  /fixed_price_promotions/{fixedPricePromotionId}:
    delete:
      description: Delete a fixed price promotion
      operationId: DELETE/fixed_price_promotions/fixedPricePromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a fixed price promotion
      tags:
      - fixed_price_promotions
    get:
      description: Retrieve a fixed price promotion
      operationId: GET/fixed_price_promotions/fixedPricePromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/fixedPricePromotion'
          description: The fixed price promotion object
      summary: Retrieve a fixed price promotion
      tags:
      - fixed_price_promotions
    patch:
      description: Update a fixed price promotion
      operationId: PATCH/fixed_price_promotions/fixedPricePromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/fixedPricePromotionUpdate'
        required: true
      responses:
        "200":
          description: The updated fixed price promotion object
      summary: Update a fixed price promotion
      tags:
      - fixed_price_promotions
  /fixed_price_promotions/{fixedPricePromotionId}/market:
    get:
      description: Retrieve the market associated to the fixed price promotion
      operationId: GET/fixedPricePromotionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the fixed price promotion
      summary: Retrieve the market associated to the fixed price promotion
      tags:
      - has_one
      - markets
  /fixed_price_promotions/{fixedPricePromotionId}/order_amount_promotion_rule:
    get:
      description: Retrieve the order amount promotion rule associated to the fixed
        price promotion
      operationId: GET/fixedPricePromotionId/order_amount_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_amount_promotion_rule associated to the fixed price
            promotion
      summary: Retrieve the order amount promotion rule associated to the fixed price
        promotion
      tags:
      - has_one
      - order_amount_promotion_rules
  /fixed_price_promotions/{fixedPricePromotionId}/sku_list_promotion_rule:
    get:
      description: Retrieve the sku list promotion rule associated to the fixed price
        promotion
      operationId: GET/fixedPricePromotionId/sku_list_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list_promotion_rule associated to the fixed price promotion
      summary: Retrieve the sku list promotion rule associated to the fixed price
        promotion
      tags:
      - has_one
      - sku_list_promotion_rules
  /fixed_price_promotions/{fixedPricePromotionId}/coupon_codes_promotion_rule:
    get:
      description: Retrieve the coupon codes promotion rule associated to the fixed
        price promotion
      operationId: GET/fixedPricePromotionId/coupon_codes_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The coupon_codes_promotion_rule associated to the fixed price
            promotion
      summary: Retrieve the coupon codes promotion rule associated to the fixed price
        promotion
      tags:
      - has_one
      - coupon_codes_promotion_rules
  /fixed_price_promotions/{fixedPricePromotionId}/attachments:
    get:
      description: Retrieve the attachments associated to the fixed price promotion
      operationId: GET/fixedPricePromotionId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the fixed price promotion
      summary: Retrieve the attachments associated to the fixed price promotion
      tags:
      - has_many
      - attachments
  /fixed_price_promotions/{fixedPricePromotionId}/sku_list:
    get:
      description: Retrieve the sku list associated to the fixed price promotion
      operationId: GET/fixedPricePromotionId/sku_list
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list associated to the fixed price promotion
      summary: Retrieve the sku list associated to the fixed price promotion
      tags:
      - has_one
      - sku_lists
  /fixed_price_promotions/{fixedPricePromotionId}/skus:
    get:
      description: Retrieve the skus associated to the fixed price promotion
      operationId: GET/fixedPricePromotionId/skus
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: fixedPricePromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The skus associated to the fixed price promotion
      summary: Retrieve the skus associated to the fixed price promotion
      tags:
      - has_many
      - skus
  /free_gift_promotions:
    get:
      description: List all free gift promotions
      operationId: GET/free_gift_promotions
      responses:
        "200":
          description: A list of free gift promotion objects
      summary: List all free gift promotions
      tags:
      - free_gift_promotions
    post:
      description: Create a free gift promotion
      operationId: POST/free_gift_promotions
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/freeGiftPromotionCreate'
        required: true
      responses:
        "201":
          description: The created free gift promotion object
      summary: Create a free gift promotion
      tags:
      - free_gift_promotions
  /free_gift_promotions/{freeGiftPromotionId}:
    delete:
      description: Delete a free gift promotion
      operationId: DELETE/free_gift_promotions/freeGiftPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a free gift promotion
      tags:
      - free_gift_promotions
    get:
      description: Retrieve a free gift promotion
      operationId: GET/free_gift_promotions/freeGiftPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/freeGiftPromotion'
          description: The free gift promotion object
      summary: Retrieve a free gift promotion
      tags:
      - free_gift_promotions
    patch:
      description: Update a free gift promotion
      operationId: PATCH/free_gift_promotions/freeGiftPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/freeGiftPromotionUpdate'
        required: true
      responses:
        "200":
          description: The updated free gift promotion object
      summary: Update a free gift promotion
      tags:
      - free_gift_promotions
  /free_gift_promotions/{freeGiftPromotionId}/market:
    get:
      description: Retrieve the market associated to the free gift promotion
      operationId: GET/freeGiftPromotionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the free gift promotion
      summary: Retrieve the market associated to the free gift promotion
      tags:
      - has_one
      - markets
  /free_gift_promotions/{freeGiftPromotionId}/order_amount_promotion_rule:
    get:
      description: Retrieve the order amount promotion rule associated to the free
        gift promotion
      operationId: GET/freeGiftPromotionId/order_amount_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_amount_promotion_rule associated to the free gift
            promotion
      summary: Retrieve the order amount promotion rule associated to the free gift
        promotion
      tags:
      - has_one
      - order_amount_promotion_rules
  /free_gift_promotions/{freeGiftPromotionId}/sku_list_promotion_rule:
    get:
      description: Retrieve the sku list promotion rule associated to the free gift
        promotion
      operationId: GET/freeGiftPromotionId/sku_list_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list_promotion_rule associated to the free gift promotion
      summary: Retrieve the sku list promotion rule associated to the free gift promotion
      tags:
      - has_one
      - sku_list_promotion_rules
  /free_gift_promotions/{freeGiftPromotionId}/coupon_codes_promotion_rule:
    get:
      description: Retrieve the coupon codes promotion rule associated to the free
        gift promotion
      operationId: GET/freeGiftPromotionId/coupon_codes_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The coupon_codes_promotion_rule associated to the free gift
            promotion
      summary: Retrieve the coupon codes promotion rule associated to the free gift
        promotion
      tags:
      - has_one
      - coupon_codes_promotion_rules
  /free_gift_promotions/{freeGiftPromotionId}/attachments:
    get:
      description: Retrieve the attachments associated to the free gift promotion
      operationId: GET/freeGiftPromotionId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the free gift promotion
      summary: Retrieve the attachments associated to the free gift promotion
      tags:
      - has_many
      - attachments
  /free_gift_promotions/{freeGiftPromotionId}/sku_list:
    get:
      description: Retrieve the sku list associated to the free gift promotion
      operationId: GET/freeGiftPromotionId/sku_list
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list associated to the free gift promotion
      summary: Retrieve the sku list associated to the free gift promotion
      tags:
      - has_one
      - sku_lists
  /free_gift_promotions/{freeGiftPromotionId}/skus:
    get:
      description: Retrieve the skus associated to the free gift promotion
      operationId: GET/freeGiftPromotionId/skus
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeGiftPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The skus associated to the free gift promotion
      summary: Retrieve the skus associated to the free gift promotion
      tags:
      - has_many
      - skus
  /free_shipping_promotions:
    get:
      description: List all free shipping promotions
      operationId: GET/free_shipping_promotions
      responses:
        "200":
          description: A list of free shipping promotion objects
      summary: List all free shipping promotions
      tags:
      - free_shipping_promotions
    post:
      description: Create a free shipping promotion
      operationId: POST/free_shipping_promotions
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/freeShippingPromotionCreate'
        required: true
      responses:
        "201":
          description: The created free shipping promotion object
      summary: Create a free shipping promotion
      tags:
      - free_shipping_promotions
  /free_shipping_promotions/{freeShippingPromotionId}:
    delete:
      description: Delete a free shipping promotion
      operationId: DELETE/free_shipping_promotions/freeShippingPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeShippingPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a free shipping promotion
      tags:
      - free_shipping_promotions
    get:
      description: Retrieve a free shipping promotion
      operationId: GET/free_shipping_promotions/freeShippingPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeShippingPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/freeShippingPromotion'
          description: The free shipping promotion object
      summary: Retrieve a free shipping promotion
      tags:
      - free_shipping_promotions
    patch:
      description: Update a free shipping promotion
      operationId: PATCH/free_shipping_promotions/freeShippingPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeShippingPromotionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/freeShippingPromotionUpdate'
        required: true
      responses:
        "200":
          description: The updated free shipping promotion object
      summary: Update a free shipping promotion
      tags:
      - free_shipping_promotions
  /free_shipping_promotions/{freeShippingPromotionId}/market:
    get:
      description: Retrieve the market associated to the free shipping promotion
      operationId: GET/freeShippingPromotionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeShippingPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the free shipping promotion
      summary: Retrieve the market associated to the free shipping promotion
      tags:
      - has_one
      - markets
  /free_shipping_promotions/{freeShippingPromotionId}/order_amount_promotion_rule:
    get:
      description: Retrieve the order amount promotion rule associated to the free
        shipping promotion
      operationId: GET/freeShippingPromotionId/order_amount_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeShippingPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_amount_promotion_rule associated to the free shipping
            promotion
      summary: Retrieve the order amount promotion rule associated to the free shipping
        promotion
      tags:
      - has_one
      - order_amount_promotion_rules
  /free_shipping_promotions/{freeShippingPromotionId}/sku_list_promotion_rule:
    get:
      description: Retrieve the sku list promotion rule associated to the free shipping
        promotion
      operationId: GET/freeShippingPromotionId/sku_list_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeShippingPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list_promotion_rule associated to the free shipping
            promotion
      summary: Retrieve the sku list promotion rule associated to the free shipping
        promotion
      tags:
      - has_one
      - sku_list_promotion_rules
  /free_shipping_promotions/{freeShippingPromotionId}/coupon_codes_promotion_rule:
    get:
      description: Retrieve the coupon codes promotion rule associated to the free
        shipping promotion
      operationId: GET/freeShippingPromotionId/coupon_codes_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeShippingPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The coupon_codes_promotion_rule associated to the free shipping
            promotion
      summary: Retrieve the coupon codes promotion rule associated to the free shipping
        promotion
      tags:
      - has_one
      - coupon_codes_promotion_rules
  /free_shipping_promotions/{freeShippingPromotionId}/attachments:
    get:
      description: Retrieve the attachments associated to the free shipping promotion
      operationId: GET/freeShippingPromotionId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: freeShippingPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the free shipping promotion
      summary: Retrieve the attachments associated to the free shipping promotion
      tags:
      - has_many
      - attachments
  /geocoders:
    get:
      description: List all geocoders
      operationId: GET/geocoders
      responses:
        "200":
          description: A list of geocoder objects
      summary: List all geocoders
      tags:
      - geocoders
  /geocoders/{geocoderId}:
    get:
      description: Retrieve a geocoder
      operationId: GET/geocoders/geocoderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: geocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/geocoder'
          description: The geocoder object
      summary: Retrieve a geocoder
      tags:
      - geocoders
  /geocoders/{geocoderId}/addresses:
    get:
      description: Retrieve the addresses associated to the geocoder
      operationId: GET/geocoderId/addresses
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: geocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The addresses associated to the geocoder
      summary: Retrieve the addresses associated to the geocoder
      tags:
      - has_many
      - addresses
  /geocoders/{geocoderId}/attachments:
    get:
      description: Retrieve the attachments associated to the geocoder
      operationId: GET/geocoderId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: geocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the geocoder
      summary: Retrieve the attachments associated to the geocoder
      tags:
      - has_many
      - attachments
  /gift_card_recipients:
    get:
      description: List all gift card recipients
      operationId: GET/gift_card_recipients
      responses:
        "200":
          description: A list of gift card recipient objects
      summary: List all gift card recipients
      tags:
      - gift_card_recipients
    post:
      description: Create a gift card recipient
      operationId: POST/gift_card_recipients
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/giftCardRecipientCreate'
        required: true
      responses:
        "201":
          description: The created gift card recipient object
      summary: Create a gift card recipient
      tags:
      - gift_card_recipients
  /gift_card_recipients/{giftCardRecipientId}:
    delete:
      description: Delete a gift card recipient
      operationId: DELETE/gift_card_recipients/giftCardRecipientId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardRecipientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a gift card recipient
      tags:
      - gift_card_recipients
    get:
      description: Retrieve a gift card recipient
      operationId: GET/gift_card_recipients/giftCardRecipientId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardRecipientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/giftCardRecipient'
          description: The gift card recipient object
      summary: Retrieve a gift card recipient
      tags:
      - gift_card_recipients
    patch:
      description: Update a gift card recipient
      operationId: PATCH/gift_card_recipients/giftCardRecipientId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardRecipientId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/giftCardRecipientUpdate'
        required: true
      responses:
        "200":
          description: The updated gift card recipient object
      summary: Update a gift card recipient
      tags:
      - gift_card_recipients
  /gift_card_recipients/{giftCardRecipientId}/customer:
    get:
      description: Retrieve the customer associated to the gift card recipient
      operationId: GET/giftCardRecipientId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardRecipientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the gift card recipient
      summary: Retrieve the customer associated to the gift card recipient
      tags:
      - has_one
      - customers
  /gift_card_recipients/{giftCardRecipientId}/attachments:
    get:
      description: Retrieve the attachments associated to the gift card recipient
      operationId: GET/giftCardRecipientId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardRecipientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the gift card recipient
      summary: Retrieve the attachments associated to the gift card recipient
      tags:
      - has_many
      - attachments
  /gift_cards:
    get:
      description: List all gift cards
      operationId: GET/gift_cards
      responses:
        "200":
          description: A list of gift card objects
      summary: List all gift cards
      tags:
      - gift_cards
    post:
      description: Create a gift card
      operationId: POST/gift_cards
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/giftCardCreate'
        required: true
      responses:
        "201":
          description: The created gift card object
      summary: Create a gift card
      tags:
      - gift_cards
  /gift_cards/{giftCardId}:
    delete:
      description: Delete a gift card
      operationId: DELETE/gift_cards/giftCardId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a gift card
      tags:
      - gift_cards
    get:
      description: Retrieve a gift card
      operationId: GET/gift_cards/giftCardId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/giftCard'
          description: The gift card object
      summary: Retrieve a gift card
      tags:
      - gift_cards
    patch:
      description: Update a gift card
      operationId: PATCH/gift_cards/giftCardId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/giftCardUpdate'
        required: true
      responses:
        "200":
          description: The updated gift card object
      summary: Update a gift card
      tags:
      - gift_cards
  /gift_cards/{giftCardId}/market:
    get:
      description: Retrieve the market associated to the gift card
      operationId: GET/giftCardId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the gift card
      summary: Retrieve the market associated to the gift card
      tags:
      - has_one
      - markets
  /gift_cards/{giftCardId}/gift_card_recipient:
    get:
      description: Retrieve the gift card recipient associated to the gift card
      operationId: GET/giftCardId/gift_card_recipient
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The gift_card_recipient associated to the gift card
      summary: Retrieve the gift card recipient associated to the gift card
      tags:
      - has_one
      - gift_card_recipients
  /gift_cards/{giftCardId}/attachments:
    get:
      description: Retrieve the attachments associated to the gift card
      operationId: GET/giftCardId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: giftCardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the gift card
      summary: Retrieve the attachments associated to the gift card
      tags:
      - has_many
      - attachments
  /google_geocoders:
    get:
      description: List all google geocoders
      operationId: GET/google_geocoders
      responses:
        "200":
          description: A list of google geocoder objects
      summary: List all google geocoders
      tags:
      - google_geocoders
    post:
      description: Create a google geocoder
      operationId: POST/google_geocoders
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/googleGeocoderCreate'
        required: true
      responses:
        "201":
          description: The created google geocoder object
      summary: Create a google geocoder
      tags:
      - google_geocoders
  /google_geocoders/{googleGeocoderId}:
    delete:
      description: Delete a google geocoder
      operationId: DELETE/google_geocoders/googleGeocoderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: googleGeocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a google geocoder
      tags:
      - google_geocoders
    get:
      description: Retrieve a google geocoder
      operationId: GET/google_geocoders/googleGeocoderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: googleGeocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/googleGeocoder'
          description: The google geocoder object
      summary: Retrieve a google geocoder
      tags:
      - google_geocoders
    patch:
      description: Update a google geocoder
      operationId: PATCH/google_geocoders/googleGeocoderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: googleGeocoderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/googleGeocoderUpdate'
        required: true
      responses:
        "200":
          description: The updated google geocoder object
      summary: Update a google geocoder
      tags:
      - google_geocoders
  /google_geocoders/{googleGeocoderId}/addresses:
    get:
      description: Retrieve the addresses associated to the google geocoder
      operationId: GET/googleGeocoderId/addresses
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: googleGeocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The addresses associated to the google geocoder
      summary: Retrieve the addresses associated to the google geocoder
      tags:
      - has_many
      - addresses
  /google_geocoders/{googleGeocoderId}/attachments:
    get:
      description: Retrieve the attachments associated to the google geocoder
      operationId: GET/googleGeocoderId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: googleGeocoderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the google geocoder
      summary: Retrieve the attachments associated to the google geocoder
      tags:
      - has_many
      - attachments
  /imports:
    get:
      description: List all imports
      operationId: GET/imports
      responses:
        "200":
          description: A list of import objects
      summary: List all imports
      tags:
      - imports
    post:
      description: Create an import
      operationId: POST/imports
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/importCreate'
        required: true
      responses:
        "201":
          description: The created import object
      summary: Create an import
      tags:
      - imports
  /imports/{importId}:
    delete:
      description: Delete an import
      operationId: DELETE/imports/importId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: importId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an import
      tags:
      - imports
    get:
      description: Retrieve an import
      operationId: GET/imports/importId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: importId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/import'
          description: The import object
      summary: Retrieve an import
      tags:
      - imports
  /in_stock_subscriptions:
    get:
      description: List all in stock subscriptions
      operationId: GET/in_stock_subscriptions
      responses:
        "200":
          description: A list of in stock subscription objects
      summary: List all in stock subscriptions
      tags:
      - in_stock_subscriptions
    post:
      description: Create an in stock subscription
      operationId: POST/in_stock_subscriptions
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/inStockSubscriptionCreate'
        required: true
      responses:
        "201":
          description: The created in stock subscription object
      summary: Create an in stock subscription
      tags:
      - in_stock_subscriptions
  /in_stock_subscriptions/{inStockSubscriptionId}:
    delete:
      description: Delete an in stock subscription
      operationId: DELETE/in_stock_subscriptions/inStockSubscriptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inStockSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an in stock subscription
      tags:
      - in_stock_subscriptions
    get:
      description: Retrieve an in stock subscription
      operationId: GET/in_stock_subscriptions/inStockSubscriptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inStockSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inStockSubscription'
          description: The in stock subscription object
      summary: Retrieve an in stock subscription
      tags:
      - in_stock_subscriptions
    patch:
      description: Update an in stock subscription
      operationId: PATCH/in_stock_subscriptions/inStockSubscriptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inStockSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/inStockSubscriptionUpdate'
        required: true
      responses:
        "200":
          description: The updated in stock subscription object
      summary: Update an in stock subscription
      tags:
      - in_stock_subscriptions
  /in_stock_subscriptions/{inStockSubscriptionId}/market:
    get:
      description: Retrieve the market associated to the in stock subscription
      operationId: GET/inStockSubscriptionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inStockSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the in stock subscription
      summary: Retrieve the market associated to the in stock subscription
      tags:
      - has_one
      - markets
  /in_stock_subscriptions/{inStockSubscriptionId}/customer:
    get:
      description: Retrieve the customer associated to the in stock subscription
      operationId: GET/inStockSubscriptionId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inStockSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the in stock subscription
      summary: Retrieve the customer associated to the in stock subscription
      tags:
      - has_one
      - customers
  /in_stock_subscriptions/{inStockSubscriptionId}/sku:
    get:
      description: Retrieve the sku associated to the in stock subscription
      operationId: GET/inStockSubscriptionId/sku
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inStockSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku associated to the in stock subscription
      summary: Retrieve the sku associated to the in stock subscription
      tags:
      - has_one
      - skus
  /inventory_models:
    get:
      description: List all inventory models
      operationId: GET/inventory_models
      responses:
        "200":
          description: A list of inventory model objects
      summary: List all inventory models
      tags:
      - inventory_models
    post:
      description: Create an inventory model
      operationId: POST/inventory_models
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/inventoryModelCreate'
        required: true
      responses:
        "201":
          description: The created inventory model object
      summary: Create an inventory model
      tags:
      - inventory_models
  /inventory_models/{inventoryModelId}:
    delete:
      description: Delete an inventory model
      operationId: DELETE/inventory_models/inventoryModelId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryModelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an inventory model
      tags:
      - inventory_models
    get:
      description: Retrieve an inventory model
      operationId: GET/inventory_models/inventoryModelId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryModelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inventoryModel'
          description: The inventory model object
      summary: Retrieve an inventory model
      tags:
      - inventory_models
    patch:
      description: Update an inventory model
      operationId: PATCH/inventory_models/inventoryModelId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryModelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/inventoryModelUpdate'
        required: true
      responses:
        "200":
          description: The updated inventory model object
      summary: Update an inventory model
      tags:
      - inventory_models
  /inventory_models/{inventoryModelId}/inventory_stock_locations:
    get:
      description: Retrieve the inventory stock locations associated to the inventory
        model
      operationId: GET/inventoryModelId/inventory_stock_locations
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryModelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The inventory_stock_locations associated to the inventory model
      summary: Retrieve the inventory stock locations associated to the inventory
        model
      tags:
      - has_many
      - inventory_stock_locations
  /inventory_models/{inventoryModelId}/inventory_return_locations:
    get:
      description: Retrieve the inventory return locations associated to the inventory
        model
      operationId: GET/inventoryModelId/inventory_return_locations
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryModelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The inventory_return_locations associated to the inventory
            model
      summary: Retrieve the inventory return locations associated to the inventory
        model
      tags:
      - has_many
      - inventory_return_locations
  /inventory_models/{inventoryModelId}/attachments:
    get:
      description: Retrieve the attachments associated to the inventory model
      operationId: GET/inventoryModelId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryModelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the inventory model
      summary: Retrieve the attachments associated to the inventory model
      tags:
      - has_many
      - attachments
  /inventory_return_locations:
    get:
      description: List all inventory return locations
      operationId: GET/inventory_return_locations
      responses:
        "200":
          description: A list of inventory return location objects
      summary: List all inventory return locations
      tags:
      - inventory_return_locations
    post:
      description: Create an inventory return location
      operationId: POST/inventory_return_locations
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/inventoryReturnLocationCreate'
        required: true
      responses:
        "201":
          description: The created inventory return location object
      summary: Create an inventory return location
      tags:
      - inventory_return_locations
  /inventory_return_locations/{inventoryReturnLocationId}:
    delete:
      description: Delete an inventory return location
      operationId: DELETE/inventory_return_locations/inventoryReturnLocationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryReturnLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an inventory return location
      tags:
      - inventory_return_locations
    get:
      description: Retrieve an inventory return location
      operationId: GET/inventory_return_locations/inventoryReturnLocationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryReturnLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inventoryReturnLocation'
          description: The inventory return location object
      summary: Retrieve an inventory return location
      tags:
      - inventory_return_locations
    patch:
      description: Update an inventory return location
      operationId: PATCH/inventory_return_locations/inventoryReturnLocationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryReturnLocationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/inventoryReturnLocationUpdate'
        required: true
      responses:
        "200":
          description: The updated inventory return location object
      summary: Update an inventory return location
      tags:
      - inventory_return_locations
  /inventory_return_locations/{inventoryReturnLocationId}/stock_location:
    get:
      description: Retrieve the stock location associated to the inventory return
        location
      operationId: GET/inventoryReturnLocationId/stock_location
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryReturnLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_location associated to the inventory return location
      summary: Retrieve the stock location associated to the inventory return location
      tags:
      - has_one
      - stock_locations
  /inventory_return_locations/{inventoryReturnLocationId}/inventory_model:
    get:
      description: Retrieve the inventory model associated to the inventory return
        location
      operationId: GET/inventoryReturnLocationId/inventory_model
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryReturnLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The inventory_model associated to the inventory return location
      summary: Retrieve the inventory model associated to the inventory return location
      tags:
      - has_one
      - inventory_models
  /inventory_stock_locations:
    get:
      description: List all inventory stock locations
      operationId: GET/inventory_stock_locations
      responses:
        "200":
          description: A list of inventory stock location objects
      summary: List all inventory stock locations
      tags:
      - inventory_stock_locations
    post:
      description: Create an inventory stock location
      operationId: POST/inventory_stock_locations
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/inventoryStockLocationCreate'
        required: true
      responses:
        "201":
          description: The created inventory stock location object
      summary: Create an inventory stock location
      tags:
      - inventory_stock_locations
  /inventory_stock_locations/{inventoryStockLocationId}:
    delete:
      description: Delete an inventory stock location
      operationId: DELETE/inventory_stock_locations/inventoryStockLocationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryStockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an inventory stock location
      tags:
      - inventory_stock_locations
    get:
      description: Retrieve an inventory stock location
      operationId: GET/inventory_stock_locations/inventoryStockLocationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryStockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inventoryStockLocation'
          description: The inventory stock location object
      summary: Retrieve an inventory stock location
      tags:
      - inventory_stock_locations
    patch:
      description: Update an inventory stock location
      operationId: PATCH/inventory_stock_locations/inventoryStockLocationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryStockLocationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/inventoryStockLocationUpdate'
        required: true
      responses:
        "200":
          description: The updated inventory stock location object
      summary: Update an inventory stock location
      tags:
      - inventory_stock_locations
  /inventory_stock_locations/{inventoryStockLocationId}/stock_location:
    get:
      description: Retrieve the stock location associated to the inventory stock location
      operationId: GET/inventoryStockLocationId/stock_location
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryStockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_location associated to the inventory stock location
      summary: Retrieve the stock location associated to the inventory stock location
      tags:
      - has_one
      - stock_locations
  /inventory_stock_locations/{inventoryStockLocationId}/inventory_model:
    get:
      description: Retrieve the inventory model associated to the inventory stock
        location
      operationId: GET/inventoryStockLocationId/inventory_model
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: inventoryStockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The inventory_model associated to the inventory stock location
      summary: Retrieve the inventory model associated to the inventory stock location
      tags:
      - has_one
      - inventory_models
  /klarna_gateways:
    get:
      description: List all klarna gateways
      operationId: GET/klarna_gateways
      responses:
        "200":
          description: A list of klarna gateway objects
      summary: List all klarna gateways
      tags:
      - klarna_gateways
    post:
      description: Create a klarna gateway
      operationId: POST/klarna_gateways
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/klarnaGatewayCreate'
        required: true
      responses:
        "201":
          description: The created klarna gateway object
      summary: Create a klarna gateway
      tags:
      - klarna_gateways
  /klarna_gateways/{klarnaGatewayId}:
    delete:
      description: Delete a klarna gateway
      operationId: DELETE/klarna_gateways/klarnaGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a klarna gateway
      tags:
      - klarna_gateways
    get:
      description: Retrieve a klarna gateway
      operationId: GET/klarna_gateways/klarnaGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/klarnaGateway'
          description: The klarna gateway object
      summary: Retrieve a klarna gateway
      tags:
      - klarna_gateways
    patch:
      description: Update a klarna gateway
      operationId: PATCH/klarna_gateways/klarnaGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaGatewayId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/klarnaGatewayUpdate'
        required: true
      responses:
        "200":
          description: The updated klarna gateway object
      summary: Update a klarna gateway
      tags:
      - klarna_gateways
  /klarna_gateways/{klarnaGatewayId}/payment_methods:
    get:
      description: Retrieve the payment methods associated to the klarna gateway
      operationId: GET/klarnaGatewayId/payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_methods associated to the klarna gateway
      summary: Retrieve the payment methods associated to the klarna gateway
      tags:
      - has_many
      - payment_methods
  /klarna_gateways/{klarnaGatewayId}/klarna_payments:
    get:
      description: Retrieve the klarna payments associated to the klarna gateway
      operationId: GET/klarnaGatewayId/klarna_payments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The klarna_payments associated to the klarna gateway
      summary: Retrieve the klarna payments associated to the klarna gateway
      tags:
      - has_many
      - klarna_payments
  /klarna_payments:
    get:
      description: List all klarna payments
      operationId: GET/klarna_payments
      responses:
        "200":
          description: A list of klarna payment objects
      summary: List all klarna payments
      tags:
      - klarna_payments
    post:
      description: Create a klarna payment
      operationId: POST/klarna_payments
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/klarnaPaymentCreate'
        required: true
      responses:
        "201":
          description: The created klarna payment object
      summary: Create a klarna payment
      tags:
      - klarna_payments
  /klarna_payments/{klarnaPaymentId}:
    delete:
      description: Delete a klarna payment
      operationId: DELETE/klarna_payments/klarnaPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a klarna payment
      tags:
      - klarna_payments
    get:
      description: Retrieve a klarna payment
      operationId: GET/klarna_payments/klarnaPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/klarnaPayment'
          description: The klarna payment object
      summary: Retrieve a klarna payment
      tags:
      - klarna_payments
    patch:
      description: Update a klarna payment
      operationId: PATCH/klarna_payments/klarnaPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/klarnaPaymentUpdate'
        required: true
      responses:
        "200":
          description: The updated klarna payment object
      summary: Update a klarna payment
      tags:
      - klarna_payments
  /klarna_payments/{klarnaPaymentId}/order:
    get:
      description: Retrieve the order associated to the klarna payment
      operationId: GET/klarnaPaymentId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the klarna payment
      summary: Retrieve the order associated to the klarna payment
      tags:
      - has_one
      - orders
  /klarna_payments/{klarnaPaymentId}/payment_gateway:
    get:
      description: Retrieve the payment gateway associated to the klarna payment
      operationId: GET/klarnaPaymentId/payment_gateway
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: klarnaPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_gateway associated to the klarna payment
      summary: Retrieve the payment gateway associated to the klarna payment
      tags:
      - has_one
      - payment_gateways
  /line_item_options:
    get:
      description: List all line item options
      operationId: GET/line_item_options
      responses:
        "200":
          description: A list of line item option objects
      summary: List all line item options
      tags:
      - line_item_options
    post:
      description: Create a line item option
      operationId: POST/line_item_options
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/lineItemOptionCreate'
        required: true
      responses:
        "201":
          description: The created line item option object
      summary: Create a line item option
      tags:
      - line_item_options
  /line_item_options/{lineItemOptionId}:
    delete:
      description: Delete a line item option
      operationId: DELETE/line_item_options/lineItemOptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemOptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a line item option
      tags:
      - line_item_options
    get:
      description: Retrieve a line item option
      operationId: GET/line_item_options/lineItemOptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemOptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/lineItemOption'
          description: The line item option object
      summary: Retrieve a line item option
      tags:
      - line_item_options
    patch:
      description: Update a line item option
      operationId: PATCH/line_item_options/lineItemOptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemOptionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/lineItemOptionUpdate'
        required: true
      responses:
        "200":
          description: The updated line item option object
      summary: Update a line item option
      tags:
      - line_item_options
  /line_item_options/{lineItemOptionId}/line_item:
    get:
      description: Retrieve the line item associated to the line item option
      operationId: GET/lineItemOptionId/line_item
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemOptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The line_item associated to the line item option
      summary: Retrieve the line item associated to the line item option
      tags:
      - has_one
      - line_items
  /line_item_options/{lineItemOptionId}/sku_option:
    get:
      description: Retrieve the sku option associated to the line item option
      operationId: GET/lineItemOptionId/sku_option
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemOptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_option associated to the line item option
      summary: Retrieve the sku option associated to the line item option
      tags:
      - has_one
      - sku_options
  /line_items:
    get:
      description: List all line items
      operationId: GET/line_items
      responses:
        "200":
          description: A list of line item objects
      summary: List all line items
      tags:
      - line_items
    post:
      description: Create a line item
      operationId: POST/line_items
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/lineItemCreate'
        required: true
      responses:
        "201":
          description: The created line item object
      summary: Create a line item
      tags:
      - line_items
  /line_items/{lineItemId}:
    delete:
      description: Delete a line item
      operationId: DELETE/line_items/lineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a line item
      tags:
      - line_items
    get:
      description: Retrieve a line item
      operationId: GET/line_items/lineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/lineItem'
          description: The line item object
      summary: Retrieve a line item
      tags:
      - line_items
    patch:
      description: Update a line item
      operationId: PATCH/line_items/lineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/lineItemUpdate'
        required: true
      responses:
        "200":
          description: The updated line item object
      summary: Update a line item
      tags:
      - line_items
  /line_items/{lineItemId}/order:
    get:
      description: Retrieve the order associated to the line item
      operationId: GET/lineItemId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the line item
      summary: Retrieve the order associated to the line item
      tags:
      - has_one
      - orders
  /line_items/{lineItemId}/line_item_options:
    get:
      description: Retrieve the line item options associated to the line item
      operationId: GET/lineItemId/line_item_options
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The line_item_options associated to the line item
      summary: Retrieve the line item options associated to the line item
      tags:
      - has_many
      - line_item_options
  /line_items/{lineItemId}/stock_line_items:
    get:
      description: Retrieve the stock line items associated to the line item
      operationId: GET/lineItemId/stock_line_items
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_line_items associated to the line item
      summary: Retrieve the stock line items associated to the line item
      tags:
      - has_many
      - stock_line_items
  /line_items/{lineItemId}/stock_transfers:
    get:
      description: Retrieve the stock transfers associated to the line item
      operationId: GET/lineItemId/stock_transfers
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: lineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_transfers associated to the line item
      summary: Retrieve the stock transfers associated to the line item
      tags:
      - has_many
      - stock_transfers
  /manual_gateways:
    get:
      description: List all manual gateways
      operationId: GET/manual_gateways
      responses:
        "200":
          description: A list of manual gateway objects
      summary: List all manual gateways
      tags:
      - manual_gateways
    post:
      description: Create a manual gateway
      operationId: POST/manual_gateways
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/manualGatewayCreate'
        required: true
      responses:
        "201":
          description: The created manual gateway object
      summary: Create a manual gateway
      tags:
      - manual_gateways
  /manual_gateways/{manualGatewayId}:
    delete:
      description: Delete a manual gateway
      operationId: DELETE/manual_gateways/manualGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a manual gateway
      tags:
      - manual_gateways
    get:
      description: Retrieve a manual gateway
      operationId: GET/manual_gateways/manualGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/manualGateway'
          description: The manual gateway object
      summary: Retrieve a manual gateway
      tags:
      - manual_gateways
    patch:
      description: Update a manual gateway
      operationId: PATCH/manual_gateways/manualGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualGatewayId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/manualGatewayUpdate'
        required: true
      responses:
        "200":
          description: The updated manual gateway object
      summary: Update a manual gateway
      tags:
      - manual_gateways
  /manual_gateways/{manualGatewayId}/payment_methods:
    get:
      description: Retrieve the payment methods associated to the manual gateway
      operationId: GET/manualGatewayId/payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_methods associated to the manual gateway
      summary: Retrieve the payment methods associated to the manual gateway
      tags:
      - has_many
      - payment_methods
  /manual_tax_calculators:
    get:
      description: List all manual tax calculators
      operationId: GET/manual_tax_calculators
      responses:
        "200":
          description: A list of manual tax calculator objects
      summary: List all manual tax calculators
      tags:
      - manual_tax_calculators
    post:
      description: Create a manual tax calculator
      operationId: POST/manual_tax_calculators
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/manualTaxCalculatorCreate'
        required: true
      responses:
        "201":
          description: The created manual tax calculator object
      summary: Create a manual tax calculator
      tags:
      - manual_tax_calculators
  /manual_tax_calculators/{manualTaxCalculatorId}:
    delete:
      description: Delete a manual tax calculator
      operationId: DELETE/manual_tax_calculators/manualTaxCalculatorId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a manual tax calculator
      tags:
      - manual_tax_calculators
    get:
      description: Retrieve a manual tax calculator
      operationId: GET/manual_tax_calculators/manualTaxCalculatorId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/manualTaxCalculator'
          description: The manual tax calculator object
      summary: Retrieve a manual tax calculator
      tags:
      - manual_tax_calculators
    patch:
      description: Update a manual tax calculator
      operationId: PATCH/manual_tax_calculators/manualTaxCalculatorId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/manualTaxCalculatorUpdate'
        required: true
      responses:
        "200":
          description: The updated manual tax calculator object
      summary: Update a manual tax calculator
      tags:
      - manual_tax_calculators
  /manual_tax_calculators/{manualTaxCalculatorId}/tax_categories:
    get:
      description: Retrieve the tax categories associated to the manual tax calculator
      operationId: GET/manualTaxCalculatorId/tax_categories
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The tax_categories associated to the manual tax calculator
      summary: Retrieve the tax categories associated to the manual tax calculator
      tags:
      - has_many
      - tax_categories
  /manual_tax_calculators/{manualTaxCalculatorId}/markets:
    get:
      description: Retrieve the markets associated to the manual tax calculator
      operationId: GET/manualTaxCalculatorId/markets
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The markets associated to the manual tax calculator
      summary: Retrieve the markets associated to the manual tax calculator
      tags:
      - has_many
      - markets
  /manual_tax_calculators/{manualTaxCalculatorId}/attachments:
    get:
      description: Retrieve the attachments associated to the manual tax calculator
      operationId: GET/manualTaxCalculatorId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the manual tax calculator
      summary: Retrieve the attachments associated to the manual tax calculator
      tags:
      - has_many
      - attachments
  /manual_tax_calculators/{manualTaxCalculatorId}/tax_rules:
    get:
      description: Retrieve the tax rules associated to the manual tax calculator
      operationId: GET/manualTaxCalculatorId/tax_rules
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: manualTaxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The tax_rules associated to the manual tax calculator
      summary: Retrieve the tax rules associated to the manual tax calculator
      tags:
      - has_many
      - tax_rules
  /markets:
    get:
      description: List all markets
      operationId: GET/markets
      responses:
        "200":
          description: A list of market objects
      summary: List all markets
      tags:
      - markets
    post:
      description: Create a market
      operationId: POST/markets
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/marketCreate'
        required: true
      responses:
        "201":
          description: The created market object
      summary: Create a market
      tags:
      - markets
  /markets/{marketId}:
    delete:
      description: Delete a market
      operationId: DELETE/markets/marketId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: marketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a market
      tags:
      - markets
    get:
      description: Retrieve a market
      operationId: GET/markets/marketId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: marketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/market'
          description: The market object
      summary: Retrieve a market
      tags:
      - markets
    patch:
      description: Update a market
      operationId: PATCH/markets/marketId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: marketId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/marketUpdate'
        required: true
      responses:
        "200":
          description: The updated market object
      summary: Update a market
      tags:
      - markets
  /markets/{marketId}/merchant:
    get:
      description: Retrieve the merchant associated to the market
      operationId: GET/marketId/merchant
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: marketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The merchant associated to the market
      summary: Retrieve the merchant associated to the market
      tags:
      - has_one
      - merchants
  /markets/{marketId}/price_list:
    get:
      description: Retrieve the price list associated to the market
      operationId: GET/marketId/price_list
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: marketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The price_list associated to the market
      summary: Retrieve the price list associated to the market
      tags:
      - has_one
      - price_lists
  /markets/{marketId}/inventory_model:
    get:
      description: Retrieve the inventory model associated to the market
      operationId: GET/marketId/inventory_model
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: marketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The inventory_model associated to the market
      summary: Retrieve the inventory model associated to the market
      tags:
      - has_one
      - inventory_models
  /markets/{marketId}/tax_calculator:
    get:
      description: Retrieve the tax calculator associated to the market
      operationId: GET/marketId/tax_calculator
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: marketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The tax_calculator associated to the market
      summary: Retrieve the tax calculator associated to the market
      tags:
      - has_one
      - tax_calculators
  /markets/{marketId}/customer_group:
    get:
      description: Retrieve the customer group associated to the market
      operationId: GET/marketId/customer_group
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: marketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer_group associated to the market
      summary: Retrieve the customer group associated to the market
      tags:
      - has_one
      - customer_groups
  /markets/{marketId}/attachments:
    get:
      description: Retrieve the attachments associated to the market
      operationId: GET/marketId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: marketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the market
      summary: Retrieve the attachments associated to the market
      tags:
      - has_many
      - attachments
  /merchants:
    get:
      description: List all merchants
      operationId: GET/merchants
      responses:
        "200":
          description: A list of merchant objects
      summary: List all merchants
      tags:
      - merchants
    post:
      description: Create a merchant
      operationId: POST/merchants
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/merchantCreate'
        required: true
      responses:
        "201":
          description: The created merchant object
      summary: Create a merchant
      tags:
      - merchants
  /merchants/{merchantId}:
    delete:
      description: Delete a merchant
      operationId: DELETE/merchants/merchantId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: merchantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a merchant
      tags:
      - merchants
    get:
      description: Retrieve a merchant
      operationId: GET/merchants/merchantId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: merchantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/merchant'
          description: The merchant object
      summary: Retrieve a merchant
      tags:
      - merchants
    patch:
      description: Update a merchant
      operationId: PATCH/merchants/merchantId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: merchantId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/merchantUpdate'
        required: true
      responses:
        "200":
          description: The updated merchant object
      summary: Update a merchant
      tags:
      - merchants
  /merchants/{merchantId}/address:
    get:
      description: Retrieve the address associated to the merchant
      operationId: GET/merchantId/address
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: merchantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The address associated to the merchant
      summary: Retrieve the address associated to the merchant
      tags:
      - has_one
      - addresses
  /merchants/{merchantId}/attachments:
    get:
      description: Retrieve the attachments associated to the merchant
      operationId: GET/merchantId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: merchantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the merchant
      summary: Retrieve the attachments associated to the merchant
      tags:
      - has_many
      - attachments
  /order_amount_promotion_rules:
    get:
      description: List all order amount promotion rules
      operationId: GET/order_amount_promotion_rules
      responses:
        "200":
          description: A list of order amount promotion rule objects
      summary: List all order amount promotion rules
      tags:
      - order_amount_promotion_rules
    post:
      description: Create an order amount promotion rule
      operationId: POST/order_amount_promotion_rules
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/orderAmountPromotionRuleCreate'
        required: true
      responses:
        "201":
          description: The created order amount promotion rule object
      summary: Create an order amount promotion rule
      tags:
      - order_amount_promotion_rules
  /order_amount_promotion_rules/{orderAmountPromotionRuleId}:
    delete:
      description: Delete an order amount promotion rule
      operationId: DELETE/order_amount_promotion_rules/orderAmountPromotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderAmountPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an order amount promotion rule
      tags:
      - order_amount_promotion_rules
    get:
      description: Retrieve an order amount promotion rule
      operationId: GET/order_amount_promotion_rules/orderAmountPromotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderAmountPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/orderAmountPromotionRule'
          description: The order amount promotion rule object
      summary: Retrieve an order amount promotion rule
      tags:
      - order_amount_promotion_rules
    patch:
      description: Update an order amount promotion rule
      operationId: PATCH/order_amount_promotion_rules/orderAmountPromotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderAmountPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/orderAmountPromotionRuleUpdate'
        required: true
      responses:
        "200":
          description: The updated order amount promotion rule object
      summary: Update an order amount promotion rule
      tags:
      - order_amount_promotion_rules
  /order_copies:
    get:
      description: List all order copies
      operationId: GET/order_copies
      responses:
        "200":
          description: A list of order copy objects
      summary: List all order copies
      tags:
      - order_copies
    post:
      description: Create an order copy
      operationId: POST/order_copies
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/orderCopyCreate'
        required: true
      responses:
        "201":
          description: The created order copy object
      summary: Create an order copy
      tags:
      - order_copies
  /order_copies/{orderCopyId}:
    delete:
      description: Delete an order copy
      operationId: DELETE/order_copies/orderCopyId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderCopyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an order copy
      tags:
      - order_copies
    get:
      description: Retrieve an order copy
      operationId: GET/order_copies/orderCopyId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderCopyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/orderCopy'
          description: The order copy object
      summary: Retrieve an order copy
      tags:
      - order_copies
  /order_copies/{orderCopyId}/source_order:
    get:
      description: Retrieve the source order associated to the order copy
      operationId: GET/orderCopyId/source_order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderCopyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The source_order associated to the order copy
      summary: Retrieve the source order associated to the order copy
      tags:
      - has_one
      - orders
  /order_copies/{orderCopyId}/target_order:
    get:
      description: Retrieve the target order associated to the order copy
      operationId: GET/orderCopyId/target_order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderCopyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The target_order associated to the order copy
      summary: Retrieve the target order associated to the order copy
      tags:
      - has_one
      - orders
  /order_copies/{orderCopyId}/order_subscription:
    get:
      description: Retrieve the order subscription associated to the order copy
      operationId: GET/orderCopyId/order_subscription
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderCopyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_subscription associated to the order copy
      summary: Retrieve the order subscription associated to the order copy
      tags:
      - has_one
      - order_subscriptions
  /order_subscriptions:
    get:
      description: List all order subscriptions
      operationId: GET/order_subscriptions
      responses:
        "200":
          description: A list of order subscription objects
      summary: List all order subscriptions
      tags:
      - order_subscriptions
    post:
      description: Create an order subscription
      operationId: POST/order_subscriptions
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/orderSubscriptionCreate'
        required: true
      responses:
        "201":
          description: The created order subscription object
      summary: Create an order subscription
      tags:
      - order_subscriptions
  /order_subscriptions/{orderSubscriptionId}:
    delete:
      description: Delete an order subscription
      operationId: DELETE/order_subscriptions/orderSubscriptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an order subscription
      tags:
      - order_subscriptions
    get:
      description: Retrieve an order subscription
      operationId: GET/order_subscriptions/orderSubscriptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/orderSubscription'
          description: The order subscription object
      summary: Retrieve an order subscription
      tags:
      - order_subscriptions
    patch:
      description: Update an order subscription
      operationId: PATCH/order_subscriptions/orderSubscriptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/orderSubscriptionUpdate'
        required: true
      responses:
        "200":
          description: The updated order subscription object
      summary: Update an order subscription
      tags:
      - order_subscriptions
  /order_subscriptions/{orderSubscriptionId}/market:
    get:
      description: Retrieve the market associated to the order subscription
      operationId: GET/orderSubscriptionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the order subscription
      summary: Retrieve the market associated to the order subscription
      tags:
      - has_one
      - markets
  /order_subscriptions/{orderSubscriptionId}/source_order:
    get:
      description: Retrieve the source order associated to the order subscription
      operationId: GET/orderSubscriptionId/source_order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The source_order associated to the order subscription
      summary: Retrieve the source order associated to the order subscription
      tags:
      - has_one
      - orders
  /order_subscriptions/{orderSubscriptionId}/customer:
    get:
      description: Retrieve the customer associated to the order subscription
      operationId: GET/orderSubscriptionId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the order subscription
      summary: Retrieve the customer associated to the order subscription
      tags:
      - has_one
      - customers
  /order_subscriptions/{orderSubscriptionId}/order_copies:
    get:
      description: Retrieve the order copies associated to the order subscription
      operationId: GET/orderSubscriptionId/order_copies
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_copies associated to the order subscription
      summary: Retrieve the order copies associated to the order subscription
      tags:
      - has_many
      - order_copies
  /order_subscriptions/{orderSubscriptionId}/orders:
    get:
      description: Retrieve the orders associated to the order subscription
      operationId: GET/orderSubscriptionId/orders
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderSubscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The orders associated to the order subscription
      summary: Retrieve the orders associated to the order subscription
      tags:
      - has_many
      - orders
  /order_validation_rules:
    get:
      description: List all order validation rules
      operationId: GET/order_validation_rules
      responses:
        "200":
          description: A list of order validation rule objects
      summary: List all order validation rules
      tags:
      - order_validation_rules
  /order_validation_rules/{orderValidationRuleId}:
    get:
      description: Retrieve an order validation rule
      operationId: GET/order_validation_rules/orderValidationRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderValidationRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/orderValidationRule'
          description: The order validation rule object
      summary: Retrieve an order validation rule
      tags:
      - order_validation_rules
  /order_validation_rules/{orderValidationRuleId}/market:
    get:
      description: Retrieve the market associated to the order validation rule
      operationId: GET/orderValidationRuleId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderValidationRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the order validation rule
      summary: Retrieve the market associated to the order validation rule
      tags:
      - has_one
      - markets
  /orders:
    get:
      description: List all orders
      operationId: GET/orders
      responses:
        "200":
          description: A list of order objects
      summary: List all orders
      tags:
      - orders
    post:
      description: Create an order
      operationId: POST/orders
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/orderCreate'
        required: true
      responses:
        "201":
          description: The created order object
      summary: Create an order
      tags:
      - orders
  /orders/{orderId}:
    delete:
      description: Delete an order
      operationId: DELETE/orders/orderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete an order
      tags:
      - orders
    get:
      description: Retrieve an order
      operationId: GET/orders/orderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/order'
          description: The order object
      summary: Retrieve an order
      tags:
      - orders
    patch:
      description: Update an order
      operationId: PATCH/orders/orderId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/orderUpdate'
        required: true
      responses:
        "200":
          description: The updated order object
      summary: Update an order
      tags:
      - orders
  /orders/{orderId}/market:
    get:
      description: Retrieve the market associated to the order
      operationId: GET/orderId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the order
      summary: Retrieve the market associated to the order
      tags:
      - has_one
      - markets
  /orders/{orderId}/customer:
    get:
      description: Retrieve the customer associated to the order
      operationId: GET/orderId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the order
      summary: Retrieve the customer associated to the order
      tags:
      - has_one
      - customers
  /orders/{orderId}/shipping_address:
    get:
      description: Retrieve the shipping address associated to the order
      operationId: GET/orderId/shipping_address
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipping_address associated to the order
      summary: Retrieve the shipping address associated to the order
      tags:
      - has_one
      - addresses
  /orders/{orderId}/billing_address:
    get:
      description: Retrieve the billing address associated to the order
      operationId: GET/orderId/billing_address
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The billing_address associated to the order
      summary: Retrieve the billing address associated to the order
      tags:
      - has_one
      - addresses
  /orders/{orderId}/available_payment_methods:
    get:
      description: Retrieve the available payment methods associated to the order
      operationId: GET/orderId/available_payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The available_payment_methods associated to the order
      summary: Retrieve the available payment methods associated to the order
      tags:
      - has_many
      - payment_methods
  /orders/{orderId}/available_customer_payment_sources:
    get:
      description: Retrieve the available customer payment sources associated to the
        order
      operationId: GET/orderId/available_customer_payment_sources
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The available_customer_payment_sources associated to the order
      summary: Retrieve the available customer payment sources associated to the order
      tags:
      - has_many
      - customer_payment_sources
  /orders/{orderId}/available_free_skus:
    get:
      description: Retrieve the available free skus associated to the order
      operationId: GET/orderId/available_free_skus
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The available_free_skus associated to the order
      summary: Retrieve the available free skus associated to the order
      tags:
      - has_many
      - skus
  /orders/{orderId}/available_free_bundles:
    get:
      description: Retrieve the available free bundles associated to the order
      operationId: GET/orderId/available_free_bundles
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The available_free_bundles associated to the order
      summary: Retrieve the available free bundles associated to the order
      tags:
      - has_many
      - bundles
  /orders/{orderId}/payment_method:
    get:
      description: Retrieve the payment method associated to the order
      operationId: GET/orderId/payment_method
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_method associated to the order
      summary: Retrieve the payment method associated to the order
      tags:
      - has_one
      - payment_methods
  /orders/{orderId}/line_items:
    get:
      description: Retrieve the line items associated to the order
      operationId: GET/orderId/line_items
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The line_items associated to the order
      summary: Retrieve the line items associated to the order
      tags:
      - has_many
      - line_items
  /orders/{orderId}/shipments:
    get:
      description: Retrieve the shipments associated to the order
      operationId: GET/orderId/shipments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipments associated to the order
      summary: Retrieve the shipments associated to the order
      tags:
      - has_many
      - shipments
  /orders/{orderId}/authorizations:
    get:
      description: Retrieve the authorizations associated to the order
      operationId: GET/orderId/authorizations
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The authorizations associated to the order
      summary: Retrieve the authorizations associated to the order
      tags:
      - has_many
      - authorizations
  /orders/{orderId}/captures:
    get:
      description: Retrieve the captures associated to the order
      operationId: GET/orderId/captures
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The captures associated to the order
      summary: Retrieve the captures associated to the order
      tags:
      - has_many
      - captures
  /orders/{orderId}/voids:
    get:
      description: Retrieve the voids associated to the order
      operationId: GET/orderId/voids
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The voids associated to the order
      summary: Retrieve the voids associated to the order
      tags:
      - has_many
      - voids
  /orders/{orderId}/refunds:
    get:
      description: Retrieve the refunds associated to the order
      operationId: GET/orderId/refunds
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The refunds associated to the order
      summary: Retrieve the refunds associated to the order
      tags:
      - has_many
      - refunds
  /orders/{orderId}/order_subscriptions:
    get:
      description: Retrieve the order subscriptions associated to the order
      operationId: GET/orderId/order_subscriptions
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_subscriptions associated to the order
      summary: Retrieve the order subscriptions associated to the order
      tags:
      - has_many
      - order_subscriptions
  /orders/{orderId}/order_copies:
    get:
      description: Retrieve the order copies associated to the order
      operationId: GET/orderId/order_copies
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_copies associated to the order
      summary: Retrieve the order copies associated to the order
      tags:
      - has_many
      - order_copies
  /orders/{orderId}/attachments:
    get:
      description: Retrieve the attachments associated to the order
      operationId: GET/orderId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the order
      summary: Retrieve the attachments associated to the order
      tags:
      - has_many
      - attachments
  /organization:
    get:
      description: Retrieve the organization
      operationId: GET/organization/organizationId
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/organization'
          description: The organization object
      summary: Retrieve the organization
      tags:
      - organization
      - singleton
  /packages:
    get:
      description: List all packages
      operationId: GET/packages
      responses:
        "200":
          description: A list of package objects
      summary: List all packages
      tags:
      - packages
    post:
      description: Create a package
      operationId: POST/packages
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/packageCreate'
        required: true
      responses:
        "201":
          description: The created package object
      summary: Create a package
      tags:
      - packages
  /packages/{packageId}:
    delete:
      description: Delete a package
      operationId: DELETE/packages/packageId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a package
      tags:
      - packages
    get:
      description: Retrieve a package
      operationId: GET/packages/packageId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/package'
          description: The package object
      summary: Retrieve a package
      tags:
      - packages
    patch:
      description: Update a package
      operationId: PATCH/packages/packageId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/packageUpdate'
        required: true
      responses:
        "200":
          description: The updated package object
      summary: Update a package
      tags:
      - packages
  /packages/{packageId}/stock_location:
    get:
      description: Retrieve the stock location associated to the package
      operationId: GET/packageId/stock_location
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_location associated to the package
      summary: Retrieve the stock location associated to the package
      tags:
      - has_one
      - stock_locations
  /packages/{packageId}/parcels:
    get:
      description: Retrieve the parcels associated to the package
      operationId: GET/packageId/parcels
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The parcels associated to the package
      summary: Retrieve the parcels associated to the package
      tags:
      - has_many
      - parcels
  /packages/{packageId}/attachments:
    get:
      description: Retrieve the attachments associated to the package
      operationId: GET/packageId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the package
      summary: Retrieve the attachments associated to the package
      tags:
      - has_many
      - attachments
  /parcel_line_items:
    get:
      description: List all parcel line items
      operationId: GET/parcel_line_items
      responses:
        "200":
          description: A list of parcel line item objects
      summary: List all parcel line items
      tags:
      - parcel_line_items
    post:
      description: Create a parcel line item
      operationId: POST/parcel_line_items
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/parcelLineItemCreate'
        required: true
      responses:
        "201":
          description: The created parcel line item object
      summary: Create a parcel line item
      tags:
      - parcel_line_items
  /parcel_line_items/{parcelLineItemId}:
    delete:
      description: Delete a parcel line item
      operationId: DELETE/parcel_line_items/parcelLineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a parcel line item
      tags:
      - parcel_line_items
    get:
      description: Retrieve a parcel line item
      operationId: GET/parcel_line_items/parcelLineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/parcelLineItem'
          description: The parcel line item object
      summary: Retrieve a parcel line item
      tags:
      - parcel_line_items
    patch:
      description: Update a parcel line item
      operationId: PATCH/parcel_line_items/parcelLineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelLineItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/parcelLineItemUpdate'
        required: true
      responses:
        "200":
          description: The updated parcel line item object
      summary: Update a parcel line item
      tags:
      - parcel_line_items
  /parcel_line_items/{parcelLineItemId}/parcel:
    get:
      description: Retrieve the parcel associated to the parcel line item
      operationId: GET/parcelLineItemId/parcel
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The parcel associated to the parcel line item
      summary: Retrieve the parcel associated to the parcel line item
      tags:
      - has_one
      - parcels
  /parcel_line_items/{parcelLineItemId}/stock_line_item:
    get:
      description: Retrieve the stock line item associated to the parcel line item
      operationId: GET/parcelLineItemId/stock_line_item
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_line_item associated to the parcel line item
      summary: Retrieve the stock line item associated to the parcel line item
      tags:
      - has_one
      - stock_line_items
  /parcels:
    get:
      description: List all parcels
      operationId: GET/parcels
      responses:
        "200":
          description: A list of parcel objects
      summary: List all parcels
      tags:
      - parcels
    post:
      description: Create a parcel
      operationId: POST/parcels
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/parcelCreate'
        required: true
      responses:
        "201":
          description: The created parcel object
      summary: Create a parcel
      tags:
      - parcels
  /parcels/{parcelId}:
    delete:
      description: Delete a parcel
      operationId: DELETE/parcels/parcelId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a parcel
      tags:
      - parcels
    get:
      description: Retrieve a parcel
      operationId: GET/parcels/parcelId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/parcel'
          description: The parcel object
      summary: Retrieve a parcel
      tags:
      - parcels
    patch:
      description: Update a parcel
      operationId: PATCH/parcels/parcelId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/parcelUpdate'
        required: true
      responses:
        "200":
          description: The updated parcel object
      summary: Update a parcel
      tags:
      - parcels
  /parcels/{parcelId}/shipment:
    get:
      description: Retrieve the shipment associated to the parcel
      operationId: GET/parcelId/shipment
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipment associated to the parcel
      summary: Retrieve the shipment associated to the parcel
      tags:
      - has_one
      - shipments
  /parcels/{parcelId}/package:
    get:
      description: Retrieve the package associated to the parcel
      operationId: GET/parcelId/package
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The package associated to the parcel
      summary: Retrieve the package associated to the parcel
      tags:
      - has_one
      - packages
  /parcels/{parcelId}/parcel_line_items:
    get:
      description: Retrieve the parcel line items associated to the parcel
      operationId: GET/parcelId/parcel_line_items
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The parcel_line_items associated to the parcel
      summary: Retrieve the parcel line items associated to the parcel
      tags:
      - has_many
      - parcel_line_items
  /parcels/{parcelId}/attachments:
    get:
      description: Retrieve the attachments associated to the parcel
      operationId: GET/parcelId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: parcelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the parcel
      summary: Retrieve the attachments associated to the parcel
      tags:
      - has_many
      - attachments
  /payment_gateways:
    get:
      description: List all payment gateways
      operationId: GET/payment_gateways
      responses:
        "200":
          description: A list of payment gateway objects
      summary: List all payment gateways
      tags:
      - payment_gateways
  /payment_gateways/{paymentGatewayId}:
    get:
      description: Retrieve a payment gateway
      operationId: GET/payment_gateways/paymentGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paymentGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/paymentGateway'
          description: The payment gateway object
      summary: Retrieve a payment gateway
      tags:
      - payment_gateways
  /payment_gateways/{paymentGatewayId}/payment_methods:
    get:
      description: Retrieve the payment methods associated to the payment gateway
      operationId: GET/paymentGatewayId/payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paymentGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_methods associated to the payment gateway
      summary: Retrieve the payment methods associated to the payment gateway
      tags:
      - has_many
      - payment_methods
  /payment_methods:
    get:
      description: List all payment methods
      operationId: GET/payment_methods
      responses:
        "200":
          description: A list of payment method objects
      summary: List all payment methods
      tags:
      - payment_methods
    post:
      description: Create a payment method
      operationId: POST/payment_methods
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/paymentMethodCreate'
        required: true
      responses:
        "201":
          description: The created payment method object
      summary: Create a payment method
      tags:
      - payment_methods
  /payment_methods/{paymentMethodId}:
    delete:
      description: Delete a payment method
      operationId: DELETE/payment_methods/paymentMethodId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a payment method
      tags:
      - payment_methods
    get:
      description: Retrieve a payment method
      operationId: GET/payment_methods/paymentMethodId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/paymentMethod'
          description: The payment method object
      summary: Retrieve a payment method
      tags:
      - payment_methods
    patch:
      description: Update a payment method
      operationId: PATCH/payment_methods/paymentMethodId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/paymentMethodUpdate'
        required: true
      responses:
        "200":
          description: The updated payment method object
      summary: Update a payment method
      tags:
      - payment_methods
  /payment_methods/{paymentMethodId}/market:
    get:
      description: Retrieve the market associated to the payment method
      operationId: GET/paymentMethodId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the payment method
      summary: Retrieve the market associated to the payment method
      tags:
      - has_one
      - markets
  /payment_methods/{paymentMethodId}/payment_gateway:
    get:
      description: Retrieve the payment gateway associated to the payment method
      operationId: GET/paymentMethodId/payment_gateway
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_gateway associated to the payment method
      summary: Retrieve the payment gateway associated to the payment method
      tags:
      - has_one
      - payment_gateways
  /payment_methods/{paymentMethodId}/attachments:
    get:
      description: Retrieve the attachments associated to the payment method
      operationId: GET/paymentMethodId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paymentMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the payment method
      summary: Retrieve the attachments associated to the payment method
      tags:
      - has_many
      - attachments
  /paypal_gateways:
    get:
      description: List all paypal gateways
      operationId: GET/paypal_gateways
      responses:
        "200":
          description: A list of paypal gateway objects
      summary: List all paypal gateways
      tags:
      - paypal_gateways
    post:
      description: Create a paypal gateway
      operationId: POST/paypal_gateways
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/paypalGatewayCreate'
        required: true
      responses:
        "201":
          description: The created paypal gateway object
      summary: Create a paypal gateway
      tags:
      - paypal_gateways
  /paypal_gateways/{paypalGatewayId}:
    delete:
      description: Delete a paypal gateway
      operationId: DELETE/paypal_gateways/paypalGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a paypal gateway
      tags:
      - paypal_gateways
    get:
      description: Retrieve a paypal gateway
      operationId: GET/paypal_gateways/paypalGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/paypalGateway'
          description: The paypal gateway object
      summary: Retrieve a paypal gateway
      tags:
      - paypal_gateways
    patch:
      description: Update a paypal gateway
      operationId: PATCH/paypal_gateways/paypalGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalGatewayId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/paypalGatewayUpdate'
        required: true
      responses:
        "200":
          description: The updated paypal gateway object
      summary: Update a paypal gateway
      tags:
      - paypal_gateways
  /paypal_gateways/{paypalGatewayId}/payment_methods:
    get:
      description: Retrieve the payment methods associated to the paypal gateway
      operationId: GET/paypalGatewayId/payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_methods associated to the paypal gateway
      summary: Retrieve the payment methods associated to the paypal gateway
      tags:
      - has_many
      - payment_methods
  /paypal_gateways/{paypalGatewayId}/paypal_payments:
    get:
      description: Retrieve the paypal payments associated to the paypal gateway
      operationId: GET/paypalGatewayId/paypal_payments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The paypal_payments associated to the paypal gateway
      summary: Retrieve the paypal payments associated to the paypal gateway
      tags:
      - has_many
      - paypal_payments
  /paypal_payments:
    get:
      description: List all paypal payments
      operationId: GET/paypal_payments
      responses:
        "200":
          description: A list of paypal payment objects
      summary: List all paypal payments
      tags:
      - paypal_payments
    post:
      description: Create a paypal payment
      operationId: POST/paypal_payments
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/paypalPaymentCreate'
        required: true
      responses:
        "201":
          description: The created paypal payment object
      summary: Create a paypal payment
      tags:
      - paypal_payments
  /paypal_payments/{paypalPaymentId}:
    delete:
      description: Delete a paypal payment
      operationId: DELETE/paypal_payments/paypalPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a paypal payment
      tags:
      - paypal_payments
    get:
      description: Retrieve a paypal payment
      operationId: GET/paypal_payments/paypalPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/paypalPayment'
          description: The paypal payment object
      summary: Retrieve a paypal payment
      tags:
      - paypal_payments
    patch:
      description: Update a paypal payment
      operationId: PATCH/paypal_payments/paypalPaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/paypalPaymentUpdate'
        required: true
      responses:
        "200":
          description: The updated paypal payment object
      summary: Update a paypal payment
      tags:
      - paypal_payments
  /paypal_payments/{paypalPaymentId}/order:
    get:
      description: Retrieve the order associated to the paypal payment
      operationId: GET/paypalPaymentId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the paypal payment
      summary: Retrieve the order associated to the paypal payment
      tags:
      - has_one
      - orders
  /paypal_payments/{paypalPaymentId}/payment_gateway:
    get:
      description: Retrieve the payment gateway associated to the paypal payment
      operationId: GET/paypalPaymentId/payment_gateway
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: paypalPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_gateway associated to the paypal payment
      summary: Retrieve the payment gateway associated to the paypal payment
      tags:
      - has_one
      - payment_gateways
  /percentage_discount_promotions:
    get:
      description: List all percentage discount promotions
      operationId: GET/percentage_discount_promotions
      responses:
        "200":
          description: A list of percentage discount promotion objects
      summary: List all percentage discount promotions
      tags:
      - percentage_discount_promotions
    post:
      description: Create a percentage discount promotion
      operationId: POST/percentage_discount_promotions
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/percentageDiscountPromotionCreate'
        required: true
      responses:
        "201":
          description: The created percentage discount promotion object
      summary: Create a percentage discount promotion
      tags:
      - percentage_discount_promotions
  /percentage_discount_promotions/{percentageDiscountPromotionId}:
    delete:
      description: Delete a percentage discount promotion
      operationId: DELETE/percentage_discount_promotions/percentageDiscountPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a percentage discount promotion
      tags:
      - percentage_discount_promotions
    get:
      description: Retrieve a percentage discount promotion
      operationId: GET/percentage_discount_promotions/percentageDiscountPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/percentageDiscountPromotion'
          description: The percentage discount promotion object
      summary: Retrieve a percentage discount promotion
      tags:
      - percentage_discount_promotions
    patch:
      description: Update a percentage discount promotion
      operationId: PATCH/percentage_discount_promotions/percentageDiscountPromotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/percentageDiscountPromotionUpdate'
        required: true
      responses:
        "200":
          description: The updated percentage discount promotion object
      summary: Update a percentage discount promotion
      tags:
      - percentage_discount_promotions
  /percentage_discount_promotions/{percentageDiscountPromotionId}/market:
    get:
      description: Retrieve the market associated to the percentage discount promotion
      operationId: GET/percentageDiscountPromotionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the percentage discount promotion
      summary: Retrieve the market associated to the percentage discount promotion
      tags:
      - has_one
      - markets
  /percentage_discount_promotions/{percentageDiscountPromotionId}/order_amount_promotion_rule:
    get:
      description: Retrieve the order amount promotion rule associated to the percentage
        discount promotion
      operationId: GET/percentageDiscountPromotionId/order_amount_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_amount_promotion_rule associated to the percentage
            discount promotion
      summary: Retrieve the order amount promotion rule associated to the percentage
        discount promotion
      tags:
      - has_one
      - order_amount_promotion_rules
  /percentage_discount_promotions/{percentageDiscountPromotionId}/sku_list_promotion_rule:
    get:
      description: Retrieve the sku list promotion rule associated to the percentage
        discount promotion
      operationId: GET/percentageDiscountPromotionId/sku_list_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list_promotion_rule associated to the percentage discount
            promotion
      summary: Retrieve the sku list promotion rule associated to the percentage discount
        promotion
      tags:
      - has_one
      - sku_list_promotion_rules
  /percentage_discount_promotions/{percentageDiscountPromotionId}/coupon_codes_promotion_rule:
    get:
      description: Retrieve the coupon codes promotion rule associated to the percentage
        discount promotion
      operationId: GET/percentageDiscountPromotionId/coupon_codes_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The coupon_codes_promotion_rule associated to the percentage
            discount promotion
      summary: Retrieve the coupon codes promotion rule associated to the percentage
        discount promotion
      tags:
      - has_one
      - coupon_codes_promotion_rules
  /percentage_discount_promotions/{percentageDiscountPromotionId}/attachments:
    get:
      description: Retrieve the attachments associated to the percentage discount
        promotion
      operationId: GET/percentageDiscountPromotionId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the percentage discount promotion
      summary: Retrieve the attachments associated to the percentage discount promotion
      tags:
      - has_many
      - attachments
  /percentage_discount_promotions/{percentageDiscountPromotionId}/sku_list:
    get:
      description: Retrieve the sku list associated to the percentage discount promotion
      operationId: GET/percentageDiscountPromotionId/sku_list
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list associated to the percentage discount promotion
      summary: Retrieve the sku list associated to the percentage discount promotion
      tags:
      - has_one
      - sku_lists
  /percentage_discount_promotions/{percentageDiscountPromotionId}/skus:
    get:
      description: Retrieve the skus associated to the percentage discount promotion
      operationId: GET/percentageDiscountPromotionId/skus
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: percentageDiscountPromotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The skus associated to the percentage discount promotion
      summary: Retrieve the skus associated to the percentage discount promotion
      tags:
      - has_many
      - skus
  /price_lists:
    get:
      description: List all price lists
      operationId: GET/price_lists
      responses:
        "200":
          description: A list of price list objects
      summary: List all price lists
      tags:
      - price_lists
    post:
      description: Create a price list
      operationId: POST/price_lists
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/priceListCreate'
        required: true
      responses:
        "201":
          description: The created price list object
      summary: Create a price list
      tags:
      - price_lists
  /price_lists/{priceListId}:
    delete:
      description: Delete a price list
      operationId: DELETE/price_lists/priceListId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a price list
      tags:
      - price_lists
    get:
      description: Retrieve a price list
      operationId: GET/price_lists/priceListId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/priceList'
          description: The price list object
      summary: Retrieve a price list
      tags:
      - price_lists
    patch:
      description: Update a price list
      operationId: PATCH/price_lists/priceListId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceListId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/priceListUpdate'
        required: true
      responses:
        "200":
          description: The updated price list object
      summary: Update a price list
      tags:
      - price_lists
  /price_lists/{priceListId}/prices:
    get:
      description: Retrieve the prices associated to the price list
      operationId: GET/priceListId/prices
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The prices associated to the price list
      summary: Retrieve the prices associated to the price list
      tags:
      - has_many
      - prices
  /price_lists/{priceListId}/attachments:
    get:
      description: Retrieve the attachments associated to the price list
      operationId: GET/priceListId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the price list
      summary: Retrieve the attachments associated to the price list
      tags:
      - has_many
      - attachments
  /prices:
    get:
      description: List all prices
      operationId: GET/prices
      responses:
        "200":
          description: A list of price objects
      summary: List all prices
      tags:
      - prices
    post:
      description: Create a price
      operationId: POST/prices
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/priceCreate'
        required: true
      responses:
        "201":
          description: The created price object
      summary: Create a price
      tags:
      - prices
  /prices/{priceId}:
    delete:
      description: Delete a price
      operationId: DELETE/prices/priceId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a price
      tags:
      - prices
    get:
      description: Retrieve a price
      operationId: GET/prices/priceId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/price'
          description: The price object
      summary: Retrieve a price
      tags:
      - prices
    patch:
      description: Update a price
      operationId: PATCH/prices/priceId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/priceUpdate'
        required: true
      responses:
        "200":
          description: The updated price object
      summary: Update a price
      tags:
      - prices
  /prices/{priceId}/price_list:
    get:
      description: Retrieve the price list associated to the price
      operationId: GET/priceId/price_list
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The price_list associated to the price
      summary: Retrieve the price list associated to the price
      tags:
      - has_one
      - price_lists
  /prices/{priceId}/sku:
    get:
      description: Retrieve the sku associated to the price
      operationId: GET/priceId/sku
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku associated to the price
      summary: Retrieve the sku associated to the price
      tags:
      - has_one
      - skus
  /prices/{priceId}/attachments:
    get:
      description: Retrieve the attachments associated to the price
      operationId: GET/priceId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: priceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the price
      summary: Retrieve the attachments associated to the price
      tags:
      - has_many
      - attachments
  /promotion_rules:
    get:
      description: List all promotion rules
      operationId: GET/promotion_rules
      responses:
        "200":
          description: A list of promotion rule objects
      summary: List all promotion rules
      tags:
      - promotion_rules
  /promotion_rules/{promotionRuleId}:
    get:
      description: Retrieve a promotion rule
      operationId: GET/promotion_rules/promotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: promotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/promotionRule'
          description: The promotion rule object
      summary: Retrieve a promotion rule
      tags:
      - promotion_rules
  /promotions:
    get:
      description: List all promotions
      operationId: GET/promotions
      responses:
        "200":
          description: A list of promotion objects
      summary: List all promotions
      tags:
      - promotions
  /promotions/{promotionId}:
    get:
      description: Retrieve a promotion
      operationId: GET/promotions/promotionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: promotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/promotion'
          description: The promotion object
      summary: Retrieve a promotion
      tags:
      - promotions
  /promotions/{promotionId}/market:
    get:
      description: Retrieve the market associated to the promotion
      operationId: GET/promotionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: promotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the promotion
      summary: Retrieve the market associated to the promotion
      tags:
      - has_one
      - markets
  /promotions/{promotionId}/order_amount_promotion_rule:
    get:
      description: Retrieve the order amount promotion rule associated to the promotion
      operationId: GET/promotionId/order_amount_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: promotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order_amount_promotion_rule associated to the promotion
      summary: Retrieve the order amount promotion rule associated to the promotion
      tags:
      - has_one
      - order_amount_promotion_rules
  /promotions/{promotionId}/sku_list_promotion_rule:
    get:
      description: Retrieve the sku list promotion rule associated to the promotion
      operationId: GET/promotionId/sku_list_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: promotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list_promotion_rule associated to the promotion
      summary: Retrieve the sku list promotion rule associated to the promotion
      tags:
      - has_one
      - sku_list_promotion_rules
  /promotions/{promotionId}/coupon_codes_promotion_rule:
    get:
      description: Retrieve the coupon codes promotion rule associated to the promotion
      operationId: GET/promotionId/coupon_codes_promotion_rule
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: promotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The coupon_codes_promotion_rule associated to the promotion
      summary: Retrieve the coupon codes promotion rule associated to the promotion
      tags:
      - has_one
      - coupon_codes_promotion_rules
  /promotions/{promotionId}/attachments:
    get:
      description: Retrieve the attachments associated to the promotion
      operationId: GET/promotionId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: promotionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the promotion
      summary: Retrieve the attachments associated to the promotion
      tags:
      - has_many
      - attachments
  /refunds:
    get:
      description: List all refunds
      operationId: GET/refunds
      responses:
        "200":
          description: A list of refund objects
      summary: List all refunds
      tags:
      - refunds
  /refunds/{refundId}:
    get:
      description: Retrieve a refund
      operationId: GET/refunds/refundId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: refundId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/refund'
          description: The refund object
      summary: Retrieve a refund
      tags:
      - refunds
  /refunds/{refundId}/order:
    get:
      description: Retrieve the order associated to the refund
      operationId: GET/refundId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: refundId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the refund
      summary: Retrieve the order associated to the refund
      tags:
      - has_one
      - orders
  /refunds/{refundId}/reference_capture:
    get:
      description: Retrieve the reference capture associated to the refund
      operationId: GET/refundId/reference_capture
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: refundId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The reference_capture associated to the refund
      summary: Retrieve the reference capture associated to the refund
      tags:
      - has_one
      - captures
  /return_line_items:
    get:
      description: List all return line items
      operationId: GET/return_line_items
      responses:
        "200":
          description: A list of return line item objects
      summary: List all return line items
      tags:
      - return_line_items
    post:
      description: Create a return line item
      operationId: POST/return_line_items
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/returnLineItemCreate'
        required: true
      responses:
        "201":
          description: The created return line item object
      summary: Create a return line item
      tags:
      - return_line_items
  /return_line_items/{returnLineItemId}:
    delete:
      description: Delete a return line item
      operationId: DELETE/return_line_items/returnLineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a return line item
      tags:
      - return_line_items
    get:
      description: Retrieve a return line item
      operationId: GET/return_line_items/returnLineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/returnLineItem'
          description: The return line item object
      summary: Retrieve a return line item
      tags:
      - return_line_items
    patch:
      description: Update a return line item
      operationId: PATCH/return_line_items/returnLineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnLineItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/returnLineItemUpdate'
        required: true
      responses:
        "200":
          description: The updated return line item object
      summary: Update a return line item
      tags:
      - return_line_items
  /return_line_items/{returnLineItemId}/return:
    get:
      description: Retrieve the return associated to the return line item
      operationId: GET/returnLineItemId/return
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The return associated to the return line item
      summary: Retrieve the return associated to the return line item
      tags:
      - has_one
      - returns
  /return_line_items/{returnLineItemId}/line_item:
    get:
      description: Retrieve the line item associated to the return line item
      operationId: GET/returnLineItemId/line_item
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The line_item associated to the return line item
      summary: Retrieve the line item associated to the return line item
      tags:
      - has_one
      - line_items
  /returns:
    get:
      description: List all returns
      operationId: GET/returns
      responses:
        "200":
          description: A list of return objects
      summary: List all returns
      tags:
      - returns
    post:
      description: Create a return
      operationId: POST/returns
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/returnCreate'
        required: true
      responses:
        "201":
          description: The created return object
      summary: Create a return
      tags:
      - returns
  /returns/{returnId}:
    delete:
      description: Delete a return
      operationId: DELETE/returns/returnId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a return
      tags:
      - returns
    get:
      description: Retrieve a return
      operationId: GET/returns/returnId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/return'
          description: The return object
      summary: Retrieve a return
      tags:
      - returns
    patch:
      description: Update a return
      operationId: PATCH/returns/returnId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/returnUpdate'
        required: true
      responses:
        "200":
          description: The updated return object
      summary: Update a return
      tags:
      - returns
  /returns/{returnId}/order:
    get:
      description: Retrieve the order associated to the return
      operationId: GET/returnId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the return
      summary: Retrieve the order associated to the return
      tags:
      - has_one
      - orders
  /returns/{returnId}/customer:
    get:
      description: Retrieve the customer associated to the return
      operationId: GET/returnId/customer
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The customer associated to the return
      summary: Retrieve the customer associated to the return
      tags:
      - has_one
      - customers
  /returns/{returnId}/stock_location:
    get:
      description: Retrieve the stock location associated to the return
      operationId: GET/returnId/stock_location
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_location associated to the return
      summary: Retrieve the stock location associated to the return
      tags:
      - has_one
      - stock_locations
  /returns/{returnId}/origin_address:
    get:
      description: Retrieve the origin address associated to the return
      operationId: GET/returnId/origin_address
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The origin_address associated to the return
      summary: Retrieve the origin address associated to the return
      tags:
      - has_one
      - addresses
  /returns/{returnId}/destination_address:
    get:
      description: Retrieve the destination address associated to the return
      operationId: GET/returnId/destination_address
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The destination_address associated to the return
      summary: Retrieve the destination address associated to the return
      tags:
      - has_one
      - addresses
  /returns/{returnId}/return_line_items:
    get:
      description: Retrieve the return line items associated to the return
      operationId: GET/returnId/return_line_items
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The return_line_items associated to the return
      summary: Retrieve the return line items associated to the return
      tags:
      - has_many
      - return_line_items
  /returns/{returnId}/attachments:
    get:
      description: Retrieve the attachments associated to the return
      operationId: GET/returnId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: returnId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the return
      summary: Retrieve the attachments associated to the return
      tags:
      - has_many
      - attachments
  /shipments:
    get:
      description: List all shipments
      operationId: GET/shipments
      responses:
        "200":
          description: A list of shipment objects
      summary: List all shipments
      tags:
      - shipments
  /shipments/{shipmentId}:
    get:
      description: Retrieve a shipment
      operationId: GET/shipments/shipmentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/shipment'
          description: The shipment object
      summary: Retrieve a shipment
      tags:
      - shipments
    patch:
      description: Update a shipment
      operationId: PATCH/shipments/shipmentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/shipmentUpdate'
        required: true
      responses:
        "200":
          description: The updated shipment object
      summary: Update a shipment
      tags:
      - shipments
  /shipments/{shipmentId}/order:
    get:
      description: Retrieve the order associated to the shipment
      operationId: GET/shipmentId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the shipment
      summary: Retrieve the order associated to the shipment
      tags:
      - has_one
      - orders
  /shipments/{shipmentId}/shipping_category:
    get:
      description: Retrieve the shipping category associated to the shipment
      operationId: GET/shipmentId/shipping_category
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipping_category associated to the shipment
      summary: Retrieve the shipping category associated to the shipment
      tags:
      - has_one
      - shipping_categories
  /shipments/{shipmentId}/stock_location:
    get:
      description: Retrieve the stock location associated to the shipment
      operationId: GET/shipmentId/stock_location
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_location associated to the shipment
      summary: Retrieve the stock location associated to the shipment
      tags:
      - has_one
      - stock_locations
  /shipments/{shipmentId}/origin_address:
    get:
      description: Retrieve the origin address associated to the shipment
      operationId: GET/shipmentId/origin_address
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The origin_address associated to the shipment
      summary: Retrieve the origin address associated to the shipment
      tags:
      - has_one
      - addresses
  /shipments/{shipmentId}/shipping_address:
    get:
      description: Retrieve the shipping address associated to the shipment
      operationId: GET/shipmentId/shipping_address
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipping_address associated to the shipment
      summary: Retrieve the shipping address associated to the shipment
      tags:
      - has_one
      - addresses
  /shipments/{shipmentId}/shipping_method:
    get:
      description: Retrieve the shipping method associated to the shipment
      operationId: GET/shipmentId/shipping_method
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipping_method associated to the shipment
      summary: Retrieve the shipping method associated to the shipment
      tags:
      - has_one
      - shipping_methods
  /shipments/{shipmentId}/delivery_lead_time:
    get:
      description: Retrieve the delivery lead time associated to the shipment
      operationId: GET/shipmentId/delivery_lead_time
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The delivery_lead_time associated to the shipment
      summary: Retrieve the delivery lead time associated to the shipment
      tags:
      - has_one
      - delivery_lead_times
  /shipments/{shipmentId}/stock_line_items:
    get:
      description: Retrieve the stock line items associated to the shipment
      operationId: GET/shipmentId/stock_line_items
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_line_items associated to the shipment
      summary: Retrieve the stock line items associated to the shipment
      tags:
      - has_many
      - stock_line_items
  /shipments/{shipmentId}/stock_transfers:
    get:
      description: Retrieve the stock transfers associated to the shipment
      operationId: GET/shipmentId/stock_transfers
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_transfers associated to the shipment
      summary: Retrieve the stock transfers associated to the shipment
      tags:
      - has_many
      - stock_transfers
  /shipments/{shipmentId}/available_shipping_methods:
    get:
      description: Retrieve the available shipping methods associated to the shipment
      operationId: GET/shipmentId/available_shipping_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The available_shipping_methods associated to the shipment
      summary: Retrieve the available shipping methods associated to the shipment
      tags:
      - has_many
      - shipping_methods
  /shipments/{shipmentId}/carrier_accounts:
    get:
      description: Retrieve the carrier accounts associated to the shipment
      operationId: GET/shipmentId/carrier_accounts
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The carrier_accounts associated to the shipment
      summary: Retrieve the carrier accounts associated to the shipment
      tags:
      - has_many
      - carrier_accounts
  /shipments/{shipmentId}/parcels:
    get:
      description: Retrieve the parcels associated to the shipment
      operationId: GET/shipmentId/parcels
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The parcels associated to the shipment
      summary: Retrieve the parcels associated to the shipment
      tags:
      - has_many
      - parcels
  /shipments/{shipmentId}/attachments:
    get:
      description: Retrieve the attachments associated to the shipment
      operationId: GET/shipmentId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the shipment
      summary: Retrieve the attachments associated to the shipment
      tags:
      - has_many
      - attachments
  /shipping_categories:
    get:
      description: List all shipping categories
      operationId: GET/shipping_categories
      responses:
        "200":
          description: A list of shipping category objects
      summary: List all shipping categories
      tags:
      - shipping_categories
    post:
      description: Create a shipping category
      operationId: POST/shipping_categories
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/shippingCategoryCreate'
        required: true
      responses:
        "201":
          description: The created shipping category object
      summary: Create a shipping category
      tags:
      - shipping_categories
  /shipping_categories/{shippingCategoryId}:
    delete:
      description: Delete a shipping category
      operationId: DELETE/shipping_categories/shippingCategoryId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingCategoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a shipping category
      tags:
      - shipping_categories
    get:
      description: Retrieve a shipping category
      operationId: GET/shipping_categories/shippingCategoryId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingCategoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/shippingCategory'
          description: The shipping category object
      summary: Retrieve a shipping category
      tags:
      - shipping_categories
    patch:
      description: Update a shipping category
      operationId: PATCH/shipping_categories/shippingCategoryId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingCategoryId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/shippingCategoryUpdate'
        required: true
      responses:
        "200":
          description: The updated shipping category object
      summary: Update a shipping category
      tags:
      - shipping_categories
  /shipping_categories/{shippingCategoryId}/skus:
    get:
      description: Retrieve the skus associated to the shipping category
      operationId: GET/shippingCategoryId/skus
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingCategoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The skus associated to the shipping category
      summary: Retrieve the skus associated to the shipping category
      tags:
      - has_many
      - skus
  /shipping_categories/{shippingCategoryId}/attachments:
    get:
      description: Retrieve the attachments associated to the shipping category
      operationId: GET/shippingCategoryId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingCategoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the shipping category
      summary: Retrieve the attachments associated to the shipping category
      tags:
      - has_many
      - attachments
  /shipping_methods:
    get:
      description: List all shipping methods
      operationId: GET/shipping_methods
      responses:
        "200":
          description: A list of shipping method objects
      summary: List all shipping methods
      tags:
      - shipping_methods
    post:
      description: Create a shipping method
      operationId: POST/shipping_methods
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/shippingMethodCreate'
        required: true
      responses:
        "201":
          description: The created shipping method object
      summary: Create a shipping method
      tags:
      - shipping_methods
  /shipping_methods/{shippingMethodId}:
    delete:
      description: Delete a shipping method
      operationId: DELETE/shipping_methods/shippingMethodId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a shipping method
      tags:
      - shipping_methods
    get:
      description: Retrieve a shipping method
      operationId: GET/shipping_methods/shippingMethodId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/shippingMethod'
          description: The shipping method object
      summary: Retrieve a shipping method
      tags:
      - shipping_methods
    patch:
      description: Update a shipping method
      operationId: PATCH/shipping_methods/shippingMethodId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingMethodId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/shippingMethodUpdate'
        required: true
      responses:
        "200":
          description: The updated shipping method object
      summary: Update a shipping method
      tags:
      - shipping_methods
  /shipping_methods/{shippingMethodId}/market:
    get:
      description: Retrieve the market associated to the shipping method
      operationId: GET/shippingMethodId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the shipping method
      summary: Retrieve the market associated to the shipping method
      tags:
      - has_one
      - markets
  /shipping_methods/{shippingMethodId}/shipping_zone:
    get:
      description: Retrieve the shipping zone associated to the shipping method
      operationId: GET/shippingMethodId/shipping_zone
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipping_zone associated to the shipping method
      summary: Retrieve the shipping zone associated to the shipping method
      tags:
      - has_one
      - shipping_zones
  /shipping_methods/{shippingMethodId}/shipping_category:
    get:
      description: Retrieve the shipping category associated to the shipping method
      operationId: GET/shippingMethodId/shipping_category
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipping_category associated to the shipping method
      summary: Retrieve the shipping category associated to the shipping method
      tags:
      - has_one
      - shipping_categories
  /shipping_methods/{shippingMethodId}/delivery_lead_time_for_shipment:
    get:
      description: Retrieve the delivery lead time for shipment associated to the
        shipping method
      operationId: GET/shippingMethodId/delivery_lead_time_for_shipment
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The delivery_lead_time_for_shipment associated to the shipping
            method
      summary: Retrieve the delivery lead time for shipment associated to the shipping
        method
      tags:
      - has_one
      - delivery_lead_times
  /shipping_methods/{shippingMethodId}/attachments:
    get:
      description: Retrieve the attachments associated to the shipping method
      operationId: GET/shippingMethodId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingMethodId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the shipping method
      summary: Retrieve the attachments associated to the shipping method
      tags:
      - has_many
      - attachments
  /shipping_zones:
    get:
      description: List all shipping zones
      operationId: GET/shipping_zones
      responses:
        "200":
          description: A list of shipping zone objects
      summary: List all shipping zones
      tags:
      - shipping_zones
    post:
      description: Create a shipping zone
      operationId: POST/shipping_zones
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/shippingZoneCreate'
        required: true
      responses:
        "201":
          description: The created shipping zone object
      summary: Create a shipping zone
      tags:
      - shipping_zones
  /shipping_zones/{shippingZoneId}:
    delete:
      description: Delete a shipping zone
      operationId: DELETE/shipping_zones/shippingZoneId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingZoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a shipping zone
      tags:
      - shipping_zones
    get:
      description: Retrieve a shipping zone
      operationId: GET/shipping_zones/shippingZoneId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingZoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/shippingZone'
          description: The shipping zone object
      summary: Retrieve a shipping zone
      tags:
      - shipping_zones
    patch:
      description: Update a shipping zone
      operationId: PATCH/shipping_zones/shippingZoneId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingZoneId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/shippingZoneUpdate'
        required: true
      responses:
        "200":
          description: The updated shipping zone object
      summary: Update a shipping zone
      tags:
      - shipping_zones
  /shipping_zones/{shippingZoneId}/attachments:
    get:
      description: Retrieve the attachments associated to the shipping zone
      operationId: GET/shippingZoneId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: shippingZoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the shipping zone
      summary: Retrieve the attachments associated to the shipping zone
      tags:
      - has_many
      - attachments
  /sku_list_items:
    get:
      description: List all SKU list items
      operationId: GET/sku_list_items
      responses:
        "200":
          description: A list of SKU list item objects
      summary: List all SKU list items
      tags:
      - sku_list_items
    post:
      description: Create a SKU list item
      operationId: POST/sku_list_items
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuListItemCreate'
        required: true
      responses:
        "201":
          description: The created SKU list item object
      summary: Create a SKU list item
      tags:
      - sku_list_items
  /sku_list_items/{skuListItemId}:
    delete:
      description: Delete a SKU list item
      operationId: DELETE/sku_list_items/skuListItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a SKU list item
      tags:
      - sku_list_items
    get:
      description: Retrieve a SKU list item
      operationId: GET/sku_list_items/skuListItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/skuListItem'
          description: The SKU list item object
      summary: Retrieve a SKU list item
      tags:
      - sku_list_items
    patch:
      description: Update a SKU list item
      operationId: PATCH/sku_list_items/skuListItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuListItemUpdate'
        required: true
      responses:
        "200":
          description: The updated SKU list item object
      summary: Update a SKU list item
      tags:
      - sku_list_items
  /sku_list_items/{skuListItemId}/sku_list:
    get:
      description: Retrieve the sku list associated to the SKU list item
      operationId: GET/skuListItemId/sku_list
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list associated to the SKU list item
      summary: Retrieve the sku list associated to the SKU list item
      tags:
      - has_one
      - sku_lists
  /sku_list_items/{skuListItemId}/sku:
    get:
      description: Retrieve the sku associated to the SKU list item
      operationId: GET/skuListItemId/sku
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku associated to the SKU list item
      summary: Retrieve the sku associated to the SKU list item
      tags:
      - has_one
      - skus
  /sku_list_promotion_rules:
    get:
      description: List all SKU list promotion rules
      operationId: GET/sku_list_promotion_rules
      responses:
        "200":
          description: A list of SKU list promotion rule objects
      summary: List all SKU list promotion rules
      tags:
      - sku_list_promotion_rules
    post:
      description: Create a SKU list promotion rule
      operationId: POST/sku_list_promotion_rules
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuListPromotionRuleCreate'
        required: true
      responses:
        "201":
          description: The created SKU list promotion rule object
      summary: Create a SKU list promotion rule
      tags:
      - sku_list_promotion_rules
  /sku_list_promotion_rules/{skuListPromotionRuleId}:
    delete:
      description: Delete a SKU list promotion rule
      operationId: DELETE/sku_list_promotion_rules/skuListPromotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a SKU list promotion rule
      tags:
      - sku_list_promotion_rules
    get:
      description: Retrieve a SKU list promotion rule
      operationId: GET/sku_list_promotion_rules/skuListPromotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/skuListPromotionRule'
          description: The SKU list promotion rule object
      summary: Retrieve a SKU list promotion rule
      tags:
      - sku_list_promotion_rules
    patch:
      description: Update a SKU list promotion rule
      operationId: PATCH/sku_list_promotion_rules/skuListPromotionRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuListPromotionRuleUpdate'
        required: true
      responses:
        "200":
          description: The updated SKU list promotion rule object
      summary: Update a SKU list promotion rule
      tags:
      - sku_list_promotion_rules
  /sku_list_promotion_rules/{skuListPromotionRuleId}/sku_list:
    get:
      description: Retrieve the sku list associated to the SKU list promotion rule
      operationId: GET/skuListPromotionRuleId/sku_list
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list associated to the SKU list promotion rule
      summary: Retrieve the sku list associated to the SKU list promotion rule
      tags:
      - has_one
      - sku_lists
  /sku_list_promotion_rules/{skuListPromotionRuleId}/skus:
    get:
      description: Retrieve the skus associated to the SKU list promotion rule
      operationId: GET/skuListPromotionRuleId/skus
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListPromotionRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The skus associated to the SKU list promotion rule
      summary: Retrieve the skus associated to the SKU list promotion rule
      tags:
      - has_many
      - skus
  /sku_lists:
    get:
      description: List all SKU lists
      operationId: GET/sku_lists
      responses:
        "200":
          description: A list of SKU list objects
      summary: List all SKU lists
      tags:
      - sku_lists
    post:
      description: Create a SKU list
      operationId: POST/sku_lists
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuListCreate'
        required: true
      responses:
        "201":
          description: The created SKU list object
      summary: Create a SKU list
      tags:
      - sku_lists
  /sku_lists/{skuListId}:
    delete:
      description: Delete a SKU list
      operationId: DELETE/sku_lists/skuListId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a SKU list
      tags:
      - sku_lists
    get:
      description: Retrieve a SKU list
      operationId: GET/sku_lists/skuListId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/skuList'
          description: The SKU list object
      summary: Retrieve a SKU list
      tags:
      - sku_lists
    patch:
      description: Update a SKU list
      operationId: PATCH/sku_lists/skuListId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuListUpdate'
        required: true
      responses:
        "200":
          description: The updated SKU list object
      summary: Update a SKU list
      tags:
      - sku_lists
  /sku_lists/{skuListId}/skus:
    get:
      description: Retrieve the skus associated to the SKU list
      operationId: GET/skuListId/skus
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The skus associated to the SKU list
      summary: Retrieve the skus associated to the SKU list
      tags:
      - has_many
      - skus
  /sku_lists/{skuListId}/sku_list_items:
    get:
      description: Retrieve the sku list items associated to the SKU list
      operationId: GET/skuListId/sku_list_items
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_list_items associated to the SKU list
      summary: Retrieve the sku list items associated to the SKU list
      tags:
      - has_many
      - sku_list_items
  /sku_lists/{skuListId}/bundles:
    get:
      description: Retrieve the bundles associated to the SKU list
      operationId: GET/skuListId/bundles
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuListId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The bundles associated to the SKU list
      summary: Retrieve the bundles associated to the SKU list
      tags:
      - has_many
      - bundles
  /sku_options:
    get:
      description: List all SKU options
      operationId: GET/sku_options
      responses:
        "200":
          description: A list of SKU option objects
      summary: List all SKU options
      tags:
      - sku_options
    post:
      description: Create a SKU option
      operationId: POST/sku_options
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuOptionCreate'
        required: true
      responses:
        "201":
          description: The created SKU option object
      summary: Create a SKU option
      tags:
      - sku_options
  /sku_options/{skuOptionId}:
    delete:
      description: Delete a SKU option
      operationId: DELETE/sku_options/skuOptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuOptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a SKU option
      tags:
      - sku_options
    get:
      description: Retrieve a SKU option
      operationId: GET/sku_options/skuOptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuOptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/skuOption'
          description: The SKU option object
      summary: Retrieve a SKU option
      tags:
      - sku_options
    patch:
      description: Update a SKU option
      operationId: PATCH/sku_options/skuOptionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuOptionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuOptionUpdate'
        required: true
      responses:
        "200":
          description: The updated SKU option object
      summary: Update a SKU option
      tags:
      - sku_options
  /sku_options/{skuOptionId}/market:
    get:
      description: Retrieve the market associated to the SKU option
      operationId: GET/skuOptionId/market
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuOptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The market associated to the SKU option
      summary: Retrieve the market associated to the SKU option
      tags:
      - has_one
      - markets
  /sku_options/{skuOptionId}/attachments:
    get:
      description: Retrieve the attachments associated to the SKU option
      operationId: GET/skuOptionId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuOptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the SKU option
      summary: Retrieve the attachments associated to the SKU option
      tags:
      - has_many
      - attachments
  /skus:
    get:
      description: List all SKUs
      operationId: GET/skus
      responses:
        "200":
          description: A list of SKU objects
      summary: List all SKUs
      tags:
      - skus
    post:
      description: Create a SKU
      operationId: POST/skus
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuCreate'
        required: true
      responses:
        "201":
          description: The created SKU object
      summary: Create a SKU
      tags:
      - skus
  /skus/{skuId}:
    delete:
      description: Delete a SKU
      operationId: DELETE/skus/skuId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a SKU
      tags:
      - skus
    get:
      description: Retrieve a SKU
      operationId: GET/skus/skuId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/sku'
          description: The SKU object
      summary: Retrieve a SKU
      tags:
      - skus
    patch:
      description: Update a SKU
      operationId: PATCH/skus/skuId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/skuUpdate'
        required: true
      responses:
        "200":
          description: The updated SKU object
      summary: Update a SKU
      tags:
      - skus
  /skus/{skuId}/shipping_category:
    get:
      description: Retrieve the shipping category associated to the SKU
      operationId: GET/skuId/shipping_category
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipping_category associated to the SKU
      summary: Retrieve the shipping category associated to the SKU
      tags:
      - has_one
      - shipping_categories
  /skus/{skuId}/prices:
    get:
      description: Retrieve the prices associated to the SKU
      operationId: GET/skuId/prices
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The prices associated to the SKU
      summary: Retrieve the prices associated to the SKU
      tags:
      - has_many
      - prices
  /skus/{skuId}/stock_items:
    get:
      description: Retrieve the stock items associated to the SKU
      operationId: GET/skuId/stock_items
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_items associated to the SKU
      summary: Retrieve the stock items associated to the SKU
      tags:
      - has_many
      - stock_items
  /skus/{skuId}/delivery_lead_times:
    get:
      description: Retrieve the delivery lead times associated to the SKU
      operationId: GET/skuId/delivery_lead_times
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The delivery_lead_times associated to the SKU
      summary: Retrieve the delivery lead times associated to the SKU
      tags:
      - has_many
      - delivery_lead_times
  /skus/{skuId}/sku_options:
    get:
      description: Retrieve the sku options associated to the SKU
      operationId: GET/skuId/sku_options
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku_options associated to the SKU
      summary: Retrieve the sku options associated to the SKU
      tags:
      - has_many
      - sku_options
  /skus/{skuId}/attachments:
    get:
      description: Retrieve the attachments associated to the SKU
      operationId: GET/skuId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the SKU
      summary: Retrieve the attachments associated to the SKU
      tags:
      - has_many
      - attachments
  /stock_items:
    get:
      description: List all stock items
      operationId: GET/stock_items
      responses:
        "200":
          description: A list of stock item objects
      summary: List all stock items
      tags:
      - stock_items
    post:
      description: Create a stock item
      operationId: POST/stock_items
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stockItemCreate'
        required: true
      responses:
        "201":
          description: The created stock item object
      summary: Create a stock item
      tags:
      - stock_items
  /stock_items/{stockItemId}:
    delete:
      description: Delete a stock item
      operationId: DELETE/stock_items/stockItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a stock item
      tags:
      - stock_items
    get:
      description: Retrieve a stock item
      operationId: GET/stock_items/stockItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/stockItem'
          description: The stock item object
      summary: Retrieve a stock item
      tags:
      - stock_items
    patch:
      description: Update a stock item
      operationId: PATCH/stock_items/stockItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockItemId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stockItemUpdate'
        required: true
      responses:
        "200":
          description: The updated stock item object
      summary: Update a stock item
      tags:
      - stock_items
  /stock_items/{stockItemId}/stock_location:
    get:
      description: Retrieve the stock location associated to the stock item
      operationId: GET/stockItemId/stock_location
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_location associated to the stock item
      summary: Retrieve the stock location associated to the stock item
      tags:
      - has_one
      - stock_locations
  /stock_items/{stockItemId}/sku:
    get:
      description: Retrieve the sku associated to the stock item
      operationId: GET/stockItemId/sku
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku associated to the stock item
      summary: Retrieve the sku associated to the stock item
      tags:
      - has_one
      - skus
  /stock_items/{stockItemId}/attachments:
    get:
      description: Retrieve the attachments associated to the stock item
      operationId: GET/stockItemId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the stock item
      summary: Retrieve the attachments associated to the stock item
      tags:
      - has_many
      - attachments
  /stock_line_items:
    get:
      description: List all stock line items
      operationId: GET/stock_line_items
      responses:
        "200":
          description: A list of stock line item objects
      summary: List all stock line items
      tags:
      - stock_line_items
  /stock_line_items/{stockLineItemId}:
    get:
      description: Retrieve a stock line item
      operationId: GET/stock_line_items/stockLineItemId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/stockLineItem'
          description: The stock line item object
      summary: Retrieve a stock line item
      tags:
      - stock_line_items
  /stock_line_items/{stockLineItemId}/shipment:
    get:
      description: Retrieve the shipment associated to the stock line item
      operationId: GET/stockLineItemId/shipment
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipment associated to the stock line item
      summary: Retrieve the shipment associated to the stock line item
      tags:
      - has_one
      - shipments
  /stock_line_items/{stockLineItemId}/line_item:
    get:
      description: Retrieve the line item associated to the stock line item
      operationId: GET/stockLineItemId/line_item
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The line_item associated to the stock line item
      summary: Retrieve the line item associated to the stock line item
      tags:
      - has_one
      - line_items
  /stock_line_items/{stockLineItemId}/stock_item:
    get:
      description: Retrieve the stock item associated to the stock line item
      operationId: GET/stockLineItemId/stock_item
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLineItemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_item associated to the stock line item
      summary: Retrieve the stock item associated to the stock line item
      tags:
      - has_one
      - stock_items
  /stock_locations:
    get:
      description: List all stock locations
      operationId: GET/stock_locations
      responses:
        "200":
          description: A list of stock location objects
      summary: List all stock locations
      tags:
      - stock_locations
    post:
      description: Create a stock location
      operationId: POST/stock_locations
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stockLocationCreate'
        required: true
      responses:
        "201":
          description: The created stock location object
      summary: Create a stock location
      tags:
      - stock_locations
  /stock_locations/{stockLocationId}:
    delete:
      description: Delete a stock location
      operationId: DELETE/stock_locations/stockLocationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a stock location
      tags:
      - stock_locations
    get:
      description: Retrieve a stock location
      operationId: GET/stock_locations/stockLocationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/stockLocation'
          description: The stock location object
      summary: Retrieve a stock location
      tags:
      - stock_locations
    patch:
      description: Update a stock location
      operationId: PATCH/stock_locations/stockLocationId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLocationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stockLocationUpdate'
        required: true
      responses:
        "200":
          description: The updated stock location object
      summary: Update a stock location
      tags:
      - stock_locations
  /stock_locations/{stockLocationId}/address:
    get:
      description: Retrieve the address associated to the stock location
      operationId: GET/stockLocationId/address
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The address associated to the stock location
      summary: Retrieve the address associated to the stock location
      tags:
      - has_one
      - addresses
  /stock_locations/{stockLocationId}/inventory_stock_locations:
    get:
      description: Retrieve the inventory stock locations associated to the stock
        location
      operationId: GET/stockLocationId/inventory_stock_locations
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The inventory_stock_locations associated to the stock location
      summary: Retrieve the inventory stock locations associated to the stock location
      tags:
      - has_many
      - inventory_stock_locations
  /stock_locations/{stockLocationId}/inventory_return_locations:
    get:
      description: Retrieve the inventory return locations associated to the stock
        location
      operationId: GET/stockLocationId/inventory_return_locations
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The inventory_return_locations associated to the stock location
      summary: Retrieve the inventory return locations associated to the stock location
      tags:
      - has_many
      - inventory_return_locations
  /stock_locations/{stockLocationId}/stock_items:
    get:
      description: Retrieve the stock items associated to the stock location
      operationId: GET/stockLocationId/stock_items
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_items associated to the stock location
      summary: Retrieve the stock items associated to the stock location
      tags:
      - has_many
      - stock_items
  /stock_locations/{stockLocationId}/stock_transfers:
    get:
      description: Retrieve the stock transfers associated to the stock location
      operationId: GET/stockLocationId/stock_transfers
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stock_transfers associated to the stock location
      summary: Retrieve the stock transfers associated to the stock location
      tags:
      - has_many
      - stock_transfers
  /stock_locations/{stockLocationId}/attachments:
    get:
      description: Retrieve the attachments associated to the stock location
      operationId: GET/stockLocationId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockLocationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the stock location
      summary: Retrieve the attachments associated to the stock location
      tags:
      - has_many
      - attachments
  /stock_transfers:
    get:
      description: List all stock transfers
      operationId: GET/stock_transfers
      responses:
        "200":
          description: A list of stock transfer objects
      summary: List all stock transfers
      tags:
      - stock_transfers
    post:
      description: Create a stock transfer
      operationId: POST/stock_transfers
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stockTransferCreate'
        required: true
      responses:
        "201":
          description: The created stock transfer object
      summary: Create a stock transfer
      tags:
      - stock_transfers
  /stock_transfers/{stockTransferId}:
    delete:
      description: Delete a stock transfer
      operationId: DELETE/stock_transfers/stockTransferId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a stock transfer
      tags:
      - stock_transfers
    get:
      description: Retrieve a stock transfer
      operationId: GET/stock_transfers/stockTransferId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/stockTransfer'
          description: The stock transfer object
      summary: Retrieve a stock transfer
      tags:
      - stock_transfers
    patch:
      description: Update a stock transfer
      operationId: PATCH/stock_transfers/stockTransferId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockTransferId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stockTransferUpdate'
        required: true
      responses:
        "200":
          description: The updated stock transfer object
      summary: Update a stock transfer
      tags:
      - stock_transfers
  /stock_transfers/{stockTransferId}/sku:
    get:
      description: Retrieve the sku associated to the stock transfer
      operationId: GET/stockTransferId/sku
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku associated to the stock transfer
      summary: Retrieve the sku associated to the stock transfer
      tags:
      - has_one
      - skus
  /stock_transfers/{stockTransferId}/origin_stock_location:
    get:
      description: Retrieve the origin stock location associated to the stock transfer
      operationId: GET/stockTransferId/origin_stock_location
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The origin_stock_location associated to the stock transfer
      summary: Retrieve the origin stock location associated to the stock transfer
      tags:
      - has_one
      - stock_locations
  /stock_transfers/{stockTransferId}/destination_stock_location:
    get:
      description: Retrieve the destination stock location associated to the stock
        transfer
      operationId: GET/stockTransferId/destination_stock_location
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The destination_stock_location associated to the stock transfer
      summary: Retrieve the destination stock location associated to the stock transfer
      tags:
      - has_one
      - stock_locations
  /stock_transfers/{stockTransferId}/shipment:
    get:
      description: Retrieve the shipment associated to the stock transfer
      operationId: GET/stockTransferId/shipment
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The shipment associated to the stock transfer
      summary: Retrieve the shipment associated to the stock transfer
      tags:
      - has_one
      - shipments
  /stock_transfers/{stockTransferId}/line_item:
    get:
      description: Retrieve the line item associated to the stock transfer
      operationId: GET/stockTransferId/line_item
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stockTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The line_item associated to the stock transfer
      summary: Retrieve the line item associated to the stock transfer
      tags:
      - has_one
      - line_items
  /stripe_gateways:
    get:
      description: List all stripe gateways
      operationId: GET/stripe_gateways
      responses:
        "200":
          description: A list of stripe gateway objects
      summary: List all stripe gateways
      tags:
      - stripe_gateways
    post:
      description: Create a stripe gateway
      operationId: POST/stripe_gateways
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stripeGatewayCreate'
        required: true
      responses:
        "201":
          description: The created stripe gateway object
      summary: Create a stripe gateway
      tags:
      - stripe_gateways
  /stripe_gateways/{stripeGatewayId}:
    delete:
      description: Delete a stripe gateway
      operationId: DELETE/stripe_gateways/stripeGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripeGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a stripe gateway
      tags:
      - stripe_gateways
    get:
      description: Retrieve a stripe gateway
      operationId: GET/stripe_gateways/stripeGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripeGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/stripeGateway'
          description: The stripe gateway object
      summary: Retrieve a stripe gateway
      tags:
      - stripe_gateways
    patch:
      description: Update a stripe gateway
      operationId: PATCH/stripe_gateways/stripeGatewayId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripeGatewayId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stripeGatewayUpdate'
        required: true
      responses:
        "200":
          description: The updated stripe gateway object
      summary: Update a stripe gateway
      tags:
      - stripe_gateways
  /stripe_gateways/{stripeGatewayId}/payment_methods:
    get:
      description: Retrieve the payment methods associated to the stripe gateway
      operationId: GET/stripeGatewayId/payment_methods
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripeGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_methods associated to the stripe gateway
      summary: Retrieve the payment methods associated to the stripe gateway
      tags:
      - has_many
      - payment_methods
  /stripe_gateways/{stripeGatewayId}/stripe_payments:
    get:
      description: Retrieve the stripe payments associated to the stripe gateway
      operationId: GET/stripeGatewayId/stripe_payments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripeGatewayId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The stripe_payments associated to the stripe gateway
      summary: Retrieve the stripe payments associated to the stripe gateway
      tags:
      - has_many
      - stripe_payments
  /stripe_payments:
    get:
      description: List all stripe payments
      operationId: GET/stripe_payments
      responses:
        "200":
          description: A list of stripe payment objects
      summary: List all stripe payments
      tags:
      - stripe_payments
    post:
      description: Create a stripe payment
      operationId: POST/stripe_payments
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stripePaymentCreate'
        required: true
      responses:
        "201":
          description: The created stripe payment object
      summary: Create a stripe payment
      tags:
      - stripe_payments
  /stripe_payments/{stripePaymentId}:
    delete:
      description: Delete a stripe payment
      operationId: DELETE/stripe_payments/stripePaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripePaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a stripe payment
      tags:
      - stripe_payments
    get:
      description: Retrieve a stripe payment
      operationId: GET/stripe_payments/stripePaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripePaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/stripePayment'
          description: The stripe payment object
      summary: Retrieve a stripe payment
      tags:
      - stripe_payments
    patch:
      description: Update a stripe payment
      operationId: PATCH/stripe_payments/stripePaymentId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripePaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/stripePaymentUpdate'
        required: true
      responses:
        "200":
          description: The updated stripe payment object
      summary: Update a stripe payment
      tags:
      - stripe_payments
  /stripe_payments/{stripePaymentId}/order:
    get:
      description: Retrieve the order associated to the stripe payment
      operationId: GET/stripePaymentId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripePaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the stripe payment
      summary: Retrieve the order associated to the stripe payment
      tags:
      - has_one
      - orders
  /stripe_payments/{stripePaymentId}/payment_gateway:
    get:
      description: Retrieve the payment gateway associated to the stripe payment
      operationId: GET/stripePaymentId/payment_gateway
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: stripePaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payment_gateway associated to the stripe payment
      summary: Retrieve the payment gateway associated to the stripe payment
      tags:
      - has_one
      - payment_gateways
  /tax_calculators:
    get:
      description: List all tax calculators
      operationId: GET/tax_calculators
      responses:
        "200":
          description: A list of tax calculator objects
      summary: List all tax calculators
      tags:
      - tax_calculators
  /tax_calculators/{taxCalculatorId}:
    get:
      description: Retrieve a tax calculator
      operationId: GET/tax_calculators/taxCalculatorId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/taxCalculator'
          description: The tax calculator object
      summary: Retrieve a tax calculator
      tags:
      - tax_calculators
  /tax_calculators/{taxCalculatorId}/tax_categories:
    get:
      description: Retrieve the tax categories associated to the tax calculator
      operationId: GET/taxCalculatorId/tax_categories
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The tax_categories associated to the tax calculator
      summary: Retrieve the tax categories associated to the tax calculator
      tags:
      - has_many
      - tax_categories
  /tax_calculators/{taxCalculatorId}/markets:
    get:
      description: Retrieve the markets associated to the tax calculator
      operationId: GET/taxCalculatorId/markets
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The markets associated to the tax calculator
      summary: Retrieve the markets associated to the tax calculator
      tags:
      - has_many
      - markets
  /tax_calculators/{taxCalculatorId}/attachments:
    get:
      description: Retrieve the attachments associated to the tax calculator
      operationId: GET/taxCalculatorId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxCalculatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the tax calculator
      summary: Retrieve the attachments associated to the tax calculator
      tags:
      - has_many
      - attachments
  /tax_categories:
    get:
      description: List all tax categories
      operationId: GET/tax_categories
      responses:
        "200":
          description: A list of tax category objects
      summary: List all tax categories
      tags:
      - tax_categories
    post:
      description: Create a tax category
      operationId: POST/tax_categories
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/taxCategoryCreate'
        required: true
      responses:
        "201":
          description: The created tax category object
      summary: Create a tax category
      tags:
      - tax_categories
  /tax_categories/{taxCategoryId}:
    delete:
      description: Delete a tax category
      operationId: DELETE/tax_categories/taxCategoryId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxCategoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a tax category
      tags:
      - tax_categories
    get:
      description: Retrieve a tax category
      operationId: GET/tax_categories/taxCategoryId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxCategoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/taxCategory'
          description: The tax category object
      summary: Retrieve a tax category
      tags:
      - tax_categories
    patch:
      description: Update a tax category
      operationId: PATCH/tax_categories/taxCategoryId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxCategoryId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/taxCategoryUpdate'
        required: true
      responses:
        "200":
          description: The updated tax category object
      summary: Update a tax category
      tags:
      - tax_categories
  /tax_categories/{taxCategoryId}/sku:
    get:
      description: Retrieve the sku associated to the tax category
      operationId: GET/taxCategoryId/sku
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxCategoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The sku associated to the tax category
      summary: Retrieve the sku associated to the tax category
      tags:
      - has_one
      - skus
  /tax_categories/{taxCategoryId}/attachments:
    get:
      description: Retrieve the attachments associated to the tax category
      operationId: GET/taxCategoryId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxCategoryId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the tax category
      summary: Retrieve the attachments associated to the tax category
      tags:
      - has_many
      - attachments
  /tax_rules:
    get:
      description: List all tax rules
      operationId: GET/tax_rules
      responses:
        "200":
          description: A list of tax rule objects
      summary: List all tax rules
      tags:
      - tax_rules
    post:
      description: Create a tax rule
      operationId: POST/tax_rules
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/taxRuleCreate'
        required: true
      responses:
        "201":
          description: The created tax rule object
      summary: Create a tax rule
      tags:
      - tax_rules
  /tax_rules/{taxRuleId}:
    delete:
      description: Delete a tax rule
      operationId: DELETE/tax_rules/taxRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a tax rule
      tags:
      - tax_rules
    get:
      description: Retrieve a tax rule
      operationId: GET/tax_rules/taxRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/taxRule'
          description: The tax rule object
      summary: Retrieve a tax rule
      tags:
      - tax_rules
    patch:
      description: Update a tax rule
      operationId: PATCH/tax_rules/taxRuleId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxRuleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/taxRuleUpdate'
        required: true
      responses:
        "200":
          description: The updated tax rule object
      summary: Update a tax rule
      tags:
      - tax_rules
  /tax_rules/{taxRuleId}/manual_tax_calculator:
    get:
      description: Retrieve the manual tax calculator associated to the tax rule
      operationId: GET/taxRuleId/manual_tax_calculator
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxRuleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The manual_tax_calculator associated to the tax rule
      summary: Retrieve the manual tax calculator associated to the tax rule
      tags:
      - has_one
      - manual_tax_calculators
  /taxjar_accounts:
    get:
      description: List all taxjar accounts
      operationId: GET/taxjar_accounts
      responses:
        "200":
          description: A list of taxjar account objects
      summary: List all taxjar accounts
      tags:
      - taxjar_accounts
    post:
      description: Create a taxjar account
      operationId: POST/taxjar_accounts
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/taxjarAccountCreate'
        required: true
      responses:
        "201":
          description: The created taxjar account object
      summary: Create a taxjar account
      tags:
      - taxjar_accounts
  /taxjar_accounts/{taxjarAccountId}:
    delete:
      description: Delete a taxjar account
      operationId: DELETE/taxjar_accounts/taxjarAccountId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxjarAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a taxjar account
      tags:
      - taxjar_accounts
    get:
      description: Retrieve a taxjar account
      operationId: GET/taxjar_accounts/taxjarAccountId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxjarAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/taxjarAccount'
          description: The taxjar account object
      summary: Retrieve a taxjar account
      tags:
      - taxjar_accounts
    patch:
      description: Update a taxjar account
      operationId: PATCH/taxjar_accounts/taxjarAccountId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxjarAccountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/taxjarAccountUpdate'
        required: true
      responses:
        "200":
          description: The updated taxjar account object
      summary: Update a taxjar account
      tags:
      - taxjar_accounts
  /taxjar_accounts/{taxjarAccountId}/tax_categories:
    get:
      description: Retrieve the tax categories associated to the taxjar account
      operationId: GET/taxjarAccountId/tax_categories
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxjarAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The tax_categories associated to the taxjar account
      summary: Retrieve the tax categories associated to the taxjar account
      tags:
      - has_many
      - tax_categories
  /taxjar_accounts/{taxjarAccountId}/markets:
    get:
      description: Retrieve the markets associated to the taxjar account
      operationId: GET/taxjarAccountId/markets
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxjarAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The markets associated to the taxjar account
      summary: Retrieve the markets associated to the taxjar account
      tags:
      - has_many
      - markets
  /taxjar_accounts/{taxjarAccountId}/attachments:
    get:
      description: Retrieve the attachments associated to the taxjar account
      operationId: GET/taxjarAccountId/attachments
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: taxjarAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The attachments associated to the taxjar account
      summary: Retrieve the attachments associated to the taxjar account
      tags:
      - has_many
      - attachments
  /transactions:
    get:
      description: List all transactions
      operationId: GET/transactions
      responses:
        "200":
          description: A list of transaction objects
      summary: List all transactions
      tags:
      - transactions
  /transactions/{transactionId}:
    get:
      description: Retrieve a transaction
      operationId: GET/transactions/transactionId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/transaction'
          description: The transaction object
      summary: Retrieve a transaction
      tags:
      - transactions
  /transactions/{transactionId}/order:
    get:
      description: Retrieve the order associated to the transaction
      operationId: GET/transactionId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the transaction
      summary: Retrieve the order associated to the transaction
      tags:
      - has_one
      - orders
  /voids:
    get:
      description: List all voids
      operationId: GET/voids
      responses:
        "200":
          description: A list of void objects
      summary: List all voids
      tags:
      - voids
  /voids/{voidId}:
    get:
      description: Retrieve a void
      operationId: GET/voids/voidId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: voidId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/void'
          description: The void object
      summary: Retrieve a void
      tags:
      - voids
  /voids/{voidId}/order:
    get:
      description: Retrieve the order associated to the void
      operationId: GET/voidId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: voidId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the void
      summary: Retrieve the order associated to the void
      tags:
      - has_one
      - orders
  /voids/{voidId}/reference_authorization:
    get:
      description: Retrieve the reference authorization associated to the void
      operationId: GET/voidId/reference_authorization
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: voidId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The reference_authorization associated to the void
      summary: Retrieve the reference authorization associated to the void
      tags:
      - has_one
      - authorizations
  /webhooks:
    get:
      description: List all webhooks
      operationId: GET/webhooks
      responses:
        "200":
          description: A list of webhook objects
      summary: List all webhooks
      tags:
      - webhooks
    post:
      description: Create a webhook
      operationId: POST/webhooks
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/webhookCreate'
        required: true
      responses:
        "201":
          description: The created webhook object
      summary: Create a webhook
      tags:
      - webhooks
  /webhooks/{webhookId}:
    delete:
      description: Delete a webhook
      operationId: DELETE/webhooks/webhookId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a webhook
      tags:
      - webhooks
    get:
      description: Retrieve a webhook
      operationId: GET/webhooks/webhookId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: The webhook object
      summary: Retrieve a webhook
      tags:
      - webhooks
    patch:
      description: Update a webhook
      operationId: PATCH/webhooks/webhookId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/webhookUpdate'
        required: true
      responses:
        "200":
          description: The updated webhook object
      summary: Update a webhook
      tags:
      - webhooks
  /webhooks/{webhookId}/last_event_callbacks:
    get:
      description: Retrieve the last event callbacks associated to the webhook
      operationId: GET/webhookId/last_event_callbacks
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The last_event_callbacks associated to the webhook
      summary: Retrieve the last event callbacks associated to the webhook
      tags:
      - has_many
      - event_callbacks
  /wire_transfers:
    get:
      description: List all wire transfers
      operationId: GET/wire_transfers
      responses:
        "200":
          description: A list of wire transfer objects
      summary: List all wire transfers
      tags:
      - wire_transfers
    post:
      description: Create a wire transfer
      operationId: POST/wire_transfers
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/wireTransferCreate'
        required: true
      responses:
        "201":
          description: The created wire transfer object
      summary: Create a wire transfer
      tags:
      - wire_transfers
  /wire_transfers/{wireTransferId}:
    delete:
      description: Delete a wire transfer
      operationId: DELETE/wire_transfers/wireTransferId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: wireTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      summary: Delete a wire transfer
      tags:
      - wire_transfers
    get:
      description: Retrieve a wire transfer
      operationId: GET/wire_transfers/wireTransferId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: wireTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/wireTransfer'
          description: The wire transfer object
      summary: Retrieve a wire transfer
      tags:
      - wire_transfers
    patch:
      description: Update a wire transfer
      operationId: PATCH/wire_transfers/wireTransferId
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: wireTransferId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/wireTransferUpdate'
        required: true
      responses:
        "200":
          description: The updated wire transfer object
      summary: Update a wire transfer
      tags:
      - wire_transfers
  /wire_transfers/{wireTransferId}/order:
    get:
      description: Retrieve the order associated to the wire transfer
      operationId: GET/wireTransferId/order
      parameters:
      - description: The resource's id
        explode: false
        in: path
        name: wireTransferId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The order associated to the wire transfer
      summary: Retrieve the order associated to the wire transfer
      tags:
      - has_one
      - orders
components:
  schemas:
    address:
      properties:
        data:
          $ref: '#/components/schemas/address_data'
      required:
      - data
      type: object
    addressCreate:
      properties:
        data:
          $ref: '#/components/schemas/addressCreate_data'
      required:
      - data
      type: object
    addressUpdate:
      properties:
        data:
          $ref: '#/components/schemas/addressUpdate_data'
      required:
      - data
      type: object
    adjustment:
      properties:
        data:
          $ref: '#/components/schemas/adjustment_data'
      required:
      - data
      type: object
    adjustmentCreate:
      properties:
        data:
          $ref: '#/components/schemas/adjustmentCreate_data'
      required:
      - data
      type: object
    adjustmentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/adjustmentUpdate_data'
      required:
      - data
      type: object
    adyenGateway:
      properties:
        data:
          $ref: '#/components/schemas/adyenGateway_data'
      required:
      - data
      type: object
    adyenGatewayCreate:
      properties:
        data:
          $ref: '#/components/schemas/adyenGatewayCreate_data'
      required:
      - data
      type: object
    adyenGatewayUpdate:
      properties:
        data:
          $ref: '#/components/schemas/adyenGatewayUpdate_data'
      required:
      - data
      type: object
    adyenPayment:
      properties:
        data:
          $ref: '#/components/schemas/adyenPayment_data'
      required:
      - data
      type: object
    adyenPaymentCreate:
      properties:
        data:
          $ref: '#/components/schemas/adyenPaymentCreate_data'
      required:
      - data
      type: object
    adyenPaymentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/adyenPaymentUpdate_data'
      required:
      - data
      type: object
    application:
      properties:
        data:
          $ref: '#/components/schemas/application_data'
      required:
      - data
      type: object
    attachment:
      properties:
        data:
          $ref: '#/components/schemas/attachment_data'
      required:
      - data
      type: object
    attachmentCreate:
      properties:
        data:
          $ref: '#/components/schemas/attachmentCreate_data'
      required:
      - data
      type: object
    attachmentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/attachmentUpdate_data'
      required:
      - data
      type: object
    authorization:
      properties:
        data:
          $ref: '#/components/schemas/authorization_data'
      required:
      - data
      type: object
    authorizationUpdate:
      properties:
        data:
          $ref: '#/components/schemas/authorizationUpdate_data'
      required:
      - data
      type: object
    avalaraAccount:
      properties:
        data:
          $ref: '#/components/schemas/avalaraAccount_data'
      required:
      - data
      type: object
    avalaraAccountCreate:
      properties:
        data:
          $ref: '#/components/schemas/avalaraAccountCreate_data'
      required:
      - data
      type: object
    avalaraAccountUpdate:
      properties:
        data:
          $ref: '#/components/schemas/avalaraAccountUpdate_data'
      required:
      - data
      type: object
    billingInfoValidationRule:
      properties:
        data:
          $ref: '#/components/schemas/billingInfoValidationRule_data'
      required:
      - data
      type: object
    billingInfoValidationRuleCreate:
      properties:
        data:
          $ref: '#/components/schemas/billingInfoValidationRuleCreate_data'
      required:
      - data
      type: object
    billingInfoValidationRuleUpdate:
      properties:
        data:
          $ref: '#/components/schemas/billingInfoValidationRuleUpdate_data'
      required:
      - data
      type: object
    bingGeocoder:
      properties:
        data:
          $ref: '#/components/schemas/bingGeocoder_data'
      required:
      - data
      type: object
    bingGeocoderCreate:
      properties:
        data:
          $ref: '#/components/schemas/bingGeocoderCreate_data'
      required:
      - data
      type: object
    bingGeocoderUpdate:
      properties:
        data:
          $ref: '#/components/schemas/bingGeocoderUpdate_data'
      required:
      - data
      type: object
    braintreeGateway:
      properties:
        data:
          $ref: '#/components/schemas/braintreeGateway_data'
      required:
      - data
      type: object
    braintreeGatewayCreate:
      properties:
        data:
          $ref: '#/components/schemas/braintreeGatewayCreate_data'
      required:
      - data
      type: object
    braintreeGatewayUpdate:
      properties:
        data:
          $ref: '#/components/schemas/braintreeGatewayUpdate_data'
      required:
      - data
      type: object
    braintreePayment:
      properties:
        data:
          $ref: '#/components/schemas/braintreePayment_data'
      required:
      - data
      type: object
    braintreePaymentCreate:
      properties:
        data:
          $ref: '#/components/schemas/braintreePaymentCreate_data'
      required:
      - data
      type: object
    braintreePaymentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/braintreePaymentUpdate_data'
      required:
      - data
      type: object
    bundle:
      properties:
        data:
          $ref: '#/components/schemas/bundle_data'
      required:
      - data
      type: object
    bundleCreate:
      properties:
        data:
          $ref: '#/components/schemas/bundleCreate_data'
      required:
      - data
      type: object
    bundleUpdate:
      properties:
        data:
          $ref: '#/components/schemas/bundleUpdate_data'
      required:
      - data
      type: object
    capture:
      properties:
        data:
          $ref: '#/components/schemas/capture_data'
      required:
      - data
      type: object
    captureUpdate:
      properties:
        data:
          $ref: '#/components/schemas/captureUpdate_data'
      required:
      - data
      type: object
    carrierAccount:
      properties:
        data:
          $ref: '#/components/schemas/carrierAccount_data'
      required:
      - data
      type: object
    checkoutComGateway:
      properties:
        data:
          $ref: '#/components/schemas/checkoutComGateway_data'
      required:
      - data
      type: object
    checkoutComGatewayCreate:
      properties:
        data:
          $ref: '#/components/schemas/checkoutComGatewayCreate_data'
      required:
      - data
      type: object
    checkoutComGatewayUpdate:
      properties:
        data:
          $ref: '#/components/schemas/checkoutComGatewayUpdate_data'
      required:
      - data
      type: object
    checkoutComPayment:
      properties:
        data:
          $ref: '#/components/schemas/checkoutComPayment_data'
      required:
      - data
      type: object
    checkoutComPaymentCreate:
      properties:
        data:
          $ref: '#/components/schemas/checkoutComPaymentCreate_data'
      required:
      - data
      type: object
    checkoutComPaymentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/checkoutComPaymentUpdate_data'
      required:
      - data
      type: object
    couponCodesPromotionRule:
      properties:
        data:
          $ref: '#/components/schemas/couponCodesPromotionRule_data'
      required:
      - data
      type: object
    couponCodesPromotionRuleCreate:
      properties:
        data:
          $ref: '#/components/schemas/couponCodesPromotionRuleCreate_data'
      required:
      - data
      type: object
    couponCodesPromotionRuleUpdate:
      properties:
        data:
          $ref: '#/components/schemas/couponCodesPromotionRuleUpdate_data'
      required:
      - data
      type: object
    couponRecipient:
      properties:
        data:
          $ref: '#/components/schemas/couponRecipient_data'
      required:
      - data
      type: object
    couponRecipientCreate:
      properties:
        data:
          $ref: '#/components/schemas/couponRecipientCreate_data'
      required:
      - data
      type: object
    couponRecipientUpdate:
      properties:
        data:
          $ref: '#/components/schemas/couponRecipientUpdate_data'
      required:
      - data
      type: object
    coupon:
      properties:
        data:
          $ref: '#/components/schemas/coupon_data'
      required:
      - data
      type: object
    couponCreate:
      properties:
        data:
          $ref: '#/components/schemas/couponCreate_data'
      required:
      - data
      type: object
    couponUpdate:
      properties:
        data:
          $ref: '#/components/schemas/couponUpdate_data'
      required:
      - data
      type: object
    customerAddress:
      properties:
        data:
          $ref: '#/components/schemas/customerAddress_data'
      required:
      - data
      type: object
    customerAddressCreate:
      properties:
        data:
          $ref: '#/components/schemas/customerAddressCreate_data'
      required:
      - data
      type: object
    customerAddressUpdate:
      properties:
        data:
          $ref: '#/components/schemas/customerAddressUpdate_data'
      required:
      - data
      type: object
    customerGroup:
      properties:
        data:
          $ref: '#/components/schemas/customerGroup_data'
      required:
      - data
      type: object
    customerGroupCreate:
      properties:
        data:
          $ref: '#/components/schemas/customerGroupCreate_data'
      required:
      - data
      type: object
    customerGroupUpdate:
      properties:
        data:
          $ref: '#/components/schemas/customerGroupUpdate_data'
      required:
      - data
      type: object
    customerPasswordReset:
      properties:
        data:
          $ref: '#/components/schemas/customerPasswordReset_data'
      required:
      - data
      type: object
    customerPasswordResetCreate:
      properties:
        data:
          $ref: '#/components/schemas/customerPasswordResetCreate_data'
      required:
      - data
      type: object
    customerPasswordResetUpdate:
      properties:
        data:
          $ref: '#/components/schemas/customerPasswordResetUpdate_data'
      required:
      - data
      type: object
    customerPaymentSource:
      properties:
        data:
          $ref: '#/components/schemas/customerPaymentSource_data'
      required:
      - data
      type: object
    customerPaymentSourceCreate:
      properties:
        data:
          $ref: '#/components/schemas/customerPaymentSourceCreate_data'
      required:
      - data
      type: object
    customerPaymentSourceUpdate:
      properties:
        data:
          $ref: '#/components/schemas/customerPaymentSourceUpdate_data'
      required:
      - data
      type: object
    customerSubscription:
      properties:
        data:
          $ref: '#/components/schemas/customerSubscription_data'
      required:
      - data
      type: object
    customerSubscriptionCreate:
      properties:
        data:
          $ref: '#/components/schemas/customerSubscriptionCreate_data'
      required:
      - data
      type: object
    customerSubscriptionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/customerSubscriptionUpdate_data'
      required:
      - data
      type: object
    customer:
      properties:
        data:
          $ref: '#/components/schemas/customer_data'
      required:
      - data
      type: object
    customerCreate:
      properties:
        data:
          $ref: '#/components/schemas/customerCreate_data'
      required:
      - data
      type: object
    customerUpdate:
      properties:
        data:
          $ref: '#/components/schemas/customerUpdate_data'
      required:
      - data
      type: object
    deliveryLeadTime:
      properties:
        data:
          $ref: '#/components/schemas/deliveryLeadTime_data'
      required:
      - data
      type: object
    deliveryLeadTimeCreate:
      properties:
        data:
          $ref: '#/components/schemas/deliveryLeadTimeCreate_data'
      required:
      - data
      type: object
    deliveryLeadTimeUpdate:
      properties:
        data:
          $ref: '#/components/schemas/deliveryLeadTimeUpdate_data'
      required:
      - data
      type: object
    eventCallback:
      properties:
        data:
          $ref: '#/components/schemas/eventCallback_data'
      required:
      - data
      type: object
    externalGateway:
      properties:
        data:
          $ref: '#/components/schemas/externalGateway_data'
      required:
      - data
      type: object
    externalGatewayCreate:
      properties:
        data:
          $ref: '#/components/schemas/externalGatewayCreate_data'
      required:
      - data
      type: object
    externalGatewayUpdate:
      properties:
        data:
          $ref: '#/components/schemas/externalGatewayUpdate_data'
      required:
      - data
      type: object
    externalPayment:
      properties:
        data:
          $ref: '#/components/schemas/externalPayment_data'
      required:
      - data
      type: object
    externalPaymentCreate:
      properties:
        data:
          $ref: '#/components/schemas/externalPaymentCreate_data'
      required:
      - data
      type: object
    externalPaymentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/externalPaymentUpdate_data'
      required:
      - data
      type: object
    externalPromotion:
      properties:
        data:
          $ref: '#/components/schemas/externalPromotion_data'
      required:
      - data
      type: object
    externalPromotionCreate:
      properties:
        data:
          $ref: '#/components/schemas/externalPromotionCreate_data'
      required:
      - data
      type: object
    externalPromotionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/externalPromotionUpdate_data'
      required:
      - data
      type: object
    externalTaxCalculator:
      properties:
        data:
          $ref: '#/components/schemas/externalTaxCalculator_data'
      required:
      - data
      type: object
    externalTaxCalculatorCreate:
      properties:
        data:
          $ref: '#/components/schemas/externalTaxCalculatorCreate_data'
      required:
      - data
      type: object
    externalTaxCalculatorUpdate:
      properties:
        data:
          $ref: '#/components/schemas/externalTaxCalculatorUpdate_data'
      required:
      - data
      type: object
    fixedAmountPromotion:
      properties:
        data:
          $ref: '#/components/schemas/fixedAmountPromotion_data'
      required:
      - data
      type: object
    fixedAmountPromotionCreate:
      properties:
        data:
          $ref: '#/components/schemas/fixedAmountPromotionCreate_data'
      required:
      - data
      type: object
    fixedAmountPromotionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/fixedAmountPromotionUpdate_data'
      required:
      - data
      type: object
    fixedPricePromotion:
      properties:
        data:
          $ref: '#/components/schemas/fixedPricePromotion_data'
      required:
      - data
      type: object
    fixedPricePromotionCreate:
      properties:
        data:
          $ref: '#/components/schemas/fixedPricePromotionCreate_data'
      required:
      - data
      type: object
    fixedPricePromotionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/fixedPricePromotionUpdate_data'
      required:
      - data
      type: object
    freeGiftPromotion:
      properties:
        data:
          $ref: '#/components/schemas/freeGiftPromotion_data'
      required:
      - data
      type: object
    freeGiftPromotionCreate:
      properties:
        data:
          $ref: '#/components/schemas/freeGiftPromotionCreate_data'
      required:
      - data
      type: object
    freeGiftPromotionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/freeGiftPromotionUpdate_data'
      required:
      - data
      type: object
    freeShippingPromotion:
      properties:
        data:
          $ref: '#/components/schemas/freeShippingPromotion_data'
      required:
      - data
      type: object
    freeShippingPromotionCreate:
      properties:
        data:
          $ref: '#/components/schemas/freeShippingPromotionCreate_data'
      required:
      - data
      type: object
    freeShippingPromotionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/freeShippingPromotionUpdate_data'
      required:
      - data
      type: object
    geocoder:
      properties:
        data:
          $ref: '#/components/schemas/geocoder_data'
      required:
      - data
      type: object
    giftCardRecipient:
      properties:
        data:
          $ref: '#/components/schemas/giftCardRecipient_data'
      required:
      - data
      type: object
    giftCardRecipientCreate:
      properties:
        data:
          $ref: '#/components/schemas/giftCardRecipientCreate_data'
      required:
      - data
      type: object
    giftCardRecipientUpdate:
      properties:
        data:
          $ref: '#/components/schemas/giftCardRecipientUpdate_data'
      required:
      - data
      type: object
    giftCard:
      properties:
        data:
          $ref: '#/components/schemas/giftCard_data'
      required:
      - data
      type: object
    giftCardCreate:
      properties:
        data:
          $ref: '#/components/schemas/giftCardCreate_data'
      required:
      - data
      type: object
    giftCardUpdate:
      properties:
        data:
          $ref: '#/components/schemas/giftCardUpdate_data'
      required:
      - data
      type: object
    googleGeocoder:
      properties:
        data:
          $ref: '#/components/schemas/googleGeocoder_data'
      required:
      - data
      type: object
    googleGeocoderCreate:
      properties:
        data:
          $ref: '#/components/schemas/googleGeocoderCreate_data'
      required:
      - data
      type: object
    googleGeocoderUpdate:
      properties:
        data:
          $ref: '#/components/schemas/googleGeocoderUpdate_data'
      required:
      - data
      type: object
    import:
      properties:
        data:
          $ref: '#/components/schemas/import_data'
      required:
      - data
      type: object
    importCreate:
      properties:
        data:
          $ref: '#/components/schemas/importCreate_data'
      required:
      - data
      type: object
    inStockSubscription:
      properties:
        data:
          $ref: '#/components/schemas/inStockSubscription_data'
      required:
      - data
      type: object
    inStockSubscriptionCreate:
      properties:
        data:
          $ref: '#/components/schemas/inStockSubscriptionCreate_data'
      required:
      - data
      type: object
    inStockSubscriptionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/inStockSubscriptionUpdate_data'
      required:
      - data
      type: object
    inventoryModel:
      properties:
        data:
          $ref: '#/components/schemas/inventoryModel_data'
      required:
      - data
      type: object
    inventoryModelCreate:
      properties:
        data:
          $ref: '#/components/schemas/inventoryModelCreate_data'
      required:
      - data
      type: object
    inventoryModelUpdate:
      properties:
        data:
          $ref: '#/components/schemas/inventoryModelUpdate_data'
      required:
      - data
      type: object
    inventoryReturnLocation:
      properties:
        data:
          $ref: '#/components/schemas/inventoryReturnLocation_data'
      required:
      - data
      type: object
    inventoryReturnLocationCreate:
      properties:
        data:
          $ref: '#/components/schemas/inventoryReturnLocationCreate_data'
      required:
      - data
      type: object
    inventoryReturnLocationUpdate:
      properties:
        data:
          $ref: '#/components/schemas/inventoryReturnLocationUpdate_data'
      required:
      - data
      type: object
    inventoryStockLocation:
      properties:
        data:
          $ref: '#/components/schemas/inventoryStockLocation_data'
      required:
      - data
      type: object
    inventoryStockLocationCreate:
      properties:
        data:
          $ref: '#/components/schemas/inventoryStockLocationCreate_data'
      required:
      - data
      type: object
    inventoryStockLocationUpdate:
      properties:
        data:
          $ref: '#/components/schemas/inventoryStockLocationUpdate_data'
      required:
      - data
      type: object
    klarnaGateway:
      properties:
        data:
          $ref: '#/components/schemas/klarnaGateway_data'
      required:
      - data
      type: object
    klarnaGatewayCreate:
      properties:
        data:
          $ref: '#/components/schemas/klarnaGatewayCreate_data'
      required:
      - data
      type: object
    klarnaGatewayUpdate:
      properties:
        data:
          $ref: '#/components/schemas/klarnaGatewayUpdate_data'
      required:
      - data
      type: object
    klarnaPayment:
      properties:
        data:
          $ref: '#/components/schemas/klarnaPayment_data'
      required:
      - data
      type: object
    klarnaPaymentCreate:
      properties:
        data:
          $ref: '#/components/schemas/klarnaPaymentCreate_data'
      required:
      - data
      type: object
    klarnaPaymentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/klarnaPaymentUpdate_data'
      required:
      - data
      type: object
    lineItemOption:
      properties:
        data:
          $ref: '#/components/schemas/lineItemOption_data'
      required:
      - data
      type: object
    lineItemOptionCreate:
      properties:
        data:
          $ref: '#/components/schemas/lineItemOptionCreate_data'
      required:
      - data
      type: object
    lineItemOptionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/lineItemOptionUpdate_data'
      required:
      - data
      type: object
    lineItem:
      properties:
        data:
          $ref: '#/components/schemas/lineItem_data'
      required:
      - data
      type: object
    lineItemCreate:
      properties:
        data:
          $ref: '#/components/schemas/lineItemCreate_data'
      required:
      - data
      type: object
    lineItemUpdate:
      properties:
        data:
          $ref: '#/components/schemas/lineItemUpdate_data'
      required:
      - data
      type: object
    manualGateway:
      properties:
        data:
          $ref: '#/components/schemas/manualGateway_data'
      required:
      - data
      type: object
    manualGatewayCreate:
      properties:
        data:
          $ref: '#/components/schemas/manualGatewayCreate_data'
      required:
      - data
      type: object
    manualGatewayUpdate:
      properties:
        data:
          $ref: '#/components/schemas/manualGatewayUpdate_data'
      required:
      - data
      type: object
    manualTaxCalculator:
      properties:
        data:
          $ref: '#/components/schemas/manualTaxCalculator_data'
      required:
      - data
      type: object
    manualTaxCalculatorCreate:
      properties:
        data:
          $ref: '#/components/schemas/manualTaxCalculatorCreate_data'
      required:
      - data
      type: object
    manualTaxCalculatorUpdate:
      properties:
        data:
          $ref: '#/components/schemas/manualTaxCalculatorUpdate_data'
      required:
      - data
      type: object
    market:
      properties:
        data:
          $ref: '#/components/schemas/market_data'
      required:
      - data
      type: object
    marketCreate:
      properties:
        data:
          $ref: '#/components/schemas/marketCreate_data'
      required:
      - data
      type: object
    marketUpdate:
      properties:
        data:
          $ref: '#/components/schemas/marketUpdate_data'
      required:
      - data
      type: object
    merchant:
      properties:
        data:
          $ref: '#/components/schemas/merchant_data'
      required:
      - data
      type: object
    merchantCreate:
      properties:
        data:
          $ref: '#/components/schemas/merchantCreate_data'
      required:
      - data
      type: object
    merchantUpdate:
      properties:
        data:
          $ref: '#/components/schemas/merchantUpdate_data'
      required:
      - data
      type: object
    orderAmountPromotionRule:
      properties:
        data:
          $ref: '#/components/schemas/orderAmountPromotionRule_data'
      required:
      - data
      type: object
    orderAmountPromotionRuleCreate:
      properties:
        data:
          $ref: '#/components/schemas/orderAmountPromotionRuleCreate_data'
      required:
      - data
      type: object
    orderAmountPromotionRuleUpdate:
      properties:
        data:
          $ref: '#/components/schemas/orderAmountPromotionRuleUpdate_data'
      required:
      - data
      type: object
    orderCopy:
      properties:
        data:
          $ref: '#/components/schemas/orderCopy_data'
      required:
      - data
      type: object
    orderCopyCreate:
      properties:
        data:
          $ref: '#/components/schemas/orderCopyCreate_data'
      required:
      - data
      type: object
    orderSubscription:
      properties:
        data:
          $ref: '#/components/schemas/orderSubscription_data'
      required:
      - data
      type: object
    orderSubscriptionCreate:
      properties:
        data:
          $ref: '#/components/schemas/orderSubscriptionCreate_data'
      required:
      - data
      type: object
    orderSubscriptionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/orderSubscriptionUpdate_data'
      required:
      - data
      type: object
    orderValidationRule:
      properties:
        data:
          $ref: '#/components/schemas/orderValidationRule_data'
      required:
      - data
      type: object
    order:
      properties:
        data:
          $ref: '#/components/schemas/order_data'
      required:
      - data
      type: object
    orderCreate:
      properties:
        data:
          $ref: '#/components/schemas/orderCreate_data'
      required:
      - data
      type: object
    orderUpdate:
      properties:
        data:
          $ref: '#/components/schemas/orderUpdate_data'
      required:
      - data
      type: object
    organization:
      properties:
        data:
          $ref: '#/components/schemas/organization_data'
      required:
      - data
      type: object
    package:
      properties:
        data:
          $ref: '#/components/schemas/package_data'
      required:
      - data
      type: object
    packageCreate:
      properties:
        data:
          $ref: '#/components/schemas/packageCreate_data'
      required:
      - data
      type: object
    packageUpdate:
      properties:
        data:
          $ref: '#/components/schemas/packageUpdate_data'
      required:
      - data
      type: object
    parcelLineItem:
      properties:
        data:
          $ref: '#/components/schemas/parcelLineItem_data'
      required:
      - data
      type: object
    parcelLineItemCreate:
      properties:
        data:
          $ref: '#/components/schemas/parcelLineItemCreate_data'
      required:
      - data
      type: object
    parcelLineItemUpdate:
      properties:
        data:
          $ref: '#/components/schemas/parcelLineItemUpdate_data'
      required:
      - data
      type: object
    parcel:
      properties:
        data:
          $ref: '#/components/schemas/parcel_data'
      required:
      - data
      type: object
    parcelCreate:
      properties:
        data:
          $ref: '#/components/schemas/parcelCreate_data'
      required:
      - data
      type: object
    parcelUpdate:
      properties:
        data:
          $ref: '#/components/schemas/parcelUpdate_data'
      required:
      - data
      type: object
    paymentGateway:
      properties:
        data:
          $ref: '#/components/schemas/paymentGateway_data'
      required:
      - data
      type: object
    paymentMethod:
      properties:
        data:
          $ref: '#/components/schemas/paymentMethod_data'
      required:
      - data
      type: object
    paymentMethodCreate:
      properties:
        data:
          $ref: '#/components/schemas/paymentMethodCreate_data'
      required:
      - data
      type: object
    paymentMethodUpdate:
      properties:
        data:
          $ref: '#/components/schemas/paymentMethodUpdate_data'
      required:
      - data
      type: object
    paypalGateway:
      properties:
        data:
          $ref: '#/components/schemas/paypalGateway_data'
      required:
      - data
      type: object
    paypalGatewayCreate:
      properties:
        data:
          $ref: '#/components/schemas/paypalGatewayCreate_data'
      required:
      - data
      type: object
    paypalGatewayUpdate:
      properties:
        data:
          $ref: '#/components/schemas/paypalGatewayUpdate_data'
      required:
      - data
      type: object
    paypalPayment:
      properties:
        data:
          $ref: '#/components/schemas/paypalPayment_data'
      required:
      - data
      type: object
    paypalPaymentCreate:
      properties:
        data:
          $ref: '#/components/schemas/paypalPaymentCreate_data'
      required:
      - data
      type: object
    paypalPaymentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/paypalPaymentUpdate_data'
      required:
      - data
      type: object
    percentageDiscountPromotion:
      properties:
        data:
          $ref: '#/components/schemas/percentageDiscountPromotion_data'
      required:
      - data
      type: object
    percentageDiscountPromotionCreate:
      properties:
        data:
          $ref: '#/components/schemas/percentageDiscountPromotionCreate_data'
      required:
      - data
      type: object
    percentageDiscountPromotionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/percentageDiscountPromotionUpdate_data'
      required:
      - data
      type: object
    priceList:
      properties:
        data:
          $ref: '#/components/schemas/priceList_data'
      required:
      - data
      type: object
    priceListCreate:
      properties:
        data:
          $ref: '#/components/schemas/priceListCreate_data'
      required:
      - data
      type: object
    priceListUpdate:
      properties:
        data:
          $ref: '#/components/schemas/priceListUpdate_data'
      required:
      - data
      type: object
    price:
      properties:
        data:
          $ref: '#/components/schemas/price_data'
      required:
      - data
      type: object
    priceCreate:
      properties:
        data:
          $ref: '#/components/schemas/priceCreate_data'
      required:
      - data
      type: object
    priceUpdate:
      properties:
        data:
          $ref: '#/components/schemas/priceUpdate_data'
      required:
      - data
      type: object
    promotionRule:
      properties:
        data:
          $ref: '#/components/schemas/promotionRule_data'
      required:
      - data
      type: object
    promotion:
      properties:
        data:
          $ref: '#/components/schemas/promotion_data'
      required:
      - data
      type: object
    refund:
      properties:
        data:
          $ref: '#/components/schemas/refund_data'
      required:
      - data
      type: object
    returnLineItem:
      properties:
        data:
          $ref: '#/components/schemas/returnLineItem_data'
      required:
      - data
      type: object
    returnLineItemCreate:
      properties:
        data:
          $ref: '#/components/schemas/returnLineItemCreate_data'
      required:
      - data
      type: object
    returnLineItemUpdate:
      properties:
        data:
          $ref: '#/components/schemas/returnLineItemUpdate_data'
      required:
      - data
      type: object
    return:
      properties:
        data:
          $ref: '#/components/schemas/return_data'
      required:
      - data
      type: object
    returnCreate:
      properties:
        data:
          $ref: '#/components/schemas/returnCreate_data'
      required:
      - data
      type: object
    returnUpdate:
      properties:
        data:
          $ref: '#/components/schemas/returnUpdate_data'
      required:
      - data
      type: object
    shipment:
      properties:
        data:
          $ref: '#/components/schemas/shipment_data'
      required:
      - data
      type: object
    shipmentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/shipmentUpdate_data'
      required:
      - data
      type: object
    shippingCategory:
      properties:
        data:
          $ref: '#/components/schemas/shippingCategory_data'
      required:
      - data
      type: object
    shippingCategoryCreate:
      properties:
        data:
          $ref: '#/components/schemas/shippingCategoryCreate_data'
      required:
      - data
      type: object
    shippingCategoryUpdate:
      properties:
        data:
          $ref: '#/components/schemas/shippingCategoryUpdate_data'
      required:
      - data
      type: object
    shippingMethod:
      properties:
        data:
          $ref: '#/components/schemas/shippingMethod_data'
      required:
      - data
      type: object
    shippingMethodCreate:
      properties:
        data:
          $ref: '#/components/schemas/shippingMethodCreate_data'
      required:
      - data
      type: object
    shippingMethodUpdate:
      properties:
        data:
          $ref: '#/components/schemas/shippingMethodUpdate_data'
      required:
      - data
      type: object
    shippingZone:
      properties:
        data:
          $ref: '#/components/schemas/shippingZone_data'
      required:
      - data
      type: object
    shippingZoneCreate:
      properties:
        data:
          $ref: '#/components/schemas/shippingZoneCreate_data'
      required:
      - data
      type: object
    shippingZoneUpdate:
      properties:
        data:
          $ref: '#/components/schemas/shippingZoneUpdate_data'
      required:
      - data
      type: object
    skuListItem:
      properties:
        data:
          $ref: '#/components/schemas/skuListItem_data'
      required:
      - data
      type: object
    skuListItemCreate:
      properties:
        data:
          $ref: '#/components/schemas/skuListItemCreate_data'
      required:
      - data
      type: object
    skuListItemUpdate:
      properties:
        data:
          $ref: '#/components/schemas/skuListItemUpdate_data'
      required:
      - data
      type: object
    skuListPromotionRule:
      properties:
        data:
          $ref: '#/components/schemas/skuListPromotionRule_data'
      required:
      - data
      type: object
    skuListPromotionRuleCreate:
      properties:
        data:
          $ref: '#/components/schemas/skuListPromotionRuleCreate_data'
      required:
      - data
      type: object
    skuListPromotionRuleUpdate:
      properties:
        data:
          $ref: '#/components/schemas/skuListPromotionRuleUpdate_data'
      required:
      - data
      type: object
    skuList:
      properties:
        data:
          $ref: '#/components/schemas/skuList_data'
      required:
      - data
      type: object
    skuListCreate:
      properties:
        data:
          $ref: '#/components/schemas/skuListCreate_data'
      required:
      - data
      type: object
    skuListUpdate:
      properties:
        data:
          $ref: '#/components/schemas/skuListUpdate_data'
      required:
      - data
      type: object
    skuOption:
      properties:
        data:
          $ref: '#/components/schemas/skuOption_data'
      required:
      - data
      type: object
    skuOptionCreate:
      properties:
        data:
          $ref: '#/components/schemas/skuOptionCreate_data'
      required:
      - data
      type: object
    skuOptionUpdate:
      properties:
        data:
          $ref: '#/components/schemas/skuOptionUpdate_data'
      required:
      - data
      type: object
    sku:
      properties:
        data:
          $ref: '#/components/schemas/sku_data'
      required:
      - data
      type: object
    skuCreate:
      properties:
        data:
          $ref: '#/components/schemas/skuCreate_data'
      required:
      - data
      type: object
    skuUpdate:
      properties:
        data:
          $ref: '#/components/schemas/skuUpdate_data'
      required:
      - data
      type: object
    stockItem:
      properties:
        data:
          $ref: '#/components/schemas/stockItem_data'
      required:
      - data
      type: object
    stockItemCreate:
      properties:
        data:
          $ref: '#/components/schemas/stockItemCreate_data'
      required:
      - data
      type: object
    stockItemUpdate:
      properties:
        data:
          $ref: '#/components/schemas/stockItemUpdate_data'
      required:
      - data
      type: object
    stockLineItem:
      properties:
        data:
          $ref: '#/components/schemas/stockLineItem_data'
      required:
      - data
      type: object
    stockLocation:
      properties:
        data:
          $ref: '#/components/schemas/stockLocation_data'
      required:
      - data
      type: object
    stockLocationCreate:
      properties:
        data:
          $ref: '#/components/schemas/stockLocationCreate_data'
      required:
      - data
      type: object
    stockLocationUpdate:
      properties:
        data:
          $ref: '#/components/schemas/stockLocationUpdate_data'
      required:
      - data
      type: object
    stockTransfer:
      properties:
        data:
          $ref: '#/components/schemas/stockTransfer_data'
      required:
      - data
      type: object
    stockTransferCreate:
      properties:
        data:
          $ref: '#/components/schemas/stockTransferCreate_data'
      required:
      - data
      type: object
    stockTransferUpdate:
      properties:
        data:
          $ref: '#/components/schemas/stockTransferUpdate_data'
      required:
      - data
      type: object
    stripeGateway:
      properties:
        data:
          $ref: '#/components/schemas/stripeGateway_data'
      required:
      - data
      type: object
    stripeGatewayCreate:
      properties:
        data:
          $ref: '#/components/schemas/stripeGatewayCreate_data'
      required:
      - data
      type: object
    stripeGatewayUpdate:
      properties:
        data:
          $ref: '#/components/schemas/stripeGatewayUpdate_data'
      required:
      - data
      type: object
    stripePayment:
      properties:
        data:
          $ref: '#/components/schemas/stripePayment_data'
      required:
      - data
      type: object
    stripePaymentCreate:
      properties:
        data:
          $ref: '#/components/schemas/stripePaymentCreate_data'
      required:
      - data
      type: object
    stripePaymentUpdate:
      properties:
        data:
          $ref: '#/components/schemas/stripePaymentUpdate_data'
      required:
      - data
      type: object
    taxCalculator:
      properties:
        data:
          $ref: '#/components/schemas/taxCalculator_data'
      required:
      - data
      type: object
    taxCategory:
      properties:
        data:
          $ref: '#/components/schemas/taxCategory_data'
      required:
      - data
      type: object
    taxCategoryCreate:
      properties:
        data:
          $ref: '#/components/schemas/taxCategoryCreate_data'
      required:
      - data
      type: object
    taxCategoryUpdate:
      properties:
        data:
          $ref: '#/components/schemas/taxCategoryUpdate_data'
      required:
      - data
      type: object
    taxRule:
      properties:
        data:
          $ref: '#/components/schemas/taxRule_data'
      required:
      - data
      type: object
    taxRuleCreate:
      properties:
        data:
          $ref: '#/components/schemas/taxRuleCreate_data'
      required:
      - data
      type: object
    taxRuleUpdate:
      properties:
        data:
          $ref: '#/components/schemas/taxRuleUpdate_data'
      required:
      - data
      type: object
    taxjarAccount:
      properties:
        data:
          $ref: '#/components/schemas/taxjarAccount_data'
      required:
      - data
      type: object
    taxjarAccountCreate:
      properties:
        data:
          $ref: '#/components/schemas/taxjarAccountCreate_data'
      required:
      - data
      type: object
    taxjarAccountUpdate:
      properties:
        data:
          $ref: '#/components/schemas/taxjarAccountUpdate_data'
      required:
      - data
      type: object
    transaction:
      properties:
        data:
          $ref: '#/components/schemas/transaction_data'
      required:
      - data
      type: object
    void:
      properties:
        data:
          $ref: '#/components/schemas/void_data'
      required:
      - data
      type: object
    webhook:
      properties:
        data:
          $ref: '#/components/schemas/webhook_data'
      required:
      - data
      type: object
    webhookCreate:
      properties:
        data:
          $ref: '#/components/schemas/webhookCreate_data'
      required:
      - data
      type: object
    webhookUpdate:
      properties:
        data:
          $ref: '#/components/schemas/webhookUpdate_data'
      required:
      - data
      type: object
    wireTransfer:
      properties:
        data:
          $ref: '#/components/schemas/wireTransfer_data'
      required:
      - data
      type: object
    wireTransferCreate:
      properties:
        data:
          $ref: '#/components/schemas/wireTransferCreate_data'
      required:
      - data
      type: object
    wireTransferUpdate:
      properties:
        data:
          $ref: '#/components/schemas/wireTransferUpdate_data'
      required:
      - data
      type: object
    address_data_attributes:
      properties:
        business:
          description: Indicates if it's a business or a personal address
          example: false
          type: boolean
        first_name:
          description: Address first name (personal)
          example: John
          type: string
        last_name:
          description: Address last name (personal)
          example: Smith
          type: string
        company:
          description: Address company name (business)
          example: The Red Brand Inc.
          type: string
        full_name:
          description: Company name (business) of first name and last name (personal)
          example: John Smith
          type: string
        line_1:
          description: "Address line 1, i.e. Street address, PO Box"
          example: 2883 Geraldine Lane
          type: string
        line_2:
          description: "Address line 2, i.e. Apartment, Suite, Building"
          example: Apt.23
          type: string
        city:
          description: Address city
          example: New York
          type: string
        zip_code:
          description: ZIP or postal code
          example: "10013"
          type: string
        state_code:
          description: "State, province or region code."
          example: NY
          type: string
        country_code:
          description: The international 2-letter country code as defined by the ISO
            3166-1 standard
          example: US
          type: string
        phone:
          description: Phone number (including extension).
          example: (212) 646-338-1228
          type: string
        full_address:
          description: "Compact description of the address location, without the full\
            \ name"
          example: "2883 Geraldine Lane Apt.23, 10013 New York NY (US) (212) 646-338-1228"
          type: string
        name:
          description: "Compact description of the address location, including the\
            \ full name"
          example: "John Smith, 2883 Geraldine Lane Apt.23, 10013 New York NY (US)\
            \ (212) 646-338-1228"
          type: string
        email:
          description: Email address.
          example: john@example.com
          type: string
        notes:
          description: "A free notes attached to the address. When used as a shipping\
            \ address, this can be useful to let the customers add specific delivery\
            \ instructions."
          example: Please ring the bell twice
          type: string
        lat:
          description: The address geocoded latitude. This is automatically generated
            when creating a shipping/billing address for an order and a valid geocoder
            is attached to the order's market.
          example: 40.6971494
          type: number
        lng:
          description: The address geocoded longitude. This is automatically generated
            when creating a shipping/billing address for an order and a valid geocoder
            is attached to the order's market.
          example: -74.2598672
          type: number
        is_localized:
          description: "Indicates if the latitude and logitude are present, either\
            \ geocoded or manually updated"
          example: true
          type: boolean
        is_geocoded:
          description: Indicates if the address has been successfully geocoded
          example: true
          type: boolean
        provider_name:
          description: The geocoder provider name (either Google or Bing)
          example: google
          type: string
        map_url:
          description: The map url of the geocoded address (if geocoded)
          example: "https://www.google.com/maps/search/?api=1&query=40.6971494,-74.2598672"
          type: string
        static_map_url:
          description: The static map image url of the geocoded address (if geocoded)
          example: "https://maps.googleapis.com/maps/api/staticmap?center=40.6971494,-74.2598672&size=640x320&zoom=15"
          type: string
        billing_info:
          description: "Customer's billing information (i.e. VAT number, codice fiscale)"
          example: VAT ID IT02382940977
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    address_data_relationships_geocoder:
      properties:
        type:
          default: geocoders
          description: The resource's type
          example: geocoders
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    address_data_relationships:
      properties:
        geocoder:
          $ref: '#/components/schemas/address_data_relationships_geocoder'
      type: object
    address_data:
      properties:
        type:
          default: addresses
          description: The resource's type
          example: addresses
          type: string
        attributes:
          $ref: '#/components/schemas/address_data_attributes'
        relationships:
          $ref: '#/components/schemas/address_data_relationships'
      required:
      - attributes
      - type
      type: object
    addressCreate_data_attributes:
      properties:
        business:
          description: Indicates if it's a business or a personal address
          example: false
          type: boolean
        first_name:
          description: Address first name (personal)
          example: John
          type: string
        last_name:
          description: Address last name (personal)
          example: Smith
          type: string
        company:
          description: Address company name (business)
          example: The Red Brand Inc.
          type: string
        line_1:
          description: "Address line 1, i.e. Street address, PO Box"
          example: 2883 Geraldine Lane
          type: string
        line_2:
          description: "Address line 2, i.e. Apartment, Suite, Building"
          example: Apt.23
          type: string
        city:
          description: Address city
          example: New York
          type: string
        zip_code:
          description: ZIP or postal code
          example: "10013"
          type: string
        state_code:
          description: "State, province or region code."
          example: NY
          type: string
        country_code:
          description: The international 2-letter country code as defined by the ISO
            3166-1 standard
          example: US
          type: string
        phone:
          description: Phone number (including extension).
          example: (212) 646-338-1228
          type: string
        email:
          description: Email address.
          example: john@example.com
          type: string
        notes:
          description: "A free notes attached to the address. When used as a shipping\
            \ address, this can be useful to let the customers add specific delivery\
            \ instructions."
          example: Please ring the bell twice
          type: string
        lat:
          description: The address geocoded latitude. This is automatically generated
            when creating a shipping/billing address for an order and a valid geocoder
            is attached to the order's market.
          example: 40.6971494
          type: number
        lng:
          description: The address geocoded longitude. This is automatically generated
            when creating a shipping/billing address for an order and a valid geocoder
            is attached to the order's market.
          example: -74.2598672
          type: number
        billing_info:
          description: "Customer's billing information (i.e. VAT number, codice fiscale)"
          example: VAT ID IT02382940977
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - city
      - country_code
      - line_1
      - phone
      - state_code
      type: object
    addressCreate_data:
      properties:
        type:
          default: addresses
          description: The resource's type
          example: addresses
          type: string
        attributes:
          $ref: '#/components/schemas/addressCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/address_data_relationships'
      required:
      - attributes
      - type
      type: object
    addressUpdate_data_attributes:
      properties:
        business:
          description: Indicates if it's a business or a personal address
          example: false
          type: boolean
        first_name:
          description: Address first name (personal)
          example: John
          type: string
        last_name:
          description: Address last name (personal)
          example: Smith
          type: string
        company:
          description: Address company name (business)
          example: The Red Brand Inc.
          type: string
        line_1:
          description: "Address line 1, i.e. Street address, PO Box"
          example: 2883 Geraldine Lane
          type: string
        line_2:
          description: "Address line 2, i.e. Apartment, Suite, Building"
          example: Apt.23
          type: string
        city:
          description: Address city
          example: New York
          type: string
        zip_code:
          description: ZIP or postal code
          example: "10013"
          type: string
        state_code:
          description: "State, province or region code."
          example: NY
          type: string
        country_code:
          description: The international 2-letter country code as defined by the ISO
            3166-1 standard
          example: US
          type: string
        phone:
          description: Phone number (including extension).
          example: (212) 646-338-1228
          type: string
        email:
          description: Email address.
          example: john@example.com
          type: string
        notes:
          description: "A free notes attached to the address. When used as a shipping\
            \ address, this can be useful to let the customers add specific delivery\
            \ instructions."
          example: Please ring the bell twice
          type: string
        lat:
          description: The address geocoded latitude. This is automatically generated
            when creating a shipping/billing address for an order and a valid geocoder
            is attached to the order's market.
          example: 40.6971494
          type: number
        lng:
          description: The address geocoded longitude. This is automatically generated
            when creating a shipping/billing address for an order and a valid geocoder
            is attached to the order's market.
          example: -74.2598672
          type: number
        billing_info:
          description: "Customer's billing information (i.e. VAT number, codice fiscale)"
          example: VAT ID IT02382940977
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    addressUpdate_data:
      properties:
        type:
          default: addresses
          description: The resource's type
          example: addresses
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/addressUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/address_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    adjustment_data_attributes:
      properties:
        name:
          description: The adjustment name
          example: Additional service
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        amount_cents:
          description: "The adjustment amount, in cents."
          example: 1500
          type: integer
        amount_float:
          description: "The adjustment amount, float."
          example: 15.0
          type: number
        formatted_amount:
          description: "The adjustment amount, formatted."
          example: "€15,00"
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    adjustment_data:
      properties:
        type:
          default: adjustments
          description: The resource's type
          example: adjustments
          type: string
        attributes:
          $ref: '#/components/schemas/adjustment_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    adjustmentCreate_data_attributes:
      properties:
        name:
          description: The adjustment name
          example: Additional service
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        amount_cents:
          description: "The adjustment amount, in cents."
          example: 1500
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - amount_cents
      - currency_code
      - name
      type: object
    adjustmentCreate_data:
      properties:
        type:
          default: adjustments
          description: The resource's type
          example: adjustments
          type: string
        attributes:
          $ref: '#/components/schemas/adjustmentCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    adjustmentUpdate_data_attributes:
      properties:
        name:
          description: The adjustment name
          example: Additional service
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        amount_cents:
          description: "The adjustment amount, in cents."
          example: 1500
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    adjustmentUpdate_data:
      properties:
        type:
          default: adjustments
          description: The resource's type
          example: adjustments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adjustmentUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    adyenGateway_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        live_url_prefix:
          description: The prefix of the endpoint used for live transactions.
          example: 1797a841fbb37ca7-AdyenDemo
          type: string
      type: object
    adyenGateway_data_relationships_payment_methods:
      properties:
        type:
          default: payment_methods
          description: The resource's type
          example: payment_methods
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    adyenGateway_data_relationships_adyen_payments:
      properties:
        type:
          default: adyen_payments
          description: The resource's type
          example: adyen_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    adyenGateway_data_relationships:
      properties:
        payment_methods:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        adyen_payments:
          $ref: '#/components/schemas/adyenGateway_data_relationships_adyen_payments'
      type: object
    adyenGateway_data:
      properties:
        type:
          default: adyen_gateways
          description: The resource's type
          example: adyen_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/adyenGateway_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenGateway_data_relationships'
      required:
      - attributes
      - type
      type: object
    adyenGatewayCreate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        merchant_account:
          description: The gateway merchant account.
          example: xxxx-yyyy-zzzz
          type: string
        api_key:
          description: The gateway API key.
          example: xxxx-yyyy-zzzz
          type: string
        public_key:
          description: The public key linked to your API credential.
          example: xxxx-yyyy-zzzz
          type: string
        live_url_prefix:
          description: The prefix of the endpoint used for live transactions.
          example: 1797a841fbb37ca7-AdyenDemo
          type: string
      required:
      - api_key
      - live_url_prefix
      - merchant_account
      - name
      type: object
    adyenGatewayCreate_data_relationships:
      properties:
        adyen_payments:
          $ref: '#/components/schemas/adyenGateway_data_relationships_adyen_payments'
      type: object
    adyenGatewayCreate_data:
      properties:
        type:
          default: adyen_gateways
          description: The resource's type
          example: adyen_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/adyenGatewayCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenGatewayCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    adyenGatewayUpdate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        merchant_account:
          description: The gateway merchant account.
          example: xxxx-yyyy-zzzz
          type: string
        api_key:
          description: The gateway API key.
          example: xxxx-yyyy-zzzz
          type: string
        public_key:
          description: The public key linked to your API credential.
          example: xxxx-yyyy-zzzz
          type: string
        live_url_prefix:
          description: The prefix of the endpoint used for live transactions.
          example: 1797a841fbb37ca7-AdyenDemo
          type: string
      type: object
    adyenGatewayUpdate_data:
      properties:
        type:
          default: adyen_gateways
          description: The resource's type
          example: adyen_gateways
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adyenGatewayUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenGatewayCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    adyenPayment_data_attributes:
      properties:
        public_key:
          description: The public key linked to your API credential.
          example: xxxx-yyyy-zzzz
          type: string
        payment_methods:
          description: The merchant available payment methods for the assoiated order
            (i.e. country and amount). Required by the Adyen JS SDK.
          example:
            foo: bar
          type: object
        payment_request_data:
          description: "The Adyen payment request data, collected by client."
          example:
            foo: bar
          type: object
        payment_request_details:
          description: "The Adyen additional details request data, collected by client."
          example:
            foo: bar
          type: object
        payment_response:
          description: "The Adyen payment response, used by client (includes 'resultCode'\
            \ and 'action')."
          example:
            foo: bar
          type: object
        mismatched_amounts:
          description: Indicates if the order current amount differs form the one
            of the associated authorization.
          example: false
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    adyenPayment_data_relationships_order:
      properties:
        type:
          default: orders
          description: The resource's type
          example: orders
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    adyenPayment_data_relationships_payment_gateway:
      properties:
        type:
          default: payment_gateways
          description: The resource's type
          example: payment_gateways
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    adyenPayment_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        payment_gateway:
          $ref: '#/components/schemas/adyenPayment_data_relationships_payment_gateway'
      type: object
    adyenPayment_data:
      properties:
        type:
          default: adyen_payments
          description: The resource's type
          example: adyen_payments
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPayment_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPayment_data_relationships'
      required:
      - attributes
      - type
      type: object
    adyenPaymentCreate_data_attributes:
      properties:
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    adyenPaymentCreate_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
      required:
      - order
      type: object
    adyenPaymentCreate_data:
      properties:
        type:
          default: adyen_payments
          description: The resource's type
          example: adyen_payments
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    adyenPaymentUpdate_data_attributes:
      properties:
        payment_request_data:
          description: "The Adyen payment request data, collected by client."
          example:
            foo: bar
          type: object
        payment_request_details:
          description: "The Adyen additional details request data, collected by client."
          example:
            foo: bar
          type: object
        payment_response:
          description: "The Adyen payment response, used by client (includes 'resultCode'\
            \ and 'action')."
          example:
            foo: bar
          type: object
        _details:
          description: Send this attribute if you want to send additional details
            the payment request.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    adyenPaymentUpdate_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
      type: object
    adyenPaymentUpdate_data:
      properties:
        type:
          default: adyen_payments
          description: The resource's type
          example: adyen_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    application_data_attributes:
      properties:
        name:
          description: The application's internal name.
          example: My app
          type: string
        kind:
          description: "The application's kind, can be one of: 'sales_channel', 'checkout',\
            \ 'contentful', 'datocms', 'sanity', 'cli', 'integration', 'webapp', 'zapier',\
            \ or 'channel'"
          example: sales-channel
          type: string
        public_access:
          description: Indicates if the application has public access.
          example: "true"
          type: string
        redirect_uri:
          description: The application's redirect URI.
          example: https://bluebrand.com/img/logo.svg
          type: string
        scopes:
          description: The application's scopes.
          example: market:all market:9 market:122 market:6 stock_location:6 stock_location:33
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    application_data:
      properties:
        type:
          default: application
          description: The resource's type
          example: application
          type: string
        attributes:
          $ref: '#/components/schemas/application_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    attachment_data_attributes:
      properties:
        name:
          description: The internal name of the attachment.
          example: DDT transport document
          type: string
        description:
          description: An internal description of the attachment.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        url:
          description: The attachment URL.
          example: https://s3.yourdomain.com/attachment.pdf
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    attachment_data_relationships_attachable:
      oneOf:
      - $ref: '#/components/schemas/bundle'
      - $ref: '#/components/schemas/carrierAccount'
      - $ref: '#/components/schemas/customerGroup'
      - $ref: '#/components/schemas/customer'
      - $ref: '#/components/schemas/deliveryLeadTime'
      - $ref: '#/components/schemas/geocoder'
      - $ref: '#/components/schemas/giftCardRecipient'
      - $ref: '#/components/schemas/giftCard'
      - $ref: '#/components/schemas/inventoryModel'
      - $ref: '#/components/schemas/market'
      - $ref: '#/components/schemas/merchant'
      - $ref: '#/components/schemas/billingInfoValidationRule'
      - $ref: '#/components/schemas/order'
      - $ref: '#/components/schemas/package'
      - $ref: '#/components/schemas/parcel'
      - $ref: '#/components/schemas/paymentMethod'
      - $ref: '#/components/schemas/priceList'
      - $ref: '#/components/schemas/price'
      - $ref: '#/components/schemas/promotion'
      - $ref: '#/components/schemas/return'
      - $ref: '#/components/schemas/shipment'
      - $ref: '#/components/schemas/shippingCategory'
      - $ref: '#/components/schemas/shippingMethod'
      - $ref: '#/components/schemas/shippingZone'
      - $ref: '#/components/schemas/skuOption'
      - $ref: '#/components/schemas/sku'
      - $ref: '#/components/schemas/stockItem'
      - $ref: '#/components/schemas/stockLocation'
      - $ref: '#/components/schemas/taxCalculator'
      - $ref: '#/components/schemas/taxCategory'
      properties:
        type:
          default: bundles
          description: The resource's type
          enum:
          - bundles
          - carrier_accounts
          - customer_groups
          - customers
          - delivery_lead_times
          - geocoders
          - gift_card_recipients
          - gift_cards
          - inventory_models
          - markets
          - merchants
          - billing_info_validation_rules
          - orders
          - packages
          - parcels
          - payment_methods
          - price_lists
          - prices
          - promotions
          - returns
          - shipments
          - shipping_categories
          - shipping_methods
          - shipping_zones
          - sku_options
          - skus
          - stock_items
          - stock_locations
          - tax_calculators
          - tax_categories
          example: bundles
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    attachment_data_relationships:
      properties:
        attachable:
          $ref: '#/components/schemas/attachment_data_relationships_attachable'
      type: object
    attachment_data:
      properties:
        type:
          default: attachments
          description: The resource's type
          example: attachments
          type: string
        attributes:
          $ref: '#/components/schemas/attachment_data_attributes'
        relationships:
          $ref: '#/components/schemas/attachment_data_relationships'
      required:
      - attributes
      - type
      type: object
    attachmentCreate_data_attributes:
      properties:
        name:
          description: The internal name of the attachment.
          example: DDT transport document
          type: string
        description:
          description: An internal description of the attachment.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        url:
          description: The attachment URL.
          example: https://s3.yourdomain.com/attachment.pdf
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    attachmentCreate_data_relationships:
      properties:
        attachable:
          $ref: '#/components/schemas/attachment_data_relationships_attachable'
      required:
      - attachable
      type: object
    attachmentCreate_data:
      properties:
        type:
          default: attachments
          description: The resource's type
          example: attachments
          type: string
        attributes:
          $ref: '#/components/schemas/attachmentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/attachmentCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    attachmentUpdate_data_attributes:
      properties:
        name:
          description: The internal name of the attachment.
          example: DDT transport document
          type: string
        description:
          description: An internal description of the attachment.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        url:
          description: The attachment URL.
          example: https://s3.yourdomain.com/attachment.pdf
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    attachmentUpdate_data:
      properties:
        type:
          default: attachments
          description: The resource's type
          example: attachments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/attachmentUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/attachment_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    authorization_data_attributes:
      properties:
        number:
          description: "The transaction number, auto generated"
          example: 42/T/001
          type: string
        currency_code:
          description: "The international 3-letter currency code as defined by the\
            \ ISO 4217 standard, inherited from the associated order."
          example: EUR
          type: string
        amount_cents:
          description: "The transaction amount, in cents."
          example: 1500
          type: integer
        amount_float:
          description: "The transaction amount, float."
          example: 15.0
          type: number
        formatted_amount:
          description: "The transaction amount, formatted."
          example: "€15,00"
          type: string
        succeeded:
          description: Indicates if the transaction is successful
          example: false
          type: boolean
        message:
          description: The message returned by the payment gateway
          example: Accepted
          type: string
        error_code:
          description: "The error code, if any, returned by the payment gateway"
          example: "00001"
          type: string
        error_detail:
          description: "The error detail, if any, returned by the payment gateway"
          example: Already settled
          type: string
        token:
          description: "The token identifying the transaction, returned by the payment\
            \ gateway"
          example: xxxx-yyyy-zzzz
          type: string
        gateway_transaction_id:
          description: "The ID identifying the transaction, returned by the payment\
            \ gateway"
          example: xxxx-yyyy-zzzz
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        cvv_code:
          description: The CVV code returned by the payment gateway
          example: "000"
          type: string
        cvv_message:
          description: The CVV message returned by the payment gateway
          example: validated
          type: string
        avs_code:
          description: The AVS code returned by the payment gateway
          example: "000"
          type: string
        avs_message:
          description: The AVS message returned by the payment gateway
          example: validated
          type: string
        fraud_review:
          description: "The fraud review message, if any, returned by the payment\
            \ gateway"
          example: passed
          type: string
        capture_amount_cents:
          description: "The amount to be captured, in cents."
          example: 500
          type: integer
        capture_amount_float:
          description: "The amount to be captured, float."
          example: 5.0
          type: number
        formatted_capture_amount:
          description: "The amount to be captured, formatted."
          example: "€5,00"
          type: string
        capture_balance_cents:
          description: "The balance to be captured, in cents."
          example: 1000
          type: integer
        capture_balance_float:
          description: "The balance to be captured, float."
          example: 10.0
          type: number
        formatted_capture_balance:
          description: "The balance to be captured, formatted."
          example: "€10,00"
          type: string
        void_balance_cents:
          description: "The balance to be voided, in cents."
          example: 1500
          type: integer
        void_balance_float:
          description: "The balance to be voided, float."
          example: 15.0
          type: number
        formatted_void_balance:
          description: "The balance to be voided, formatted."
          example: "€15,00"
          type: string
      type: object
    authorization_data_relationships_captures:
      properties:
        type:
          default: captures
          description: The resource's type
          example: captures
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    authorization_data_relationships_voids:
      properties:
        type:
          default: voids
          description: The resource's type
          example: voids
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    authorization_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        captures:
          $ref: '#/components/schemas/authorization_data_relationships_captures'
        voids:
          $ref: '#/components/schemas/authorization_data_relationships_voids'
      type: object
    authorization_data:
      properties:
        type:
          default: authorizations
          description: The resource's type
          example: authorizations
          type: string
        attributes:
          $ref: '#/components/schemas/authorization_data_attributes'
        relationships:
          $ref: '#/components/schemas/authorization_data_relationships'
      required:
      - attributes
      - type
      type: object
    authorizationUpdate_data_attributes:
      properties:
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        _capture:
          description: Send this attribute if you want to create a capture for this
            authorization.
          example: true
          type: boolean
        _capture_amount_cents:
          description: "The associated capture amount, in cents."
          example: 500
          type: integer
        _void:
          description: Send this attribute if you want to create a void for this authorization.
          example: true
          type: boolean
      type: object
    authorizationUpdate_data:
      properties:
        type:
          default: authorizations
          description: The resource's type
          example: authorizations
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/authorizationUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    avalaraAccount_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        username:
          description: The Avalara account username.
          example: user@mydomain.com
          type: string
        company_code:
          description: The Avalara company code.
          example: MYCOMPANY
          type: string
        commit_invoice:
          description: Indicates if the transaction will be recorded and visible on
            the Avalara website.
          example: "true"
          type: string
        ddp:
          description: Indicates if the seller is responsible for paying/remitting
            the customs duty & import tax to the customs authorities.
          example: "true"
          type: string
      type: object
    avalaraAccount_data_relationships_tax_categories:
      properties:
        type:
          default: tax_categories
          description: The resource's type
          example: tax_categories
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    avalaraAccount_data_relationships_markets:
      properties:
        type:
          default: markets
          description: The resource's type
          example: markets
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    avalaraAccount_data_relationships_attachments:
      properties:
        type:
          default: attachments
          description: The resource's type
          example: attachments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    avalaraAccount_data_relationships:
      properties:
        tax_categories:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_tax_categories'
        markets:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    avalaraAccount_data:
      properties:
        type:
          default: avalara_accounts
          description: The resource's type
          example: avalara_accounts
          type: string
        attributes:
          $ref: '#/components/schemas/avalaraAccount_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccount_data_relationships'
      required:
      - attributes
      - type
      type: object
    avalaraAccountCreate_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        username:
          description: The Avalara account username.
          example: user@mydomain.com
          type: string
        password:
          description: The Avalara account password.
          example: secret
          type: string
        company_code:
          description: The Avalara company code.
          example: MYCOMPANY
          type: string
        commit_invoice:
          description: Indicates if the transaction will be recorded and visible on
            the Avalara website.
          example: "true"
          type: string
        ddp:
          description: Indicates if the seller is responsible for paying/remitting
            the customs duty & import tax to the customs authorities.
          example: "true"
          type: string
      required:
      - company_code
      - name
      - password
      - username
      type: object
    avalaraAccountCreate_data_relationships:
      properties:
        tax_categories:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_tax_categories'
      type: object
    avalaraAccountCreate_data:
      properties:
        type:
          default: avalara_accounts
          description: The resource's type
          example: avalara_accounts
          type: string
        attributes:
          $ref: '#/components/schemas/avalaraAccountCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccountCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    avalaraAccountUpdate_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        username:
          description: The Avalara account username.
          example: user@mydomain.com
          type: string
        password:
          description: The Avalara account password.
          example: secret
          type: string
        company_code:
          description: The Avalara company code.
          example: MYCOMPANY
          type: string
        commit_invoice:
          description: Indicates if the transaction will be recorded and visible on
            the Avalara website.
          example: "true"
          type: string
        ddp:
          description: Indicates if the seller is responsible for paying/remitting
            the customs duty & import tax to the customs authorities.
          example: "true"
          type: string
      type: object
    avalaraAccountUpdate_data:
      properties:
        type:
          default: avalara_accounts
          description: The resource's type
          example: avalara_accounts
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/avalaraAccountUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccountCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    billingInfoValidationRule_data_attributes:
      properties:
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    billingInfoValidationRule_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
      type: object
    billingInfoValidationRule_data:
      properties:
        type:
          default: billing_info_validation_rules
          description: The resource's type
          example: billing_info_validation_rules
          type: string
        attributes:
          $ref: '#/components/schemas/billingInfoValidationRule_data_attributes'
        relationships:
          $ref: '#/components/schemas/billingInfoValidationRule_data_relationships'
      required:
      - attributes
      - type
      type: object
    billingInfoValidationRuleCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
      required:
      - market
      type: object
    billingInfoValidationRuleCreate_data:
      properties:
        type:
          default: billing_info_validation_rules
          description: The resource's type
          example: billing_info_validation_rules
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/billingInfoValidationRuleCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    billingInfoValidationRuleUpdate_data:
      properties:
        type:
          default: billing_info_validation_rules
          description: The resource's type
          example: billing_info_validation_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/billingInfoValidationRule_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    bingGeocoder_data_attributes:
      properties:
        name:
          description: The geocoder's internal name
          example: Default geocoder
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    bingGeocoder_data_relationships_addresses:
      properties:
        type:
          default: addresses
          description: The resource's type
          example: addresses
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    bingGeocoder_data_relationships:
      properties:
        addresses:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    bingGeocoder_data:
      properties:
        type:
          default: bing_geocoders
          description: The resource's type
          example: bing_geocoders
          type: string
        attributes:
          $ref: '#/components/schemas/bingGeocoder_data_attributes'
        relationships:
          $ref: '#/components/schemas/bingGeocoder_data_relationships'
      required:
      - attributes
      - type
      type: object
    bingGeocoderCreate_data_attributes:
      properties:
        name:
          description: The geocoder's internal name
          example: Default geocoder
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        key:
          description: The Bing Virtualearth key
          example: xxxx-yyyy-zzzz
          type: string
      required:
      - key
      - name
      type: object
    bingGeocoderCreate_data:
      properties:
        type:
          default: bing_geocoders
          description: The resource's type
          example: bing_geocoders
          type: string
        attributes:
          $ref: '#/components/schemas/bingGeocoderCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    bingGeocoderUpdate_data_attributes:
      properties:
        name:
          description: The geocoder's internal name
          example: Default geocoder
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        key:
          description: The Bing Virtualearth key
          example: xxxx-yyyy-zzzz
          type: string
      type: object
    bingGeocoderUpdate_data:
      properties:
        type:
          default: bing_geocoders
          description: The resource's type
          example: bing_geocoders
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/bingGeocoderUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    braintreeGateway_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        descriptor_name:
          description: "The dynamic descriptor name. Must be composed by business\
            \ name (3, 7 or 12 chars), an asterisk (*) and the product name (18, 14\
            \ or 9 chars), for a total length of 22 chars."
          example: company*productabc1234
          type: string
        descriptor_phone:
          description: "The dynamic descriptor phone number. Must be 10-14 characters\
            \ and can only contain numbers, dashes, parentheses and periods."
          example: "3125551212"
          type: string
        descriptor_url:
          description: The dynamic descriptor URL.
          example: company.com
          type: string
        webhook_endpoint_url:
          description: "The gateway webhook URL, generated automatically."
          example: https://core.commercelayer.co/webhook_callbacks/braintree_gateways/xxxxx
          type: string
      type: object
    braintreeGateway_data_relationships_braintree_payments:
      properties:
        type:
          default: braintree_payments
          description: The resource's type
          example: braintree_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    braintreeGateway_data_relationships:
      properties:
        payment_methods:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        braintree_payments:
          $ref: '#/components/schemas/braintreeGateway_data_relationships_braintree_payments'
      type: object
    braintreeGateway_data:
      properties:
        type:
          default: braintree_gateways
          description: The resource's type
          example: braintree_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/braintreeGateway_data_attributes'
        relationships:
          $ref: '#/components/schemas/braintreeGateway_data_relationships'
      required:
      - attributes
      - type
      type: object
    braintreeGatewayCreate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        merchant_account_id:
          description: The gateway merchant account ID.
          example: xxxx-yyyy-zzzz
          type: string
        merchant_id:
          description: The gateway merchant ID.
          example: xxxx-yyyy-zzzz
          type: string
        public_key:
          description: The gateway API public key.
          example: xxxx-yyyy-zzzz
          type: string
        private_key:
          description: The gateway API private key.
          example: xxxx-yyyy-zzzz
          type: string
        descriptor_name:
          description: "The dynamic descriptor name. Must be composed by business\
            \ name (3, 7 or 12 chars), an asterisk (*) and the product name (18, 14\
            \ or 9 chars), for a total length of 22 chars."
          example: company*productabc1234
          type: string
        descriptor_phone:
          description: "The dynamic descriptor phone number. Must be 10-14 characters\
            \ and can only contain numbers, dashes, parentheses and periods."
          example: "3125551212"
          type: string
        descriptor_url:
          description: The dynamic descriptor URL.
          example: company.com
          type: string
      required:
      - merchant_account_id
      - merchant_id
      - name
      - private_key
      - public_key
      type: object
    braintreeGatewayCreate_data_relationships:
      properties:
        braintree_payments:
          $ref: '#/components/schemas/braintreeGateway_data_relationships_braintree_payments'
      type: object
    braintreeGatewayCreate_data:
      properties:
        type:
          default: braintree_gateways
          description: The resource's type
          example: braintree_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/braintreeGatewayCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/braintreeGatewayCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    braintreeGatewayUpdate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        merchant_account_id:
          description: The gateway merchant account ID.
          example: xxxx-yyyy-zzzz
          type: string
        merchant_id:
          description: The gateway merchant ID.
          example: xxxx-yyyy-zzzz
          type: string
        public_key:
          description: The gateway API public key.
          example: xxxx-yyyy-zzzz
          type: string
        private_key:
          description: The gateway API private key.
          example: xxxx-yyyy-zzzz
          type: string
        descriptor_name:
          description: "The dynamic descriptor name. Must be composed by business\
            \ name (3, 7 or 12 chars), an asterisk (*) and the product name (18, 14\
            \ or 9 chars), for a total length of 22 chars."
          example: company*productabc1234
          type: string
        descriptor_phone:
          description: "The dynamic descriptor phone number. Must be 10-14 characters\
            \ and can only contain numbers, dashes, parentheses and periods."
          example: "3125551212"
          type: string
        descriptor_url:
          description: The dynamic descriptor URL.
          example: company.com
          type: string
      type: object
    braintreeGatewayUpdate_data:
      properties:
        type:
          default: braintree_gateways
          description: The resource's type
          example: braintree_gateways
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/braintreeGatewayUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/braintreeGatewayCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    braintreePayment_data_attributes:
      properties:
        client_token:
          description: The Braintree payment client token. Required by the Braintree
            JS SDK.
          example: xxxx.yyyy.zzzz
          type: string
        payment_method_nonce:
          description: The Braintree payment method nonce. Sent by the Braintree JS
            SDK.
          example: xxxx.yyyy.zzzz
          type: string
        payment_id:
          description: The Braintree payment ID used by local payment and sent by
            the Braintree JS SDK.
          example: xxxx.yyyy.zzzz
          type: string
        local:
          description: "Indicates if the payment is local, in such case Braintree\
            \ will trigger a webhook call passing the \"payment_id\" and \"payment_method_nonce\"\
            \ in order to complete the transaction."
          example: true
          type: boolean
        options:
          description: "Braintree payment options: 'customer_id' and 'payment_method_token'"
          example:
            customer_id: "1234567890"
          type: object
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    braintreePayment_data:
      properties:
        type:
          default: braintree_payments
          description: The resource's type
          example: braintree_payments
          type: string
        attributes:
          $ref: '#/components/schemas/braintreePayment_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPayment_data_relationships'
      required:
      - attributes
      - type
      type: object
    braintreePaymentCreate_data_attributes:
      properties:
        payment_id:
          description: The Braintree payment ID used by local payment and sent by
            the Braintree JS SDK.
          example: xxxx.yyyy.zzzz
          type: string
        local:
          description: "Indicates if the payment is local, in such case Braintree\
            \ will trigger a webhook call passing the \"payment_id\" and \"payment_method_nonce\"\
            \ in order to complete the transaction."
          example: true
          type: boolean
        options:
          description: "Braintree payment options: 'customer_id' and 'payment_method_token'"
          example:
            customer_id: "1234567890"
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    braintreePaymentCreate_data:
      properties:
        type:
          default: braintree_payments
          description: The resource's type
          example: braintree_payments
          type: string
        attributes:
          $ref: '#/components/schemas/braintreePaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    braintreePaymentUpdate_data_attributes:
      properties:
        payment_method_nonce:
          description: The Braintree payment method nonce. Sent by the Braintree JS
            SDK.
          example: xxxx.yyyy.zzzz
          type: string
        payment_id:
          description: The Braintree payment ID used by local payment and sent by
            the Braintree JS SDK.
          example: xxxx.yyyy.zzzz
          type: string
        local:
          description: "Indicates if the payment is local, in such case Braintree\
            \ will trigger a webhook call passing the \"payment_id\" and \"payment_method_nonce\"\
            \ in order to complete the transaction."
          example: true
          type: boolean
        options:
          description: "Braintree payment options: 'customer_id' and 'payment_method_token'"
          example:
            customer_id: "1234567890"
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    braintreePaymentUpdate_data:
      properties:
        type:
          default: braintree_payments
          description: The resource's type
          example: braintree_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/braintreePaymentUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    bundle_data_attributes:
      properties:
        code:
          description: "The bundle code, that uniquely identifies the bundle within\
            \ the market."
          example: BUNDMM000000FFFFFFXLXX
          type: string
        name:
          description: The internal name of the bundle.
          example: "Black Men T-shirt (XL) with Black Cap and Socks, all with White\
            \ Logo"
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        description:
          description: An internal description of the bundle.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        image_url:
          description: The URL of an image that represents the bundle.
          example: https://img.yourdomain.com/bundles/xYZkjABcde.png
          type: string
        do_not_ship:
          description: Indicates if the bundle doesn't generate shipments.
          example: false
          type: boolean
        do_not_track:
          description: Indicates if the bundle doesn't track the stock inventory.
          example: false
          type: boolean
        price_amount_cents:
          description: "The bundle price amount for the associated market, in cents."
          example: 10000
          type: integer
        price_amount_float:
          description: "The bundle price amount for the associated market, float."
          example: 100.0
          type: number
        formatted_price_amount:
          description: "The bundle price amount for the associated market, formatted."
          example: "€100,00"
          type: string
        compare_at_amount_cents:
          description: "The compared price amount, in cents. Useful to display a percentage\
            \ discount."
          example: 13000
          type: integer
        compare_at_amount_float:
          description: "The compared price amount, float."
          example: 130.0
          type: number
        formatted_compare_at_amount:
          description: "The compared price amount, formatted."
          example: "€130,00"
          type: string
        skus_count:
          description: The total number of SKUs in the bundle.
          example: 2
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    bundle_data_relationships_sku_list:
      properties:
        type:
          default: sku_lists
          description: The resource's type
          example: sku_lists
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    bundle_data_relationships_skus:
      properties:
        type:
          default: skus
          description: The resource's type
          example: skus
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    bundle_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
        skus:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    bundle_data:
      properties:
        type:
          default: bundles
          description: The resource's type
          example: bundles
          type: string
        attributes:
          $ref: '#/components/schemas/bundle_data_attributes'
        relationships:
          $ref: '#/components/schemas/bundle_data_relationships'
      required:
      - attributes
      - type
      type: object
    bundleCreate_data_attributes:
      properties:
        code:
          description: "The bundle code, that uniquely identifies the bundle within\
            \ the market."
          example: BUNDMM000000FFFFFFXLXX
          type: string
        name:
          description: The internal name of the bundle.
          example: "Black Men T-shirt (XL) with Black Cap and Socks, all with White\
            \ Logo"
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        description:
          description: An internal description of the bundle.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        image_url:
          description: The URL of an image that represents the bundle.
          example: https://img.yourdomain.com/bundles/xYZkjABcde.png
          type: string
        do_not_ship:
          description: Indicates if the bundle doesn't generate shipments.
          example: false
          type: boolean
        do_not_track:
          description: Indicates if the bundle doesn't track the stock inventory.
          example: false
          type: boolean
        price_amount_cents:
          description: "The bundle price amount for the associated market, in cents."
          example: 10000
          type: integer
        compare_at_amount_cents:
          description: "The compared price amount, in cents. Useful to display a percentage\
            \ discount."
          example: 13000
          type: integer
        _compute_price_amount:
          description: Send this attribute if you want to compute the price_amount_cents
            as the sum of the prices of the bundle SKUs for the market.
          example: true
          type: boolean
        _compute_compare_at_amount:
          description: Send this attribute if you want to compute the compare_at_amount_cents
            as the sum of the prices of the bundle SKUs for the market.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - code
      - compare_at_amount_cents
      - name
      - price_amount_cents
      type: object
    bundleCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
      required:
      - sku_list
      type: object
    bundleCreate_data:
      properties:
        type:
          default: bundles
          description: The resource's type
          example: bundles
          type: string
        attributes:
          $ref: '#/components/schemas/bundleCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/bundleCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    bundleUpdate_data_attributes:
      properties:
        code:
          description: "The bundle code, that uniquely identifies the bundle within\
            \ the market."
          example: BUNDMM000000FFFFFFXLXX
          type: string
        name:
          description: The internal name of the bundle.
          example: "Black Men T-shirt (XL) with Black Cap and Socks, all with White\
            \ Logo"
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        description:
          description: An internal description of the bundle.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        image_url:
          description: The URL of an image that represents the bundle.
          example: https://img.yourdomain.com/bundles/xYZkjABcde.png
          type: string
        do_not_ship:
          description: Indicates if the bundle doesn't generate shipments.
          example: false
          type: boolean
        do_not_track:
          description: Indicates if the bundle doesn't track the stock inventory.
          example: false
          type: boolean
        price_amount_cents:
          description: "The bundle price amount for the associated market, in cents."
          example: 10000
          type: integer
        compare_at_amount_cents:
          description: "The compared price amount, in cents. Useful to display a percentage\
            \ discount."
          example: 13000
          type: integer
        _compute_price_amount:
          description: Send this attribute if you want to compute the price_amount_cents
            as the sum of the prices of the bundle SKUs for the market.
          example: true
          type: boolean
        _compute_compare_at_amount:
          description: Send this attribute if you want to compute the compare_at_amount_cents
            as the sum of the prices of the bundle SKUs for the market.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    bundleUpdate_data:
      properties:
        type:
          default: bundles
          description: The resource's type
          example: bundles
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/bundleUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    capture_data_attributes:
      properties:
        number:
          description: "The transaction number, auto generated"
          example: 42/T/001
          type: string
        currency_code:
          description: "The international 3-letter currency code as defined by the\
            \ ISO 4217 standard, inherited from the associated order."
          example: EUR
          type: string
        amount_cents:
          description: "The transaction amount, in cents."
          example: 1500
          type: integer
        amount_float:
          description: "The transaction amount, float."
          example: 15.0
          type: number
        formatted_amount:
          description: "The transaction amount, formatted."
          example: "€15,00"
          type: string
        succeeded:
          description: Indicates if the transaction is successful
          example: false
          type: boolean
        message:
          description: The message returned by the payment gateway
          example: Accepted
          type: string
        error_code:
          description: "The error code, if any, returned by the payment gateway"
          example: "00001"
          type: string
        error_detail:
          description: "The error detail, if any, returned by the payment gateway"
          example: Already settled
          type: string
        token:
          description: "The token identifying the transaction, returned by the payment\
            \ gateway"
          example: xxxx-yyyy-zzzz
          type: string
        gateway_transaction_id:
          description: "The ID identifying the transaction, returned by the payment\
            \ gateway"
          example: xxxx-yyyy-zzzz
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        refund_amount_cents:
          description: "The amount to be refunded, in cents."
          example: 500
          type: integer
        refund_amount_float:
          description: "The amount to be refunded, float."
          example: 5.0
          type: number
        formatted_refund_amount:
          description: "The amount to be refunded, formatted."
          example: "€5,00"
          type: string
        refund_balance_cents:
          description: "The balance to be refunded, in cents."
          example: 1000
          type: integer
        refund_balance_float:
          description: "The balance to be refunded, float."
          example: 10.0
          type: number
        formatted_refund_balance:
          description: "The balance to be refunded, formatted."
          example: "€10,00"
          type: string
      type: object
    capture_data_relationships_reference_authorization:
      properties:
        type:
          default: authorizations
          description: The resource's type
          example: authorizations
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    capture_data_relationships_refunds:
      properties:
        type:
          default: refunds
          description: The resource's type
          example: refunds
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    capture_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        reference_authorization:
          $ref: '#/components/schemas/capture_data_relationships_reference_authorization'
        refunds:
          $ref: '#/components/schemas/capture_data_relationships_refunds'
      type: object
    capture_data:
      properties:
        type:
          default: captures
          description: The resource's type
          example: captures
          type: string
        attributes:
          $ref: '#/components/schemas/capture_data_attributes'
        relationships:
          $ref: '#/components/schemas/capture_data_relationships'
      required:
      - attributes
      - type
      type: object
    captureUpdate_data_attributes:
      properties:
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        _refund:
          description: Send this attribute if you want to create a refund for this
            capture.
          example: true
          type: boolean
        _refund_amount_cents:
          description: "The associated refund amount, in cents."
          example: 500
          type: integer
      type: object
    captureUpdate_data:
      properties:
        type:
          default: captures
          description: The resource's type
          example: captures
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/captureUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    carrierAccount_data_attributes:
      properties:
        name:
          description: The carrier account internal name.
          example: UPS
          type: string
        easypost_type:
          description: The Easypost service carrier type.
          example: UPS
          type: string
        easypost_id:
          description: The Easypost internal reference ID.
          example: xxxx-yyyy-zzzz
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    carrierAccount_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    carrierAccount_data:
      properties:
        type:
          default: carrier_accounts
          description: The resource's type
          example: carrier_accounts
          type: string
        attributes:
          $ref: '#/components/schemas/carrierAccount_data_attributes'
        relationships:
          $ref: '#/components/schemas/carrierAccount_data_relationships'
      required:
      - attributes
      - type
      type: object
    checkoutComGateway_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        webhook_endpoint_id:
          description: "The gateway webhook endpoint ID, generated automatically."
          example: xxxx-yyyy-zzzz
          type: string
        webhook_endpoint_secret:
          description: "The gateway webhook endpoint secret, generated automatically."
          example: xxxx-yyyy-zzzz
          type: string
        webhook_endpoint_url:
          description: "The gateway webhook URL, generated automatically."
          example: https://core.commercelayer.co/webhook_callbacks/checkout_com_gateways/xxxxx
          type: string
      type: object
    checkoutComGateway_data_relationships_checkout_com_payments:
      properties:
        type:
          default: checkout_com_payments
          description: The resource's type
          example: checkout_com_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    checkoutComGateway_data_relationships:
      properties:
        payment_methods:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        checkout_com_payments:
          $ref: '#/components/schemas/checkoutComGateway_data_relationships_checkout_com_payments'
      type: object
    checkoutComGateway_data:
      properties:
        type:
          default: checkout_com_gateways
          description: The resource's type
          example: checkout_com_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/checkoutComGateway_data_attributes'
        relationships:
          $ref: '#/components/schemas/checkoutComGateway_data_relationships'
      required:
      - attributes
      - type
      type: object
    checkoutComGatewayCreate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        secret_key:
          description: The gateway secret key.
          example: sk_test_xxxx-yyyy-zzzz
          type: string
        public_key:
          description: The gateway public key.
          example: pk_test_xxxx-yyyy-zzzz
          type: string
      required:
      - name
      - public_key
      - secret_key
      type: object
    checkoutComGatewayCreate_data_relationships:
      properties:
        checkout_com_payments:
          $ref: '#/components/schemas/checkoutComGateway_data_relationships_checkout_com_payments'
      type: object
    checkoutComGatewayCreate_data:
      properties:
        type:
          default: checkout_com_gateways
          description: The resource's type
          example: checkout_com_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/checkoutComGatewayCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/checkoutComGatewayCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    checkoutComGatewayUpdate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        secret_key:
          description: The gateway secret key.
          example: sk_test_xxxx-yyyy-zzzz
          type: string
        public_key:
          description: The gateway public key.
          example: pk_test_xxxx-yyyy-zzzz
          type: string
      type: object
    checkoutComGatewayUpdate_data:
      properties:
        type:
          default: checkout_com_gateways
          description: The resource's type
          example: checkout_com_gateways
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/checkoutComGatewayUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/checkoutComGatewayCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    checkoutComPayment_data_attributes:
      properties:
        public_key:
          description: The Checkout.com publishable API key.
          example: pk_test_xxxx-yyyy-zzzz
          type: string
        payment_type:
          description: The payment source type.
          example: token
          type: string
        token:
          description: The Checkout.com card or digital wallet token.
          example: tok_4gzeau5o2uqubbk6fufs3m7p54
          type: string
        session_id:
          description: A payment session ID used to obtain the details.
          example: sid_y3oqhf46pyzuxjbcn2giaqnb44
          type: string
        success_url:
          description: The URL to redirect your customer upon 3DS succeeded authentication.
          example: http://commercelayer.dev/checkout_com/success
          type: string
        failure_url:
          description: The URL to redirect your customer upon 3DS failed authentication.
          example: http://commercelayer.dev/checkout_com/failure
          type: string
        source_id:
          description: The payment source identifier that can be used for subsequent
            payments.
          example: src_nwd3m4in3hkuddfpjsaevunhdy
          type: string
        customer_token:
          description: The customer's unique identifier. This can be passed as a source
            when making a payment.
          example: cus_udst2tfldj6upmye2reztkmm4i
          type: string
        redirect_uri:
          description: The URI that the customer should be redirected to in order
            to complete the payment.
          example: https://api.checkout.com/3ds/pay_mbabizu24mvu3mela5njyhpit4
          type: string
        payment_response:
          description: "The Checkout.com payment response, used to fetch internal\
            \ data."
          example:
            foo: bar
          type: object
        mismatched_amounts:
          description: Indicates if the order current amount differs form the one
            of the associated authorization.
          example: false
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    checkoutComPayment_data:
      properties:
        type:
          default: checkout_com_payments
          description: The resource's type
          example: checkout_com_payments
          type: string
        attributes:
          $ref: '#/components/schemas/checkoutComPayment_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPayment_data_relationships'
      required:
      - attributes
      - type
      type: object
    checkoutComPaymentCreate_data_attributes:
      properties:
        payment_type:
          description: The payment source type.
          example: token
          type: string
        token:
          description: The Checkout.com card or digital wallet token.
          example: tok_4gzeau5o2uqubbk6fufs3m7p54
          type: string
        session_id:
          description: A payment session ID used to obtain the details.
          example: sid_y3oqhf46pyzuxjbcn2giaqnb44
          type: string
        success_url:
          description: The URL to redirect your customer upon 3DS succeeded authentication.
          example: http://commercelayer.dev/checkout_com/success
          type: string
        failure_url:
          description: The URL to redirect your customer upon 3DS failed authentication.
          example: http://commercelayer.dev/checkout_com/failure
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - payment_type
      - token
      type: object
    checkoutComPaymentCreate_data:
      properties:
        type:
          default: checkout_com_payments
          description: The resource's type
          example: checkout_com_payments
          type: string
        attributes:
          $ref: '#/components/schemas/checkoutComPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    checkoutComPaymentUpdate_data_attributes:
      properties:
        payment_type:
          description: The payment source type.
          example: token
          type: string
        token:
          description: The Checkout.com card or digital wallet token.
          example: tok_4gzeau5o2uqubbk6fufs3m7p54
          type: string
        session_id:
          description: A payment session ID used to obtain the details.
          example: sid_y3oqhf46pyzuxjbcn2giaqnb44
          type: string
        success_url:
          description: The URL to redirect your customer upon 3DS succeeded authentication.
          example: http://commercelayer.dev/checkout_com/success
          type: string
        failure_url:
          description: The URL to redirect your customer upon 3DS failed authentication.
          example: http://commercelayer.dev/checkout_com/failure
          type: string
        _details:
          description: Send this attribute if you want to send additional details
            the payment request (i.e. upon 3DS check).
          example: true
          type: boolean
        _refresh:
          description: "Send this attribute if you want to refresh all the pending\
            \ transactions, can be used as webhooks fallback logic."
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    checkoutComPaymentUpdate_data:
      properties:
        type:
          default: checkout_com_payments
          description: The resource's type
          example: checkout_com_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/checkoutComPaymentUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    couponCodesPromotionRule_data_relationships_promotion:
      oneOf:
      - $ref: '#/components/schemas/percentageDiscountPromotion'
      - $ref: '#/components/schemas/freeShippingPromotion'
      - $ref: '#/components/schemas/fixedAmountPromotion'
      - $ref: '#/components/schemas/freeGiftPromotion'
      - $ref: '#/components/schemas/fixedPricePromotion'
      - $ref: '#/components/schemas/externalPromotion'
      properties:
        type:
          default: percentage_discount_promotions
          description: The resource's type
          enum:
          - percentage_discount_promotions
          - free_shipping_promotions
          - fixed_amount_promotions
          - free_gift_promotions
          - fixed_price_promotions
          - external_promotions
          example: percentage_discount_promotions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    couponCodesPromotionRule_data_relationships_coupons:
      properties:
        type:
          default: coupons
          description: The resource's type
          example: coupons
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    couponCodesPromotionRule_data_relationships:
      properties:
        promotion:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships_promotion'
        coupons:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships_coupons'
      type: object
    couponCodesPromotionRule_data:
      properties:
        type:
          default: coupon_codes_promotion_rules
          description: The resource's type
          example: coupon_codes_promotion_rules
          type: string
        attributes:
          $ref: '#/components/schemas/billingInfoValidationRule_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships'
      required:
      - attributes
      - type
      type: object
    couponCodesPromotionRuleCreate_data_relationships:
      properties:
        promotion:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships_promotion'
        coupons:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships_coupons'
      required:
      - promotion
      type: object
    couponCodesPromotionRuleCreate_data:
      properties:
        type:
          default: coupon_codes_promotion_rules
          description: The resource's type
          example: coupon_codes_promotion_rules
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponCodesPromotionRuleCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    couponCodesPromotionRuleUpdate_data:
      properties:
        type:
          default: coupon_codes_promotion_rules
          description: The resource's type
          example: coupon_codes_promotion_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    couponRecipient_data_attributes:
      properties:
        email:
          description: The recipient email address
          example: john@example.com
          type: string
        first_name:
          description: The recipient first name
          example: John
          type: string
        last_name:
          description: The recipient last name
          example: Smith
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    couponRecipient_data_relationships_customer:
      properties:
        type:
          default: customers
          description: The resource's type
          example: customers
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    couponRecipient_data_relationships:
      properties:
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    couponRecipient_data:
      properties:
        type:
          default: coupon_recipients
          description: The resource's type
          example: coupon_recipients
          type: string
        attributes:
          $ref: '#/components/schemas/couponRecipient_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponRecipient_data_relationships'
      required:
      - attributes
      - type
      type: object
    couponRecipientCreate_data_attributes:
      properties:
        email:
          description: The recipient email address
          example: john@example.com
          type: string
        first_name:
          description: The recipient first name
          example: John
          type: string
        last_name:
          description: The recipient last name
          example: Smith
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - email
      type: object
    couponRecipientCreate_data_relationships:
      properties:
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
      type: object
    couponRecipientCreate_data:
      properties:
        type:
          default: coupon_recipients
          description: The resource's type
          example: coupon_recipients
          type: string
        attributes:
          $ref: '#/components/schemas/couponRecipientCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponRecipientCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    couponRecipientUpdate_data_attributes:
      properties:
        email:
          description: The recipient email address
          example: john@example.com
          type: string
        first_name:
          description: The recipient first name
          example: John
          type: string
        last_name:
          description: The recipient last name
          example: Smith
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    couponRecipientUpdate_data:
      properties:
        type:
          default: coupon_recipients
          description: The resource's type
          example: coupon_recipients
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/couponRecipientUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponRecipientCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    coupon_data_attributes:
      properties:
        code:
          description: "The coupon code, that uniquely identifies the coupon within\
            \ the promotion rule."
          example: 04371af2-70b3-48d7-8f4e-316b374224c3
          type: string
        customer_single_use:
          description: Indicates if the coupon can be used just once per customer.
          example: false
          type: boolean
        usage_limit:
          description: The total number of times this coupon can be used.
          example: 50
          type: integer
        usage_count:
          description: The number of times this coupon has been used.
          example: 20
          type: integer
        recipient_email:
          description: "The email address of the associated recipient. When creating\
            \ or updating a coupon, this is a shortcut to find or create the associated\
            \ recipient by email."
          example: john@example.com
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    coupon_data_relationships_promotion_rule:
      properties:
        type:
          default: coupon_codes_promotion_rules
          description: The resource's type
          example: coupon_codes_promotion_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    coupon_data_relationships:
      properties:
        promotion_rule:
          $ref: '#/components/schemas/coupon_data_relationships_promotion_rule'
      type: object
    coupon_data:
      properties:
        type:
          default: coupons
          description: The resource's type
          example: coupons
          type: string
        attributes:
          $ref: '#/components/schemas/coupon_data_attributes'
        relationships:
          $ref: '#/components/schemas/coupon_data_relationships'
      required:
      - attributes
      - type
      type: object
    couponCreate_data_attributes:
      properties:
        code:
          description: "The coupon code, that uniquely identifies the coupon within\
            \ the promotion rule."
          example: 04371af2-70b3-48d7-8f4e-316b374224c3
          type: string
        customer_single_use:
          description: Indicates if the coupon can be used just once per customer.
          example: false
          type: boolean
        usage_limit:
          description: The total number of times this coupon can be used.
          example: 50
          type: integer
        recipient_email:
          description: "The email address of the associated recipient. When creating\
            \ or updating a coupon, this is a shortcut to find or create the associated\
            \ recipient by email."
          example: john@example.com
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - code
      - usage_limit
      type: object
    couponCreate_data_relationships:
      properties:
        promotion_rule:
          $ref: '#/components/schemas/coupon_data_relationships_promotion_rule'
      required:
      - promotion_rule
      type: object
    couponCreate_data:
      properties:
        type:
          default: coupons
          description: The resource's type
          example: coupons
          type: string
        attributes:
          $ref: '#/components/schemas/couponCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    couponUpdate_data_attributes:
      properties:
        code:
          description: "The coupon code, that uniquely identifies the coupon within\
            \ the promotion rule."
          example: 04371af2-70b3-48d7-8f4e-316b374224c3
          type: string
        customer_single_use:
          description: Indicates if the coupon can be used just once per customer.
          example: false
          type: boolean
        usage_limit:
          description: The total number of times this coupon can be used.
          example: 50
          type: integer
        recipient_email:
          description: "The email address of the associated recipient. When creating\
            \ or updating a coupon, this is a shortcut to find or create the associated\
            \ recipient by email."
          example: john@example.com
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    couponUpdate_data:
      properties:
        type:
          default: coupons
          description: The resource's type
          example: coupons
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/couponUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/coupon_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    customerAddress_data_attributes:
      properties:
        name:
          description: Returns the associated address' name
          example: "John Smith, 2883 Geraldine Lane Apt.23, 10013 New York NY (US)\
            \ (212) 646-338-1228"
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    customerAddress_data_relationships:
      properties:
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
      type: object
    customerAddress_data:
      properties:
        type:
          default: customer_addresses
          description: The resource's type
          example: customer_addresses
          type: string
        attributes:
          $ref: '#/components/schemas/customerAddress_data_attributes'
        relationships:
          $ref: '#/components/schemas/customerAddress_data_relationships'
      required:
      - attributes
      - type
      type: object
    customerAddressCreate_data_relationships:
      properties:
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
      required:
      - address
      - customer
      type: object
    customerAddressCreate_data:
      properties:
        type:
          default: customer_addresses
          description: The resource's type
          example: customer_addresses
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/customerAddressCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    customerAddressUpdate_data:
      properties:
        type:
          default: customer_addresses
          description: The resource's type
          example: customer_addresses
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/customerAddress_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    customerGroup_data_attributes:
      properties:
        name:
          description: The customer group's internal name
          example: VIP
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    customerGroup_data_relationships:
      properties:
        customers:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        markets:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    customerGroup_data:
      properties:
        type:
          default: customer_groups
          description: The resource's type
          example: customer_groups
          type: string
        attributes:
          $ref: '#/components/schemas/customerGroup_data_attributes'
        relationships:
          $ref: '#/components/schemas/customerGroup_data_relationships'
      required:
      - attributes
      - type
      type: object
    customerGroupCreate_data_attributes:
      properties:
        name:
          description: The customer group's internal name
          example: VIP
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    customerGroupCreate_data:
      properties:
        type:
          default: customer_groups
          description: The resource's type
          example: customer_groups
          type: string
        attributes:
          $ref: '#/components/schemas/customerGroupCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    customerGroupUpdate_data_attributes:
      properties:
        name:
          description: The customer group's internal name
          example: VIP
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    customerGroupUpdate_data:
      properties:
        type:
          default: customer_groups
          description: The resource's type
          example: customer_groups
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/customerGroupUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    customerPasswordReset_data_attributes:
      properties:
        customer_email:
          description: The email of the customer that requires a password reset
          example: john@example.com
          type: string
        reset_password_token:
          description: Automatically generated on create. Send its value as the '_reset_password_token'
            argument when updating the customer password.
          example: xhFfkmfybsLxzaAP6xcs
          type: string
        reset_password_at:
          description: Time at which the password was reset.
          example: 2018-01-01T12:00:00.000Z
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    customerPasswordReset_data:
      properties:
        type:
          default: customer_password_resets
          description: The resource's type
          example: customer_password_resets
          type: string
        attributes:
          $ref: '#/components/schemas/customerPasswordReset_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponRecipientCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    customerPasswordResetCreate_data_attributes:
      properties:
        customer_email:
          description: The email of the customer that requires a password reset
          example: john@example.com
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - customer_email
      type: object
    customerPasswordResetCreate_data:
      properties:
        type:
          default: customer_password_resets
          description: The resource's type
          example: customer_password_resets
          type: string
        attributes:
          $ref: '#/components/schemas/customerPasswordResetCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    customerPasswordResetUpdate_data_attributes:
      properties:
        customer_password:
          description: The customer new password. This will be accepted only if a
            valid '_reset_password_token' is sent with the request.
          example: secret
          type: string
        _reset_password_token:
          description: Send the 'reset_password_token' that you got on create when
            updating the customer password.
          example: xhFfkmfybsLxzaAP6xcs
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    customerPasswordResetUpdate_data:
      properties:
        type:
          default: customer_password_resets
          description: The resource's type
          example: customer_password_resets
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/customerPasswordResetUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    customerPaymentSource_data_attributes:
      properties:
        name:
          description: Returns the associated payment source's name
          example: XXXX-XXXX-XXXX-1111
          type: string
        customer_token:
          description: Returns the customer gateway token stored in the gateway
          example: cus_xxxyyyzzz
          type: string
        payment_source_token:
          description: Returns the payment source token stored in the gateway
          example: pm_xxxyyyzzz
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    customerPaymentSource_data_relationships_payment_source:
      oneOf:
      - $ref: '#/components/schemas/adyenPayment'
      - $ref: '#/components/schemas/braintreePayment'
      - $ref: '#/components/schemas/checkoutComPayment'
      - $ref: '#/components/schemas/externalPayment'
      - $ref: '#/components/schemas/klarnaPayment'
      - $ref: '#/components/schemas/paypalPayment'
      - $ref: '#/components/schemas/stripePayment'
      - $ref: '#/components/schemas/wireTransfer'
      properties:
        type:
          default: adyen_payments
          description: The resource's type
          enum:
          - adyen_payments
          - braintree_payments
          - checkout_com_payments
          - external_payments
          - klarna_payments
          - paypal_payments
          - stripe_payments
          - wire_transfers
          example: adyen_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    customerPaymentSource_data_relationships:
      properties:
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        payment_source:
          $ref: '#/components/schemas/customerPaymentSource_data_relationships_payment_source'
      type: object
    customerPaymentSource_data:
      properties:
        type:
          default: customer_payment_sources
          description: The resource's type
          example: customer_payment_sources
          type: string
        attributes:
          $ref: '#/components/schemas/customerPaymentSource_data_attributes'
        relationships:
          $ref: '#/components/schemas/customerPaymentSource_data_relationships'
      required:
      - attributes
      - type
      type: object
    customerPaymentSourceCreate_data_relationships:
      properties:
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        payment_source:
          $ref: '#/components/schemas/customerPaymentSource_data_relationships_payment_source'
      required:
      - customer
      - payment_source
      type: object
    customerPaymentSourceCreate_data:
      properties:
        type:
          default: customer_payment_sources
          description: The resource's type
          example: customer_payment_sources
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/customerPaymentSourceCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    customerPaymentSourceUpdate_data:
      properties:
        type:
          default: customer_payment_sources
          description: The resource's type
          example: customer_payment_sources
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/customerPaymentSource_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    customerSubscription_data_attributes:
      properties:
        customer_email:
          description: The email of the customer that owns the subscription
          example: john@example.com
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    customerSubscription_data:
      properties:
        type:
          default: customer_subscriptions
          description: The resource's type
          example: customer_subscriptions
          type: string
        attributes:
          $ref: '#/components/schemas/customerSubscription_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponRecipientCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    customerSubscriptionCreate_data_attributes:
      properties:
        customer_email:
          description: The email of the customer that owns the subscription
          example: john@example.com
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - customer_email
      type: object
    customerSubscriptionCreate_data:
      properties:
        type:
          default: customer_subscriptions
          description: The resource's type
          example: customer_subscriptions
          type: string
        attributes:
          $ref: '#/components/schemas/customerSubscriptionCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    customerSubscriptionUpdate_data:
      properties:
        type:
          default: customer_subscriptions
          description: The resource's type
          example: customer_subscriptions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    customer_data_attributes:
      properties:
        email:
          description: The customer's email address
          example: john@example.com
          type: string
        status:
          description: "The customer's status, one of 'prospect', 'acquired', or 'repeat'."
          example: prospect
          type: string
        has_password:
          description: Indicates if the customer has a password.
          example: false
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    customer_data_relationships_customer_group:
      properties:
        type:
          default: customer_groups
          description: The resource's type
          example: customer_groups
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    customer_data_relationships_customer_addresses:
      properties:
        type:
          default: customer_addresses
          description: The resource's type
          example: customer_addresses
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    customer_data_relationships_customer_payment_sources:
      properties:
        type:
          default: customer_payment_sources
          description: The resource's type
          example: customer_payment_sources
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    customer_data_relationships_customer_subscriptions:
      properties:
        type:
          default: customer_subscriptions
          description: The resource's type
          example: customer_subscriptions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    customer_data_relationships_order_subscriptions:
      properties:
        type:
          default: order_subscriptions
          description: The resource's type
          example: order_subscriptions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    customer_data_relationships_returns:
      properties:
        type:
          default: returns
          description: The resource's type
          example: returns
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    customer_data_relationships:
      properties:
        customer_group:
          $ref: '#/components/schemas/customer_data_relationships_customer_group'
        customer_addresses:
          $ref: '#/components/schemas/customer_data_relationships_customer_addresses'
        customer_payment_sources:
          $ref: '#/components/schemas/customer_data_relationships_customer_payment_sources'
        customer_subscriptions:
          $ref: '#/components/schemas/customer_data_relationships_customer_subscriptions'
        orders:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        order_subscriptions:
          $ref: '#/components/schemas/customer_data_relationships_order_subscriptions'
        returns:
          $ref: '#/components/schemas/customer_data_relationships_returns'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    customer_data:
      properties:
        type:
          default: customers
          description: The resource's type
          example: customers
          type: string
        attributes:
          $ref: '#/components/schemas/customer_data_attributes'
        relationships:
          $ref: '#/components/schemas/customer_data_relationships'
      required:
      - attributes
      - type
      type: object
    customerCreate_data_attributes:
      properties:
        email:
          description: The customer's email address
          example: john@example.com
          type: string
        password:
          description: The customer's password. Initiate a customer password reset
            flow if you need to change it.
          example: secret
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - email
      type: object
    customerCreate_data_relationships:
      properties:
        customer_group:
          $ref: '#/components/schemas/customer_data_relationships_customer_group'
      type: object
    customerCreate_data:
      properties:
        type:
          default: customers
          description: The resource's type
          example: customers
          type: string
        attributes:
          $ref: '#/components/schemas/customerCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/customerCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    customerUpdate_data_attributes:
      properties:
        email:
          description: The customer's email address
          example: john@example.com
          type: string
        password:
          description: The customer's password. Initiate a customer password reset
            flow if you need to change it.
          example: secret
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    customerUpdate_data:
      properties:
        type:
          default: customers
          description: The resource's type
          example: customers
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/customerUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/customerCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    deliveryLeadTime_data_attributes:
      properties:
        min_hours:
          description: The delivery lead minimum time (in hours) when shipping from
            the associated stock location with the associated shipping method.
          example: 48
          type: integer
        max_hours:
          description: The delivery lead maximun time (in hours) when shipping from
            the associated stock location with the associated shipping method.
          example: 72
          type: integer
        min_days:
          description: "The delivery lead minimum time, in days (rounded)"
          example: 2
          type: integer
        max_days:
          description: "The delivery lead maximun time, in days (rounded)"
          example: 3
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    deliveryLeadTime_data_relationships_stock_location:
      properties:
        type:
          default: stock_locations
          description: The resource's type
          example: stock_locations
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    deliveryLeadTime_data_relationships_shipping_method:
      properties:
        type:
          default: shipping_methods
          description: The resource's type
          example: shipping_methods
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    deliveryLeadTime_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        shipping_method:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_shipping_method'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    deliveryLeadTime_data:
      properties:
        type:
          default: delivery_lead_times
          description: The resource's type
          example: delivery_lead_times
          type: string
        attributes:
          $ref: '#/components/schemas/deliveryLeadTime_data_attributes'
        relationships:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships'
      required:
      - attributes
      - type
      type: object
    deliveryLeadTimeCreate_data_attributes:
      properties:
        min_hours:
          description: The delivery lead minimum time (in hours) when shipping from
            the associated stock location with the associated shipping method.
          example: 48
          type: integer
        max_hours:
          description: The delivery lead maximun time (in hours) when shipping from
            the associated stock location with the associated shipping method.
          example: 72
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - max_hours
      - min_hours
      type: object
    deliveryLeadTimeCreate_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        shipping_method:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_shipping_method'
      required:
      - shipping_method
      - stock_location
      type: object
    deliveryLeadTimeCreate_data:
      properties:
        type:
          default: delivery_lead_times
          description: The resource's type
          example: delivery_lead_times
          type: string
        attributes:
          $ref: '#/components/schemas/deliveryLeadTimeCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/deliveryLeadTimeCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    deliveryLeadTimeUpdate_data_attributes:
      properties:
        min_hours:
          description: The delivery lead minimum time (in hours) when shipping from
            the associated stock location with the associated shipping method.
          example: 48
          type: integer
        max_hours:
          description: The delivery lead maximun time (in hours) when shipping from
            the associated stock location with the associated shipping method.
          example: 72
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    deliveryLeadTimeUpdate_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        shipping_method:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_shipping_method'
      type: object
    deliveryLeadTimeUpdate_data:
      properties:
        type:
          default: delivery_lead_times
          description: The resource's type
          example: delivery_lead_times
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/deliveryLeadTimeUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/deliveryLeadTimeUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    eventCallback_data_attributes:
      properties:
        callback_url:
          description: "The URI of the callback, inherited by the associated webhook."
          example: https://yourapp.com/webhooks
          type: string
        payload:
          description: "The payload sent to the callback endpoint, including the event\
            \ affected resource and the specified includes."
          example:
            data:
              attributes:
                id: PYWehaoXJj
                type: orders
          type: object
        response_code:
          description: The HTTP response code of the callback endpoint.
          example: "200"
          type: string
        response_message:
          description: The HTTP response message of the callback endpoint.
          example: OK
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    eventCallback_data_relationships_webhook:
      properties:
        type:
          default: webhooks
          description: The resource's type
          example: webhooks
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    eventCallback_data_relationships:
      properties:
        webhook:
          $ref: '#/components/schemas/eventCallback_data_relationships_webhook'
      type: object
    eventCallback_data:
      properties:
        type:
          default: event_callbacks
          description: The resource's type
          example: event_callbacks
          type: string
        attributes:
          $ref: '#/components/schemas/eventCallback_data_attributes'
        relationships:
          $ref: '#/components/schemas/eventCallback_data_relationships'
      required:
      - attributes
      - type
      type: object
    externalGateway_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        shared_secret:
          description: The shared secret used to sign gateway payloads.
          example: xxxx-yyyy-zzzz
          type: string
        authorize_url:
          description: The endpoint used by the external gateway to authorize payments.
          example: https://external_gateway.com/authorize
          type: string
        capture_url:
          description: The endpoint used by the external gateway to capture payments.
          example: https://external_gateway.com/capture
          type: string
        void_url:
          description: The endpoint used by the external gateway to void payments.
          example: https://external_gateway.com/void
          type: string
        refund_url:
          description: The endpoint used by the external gateway to refund payments.
          example: https://external_gateway.com/refund
          type: string
        token_url:
          description: The endpoint used by the external gateway to create a customer
            payment token.
          example: https://external_gateway.com/token
          type: string
      type: object
    externalGateway_data_relationships_external_payments:
      properties:
        type:
          default: external_payments
          description: The resource's type
          example: external_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    externalGateway_data_relationships:
      properties:
        payment_methods:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        external_payments:
          $ref: '#/components/schemas/externalGateway_data_relationships_external_payments'
      type: object
    externalGateway_data:
      properties:
        type:
          default: external_gateways
          description: The resource's type
          example: external_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/externalGateway_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalGateway_data_relationships'
      required:
      - attributes
      - type
      type: object
    externalGatewayCreate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        authorize_url:
          description: The endpoint used by the external gateway to authorize payments.
          example: https://external_gateway.com/authorize
          type: string
        capture_url:
          description: The endpoint used by the external gateway to capture payments.
          example: https://external_gateway.com/capture
          type: string
        void_url:
          description: The endpoint used by the external gateway to void payments.
          example: https://external_gateway.com/void
          type: string
        refund_url:
          description: The endpoint used by the external gateway to refund payments.
          example: https://external_gateway.com/refund
          type: string
        token_url:
          description: The endpoint used by the external gateway to create a customer
            payment token.
          example: https://external_gateway.com/token
          type: string
      required:
      - name
      type: object
    externalGatewayCreate_data:
      properties:
        type:
          default: external_gateways
          description: The resource's type
          example: external_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/externalGatewayCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    externalGatewayUpdate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        authorize_url:
          description: The endpoint used by the external gateway to authorize payments.
          example: https://external_gateway.com/authorize
          type: string
        capture_url:
          description: The endpoint used by the external gateway to capture payments.
          example: https://external_gateway.com/capture
          type: string
        void_url:
          description: The endpoint used by the external gateway to void payments.
          example: https://external_gateway.com/void
          type: string
        refund_url:
          description: The endpoint used by the external gateway to refund payments.
          example: https://external_gateway.com/refund
          type: string
        token_url:
          description: The endpoint used by the external gateway to create a customer
            payment token.
          example: https://external_gateway.com/token
          type: string
      type: object
    externalGatewayUpdate_data:
      properties:
        type:
          default: external_gateways
          description: The resource's type
          example: external_gateways
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/externalGatewayUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    externalPayment_data_attributes:
      properties:
        payment_source_token:
          description: "The payment source token, as generated by the external gateway\
            \ SDK. Credit Card numbers are rejected."
          example: xxxx.yyyy.zzzz
          type: string
        options:
          description: External payment options.
          example:
            foo: bar
          type: object
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    externalPayment_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        payment_gateway:
          $ref: '#/components/schemas/adyenPayment_data_relationships_payment_gateway'
        wallet:
          $ref: '#/components/schemas/customer_data_relationships_customer_payment_sources'
      type: object
    externalPayment_data:
      properties:
        type:
          default: external_payments
          description: The resource's type
          example: external_payments
          type: string
        attributes:
          $ref: '#/components/schemas/externalPayment_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPayment_data_relationships'
      required:
      - attributes
      - type
      type: object
    externalPaymentCreate_data_attributes:
      properties:
        payment_source_token:
          description: "The payment source token, as generated by the external gateway\
            \ SDK. Credit Card numbers are rejected."
          example: xxxx.yyyy.zzzz
          type: string
        options:
          description: External payment options.
          example:
            foo: bar
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - payment_source_token
      type: object
    externalPaymentCreate_data:
      properties:
        type:
          default: external_payments
          description: The resource's type
          example: external_payments
          type: string
        attributes:
          $ref: '#/components/schemas/externalPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    externalPaymentUpdate_data_attributes:
      properties:
        options:
          description: External payment options.
          example:
            foo: bar
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    externalPaymentUpdate_data:
      properties:
        type:
          default: external_payments
          description: The resource's type
          example: external_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/externalPaymentUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    externalPromotion_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        total_usage_count:
          description: The number of times this promotion has been applied.
          example: 2
          type: integer
        active:
          description: Indicates if the promotion is active.
          example: true
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        promotion_url:
          description: The URL to the service that will compute the discount.
          example: https://external_promotion.yourbrand.com
          type: string
      type: object
    externalPromotion_data_relationships_promotion_rules:
      properties:
        type:
          default: promotion_rules
          description: The resource's type
          example: promotion_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    externalPromotion_data_relationships_order_amount_promotion_rule:
      properties:
        type:
          default: order_amount_promotion_rules
          description: The resource's type
          example: order_amount_promotion_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    externalPromotion_data_relationships_sku_list_promotion_rule:
      properties:
        type:
          default: sku_list_promotion_rules
          description: The resource's type
          example: sku_list_promotion_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    externalPromotion_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        promotion_rules:
          $ref: '#/components/schemas/externalPromotion_data_relationships_promotion_rules'
        order_amount_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_order_amount_promotion_rule'
        sku_list_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_sku_list_promotion_rule'
        coupon_codes_promotion_rule:
          $ref: '#/components/schemas/coupon_data_relationships_promotion_rule'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    externalPromotion_data:
      properties:
        type:
          default: external_promotions
          description: The resource's type
          example: external_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/externalPromotion_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotion_data_relationships'
      required:
      - attributes
      - type
      type: object
    externalPromotionCreate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        promotion_url:
          description: The URL to the service that will compute the discount.
          example: https://external_promotion.yourbrand.com
          type: string
      required:
      - expires_at
      - name
      - promotion_url
      - starts_at
      - total_usage_limit
      type: object
    externalPromotionCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        promotion_rules:
          $ref: '#/components/schemas/externalPromotion_data_relationships_promotion_rules'
        order_amount_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_order_amount_promotion_rule'
        sku_list_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_sku_list_promotion_rule'
        coupon_codes_promotion_rule:
          $ref: '#/components/schemas/coupon_data_relationships_promotion_rule'
      type: object
    externalPromotionCreate_data:
      properties:
        type:
          default: external_promotions
          description: The resource's type
          example: external_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/externalPromotionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotionCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    externalPromotionUpdate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        promotion_url:
          description: The URL to the service that will compute the discount.
          example: https://external_promotion.yourbrand.com
          type: string
      type: object
    externalPromotionUpdate_data:
      properties:
        type:
          default: external_promotions
          description: The resource's type
          example: external_promotions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/externalPromotionUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotionCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    externalTaxCalculator_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        tax_calculator_url:
          description: The URL to the service that will compute the taxes.
          example: https://external_calculator.yourbrand.com
          type: string
      type: object
    externalTaxCalculator_data:
      properties:
        type:
          default: external_tax_calculators
          description: The resource's type
          example: external_tax_calculators
          type: string
        attributes:
          $ref: '#/components/schemas/externalTaxCalculator_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccount_data_relationships'
      required:
      - attributes
      - type
      type: object
    externalTaxCalculatorCreate_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        tax_calculator_url:
          description: The URL to the service that will compute the taxes.
          example: https://external_calculator.yourbrand.com
          type: string
      required:
      - name
      - tax_calculator_url
      type: object
    externalTaxCalculatorCreate_data:
      properties:
        type:
          default: external_tax_calculators
          description: The resource's type
          example: external_tax_calculators
          type: string
        attributes:
          $ref: '#/components/schemas/externalTaxCalculatorCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccountCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    externalTaxCalculatorUpdate_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        tax_calculator_url:
          description: The URL to the service that will compute the taxes.
          example: https://external_calculator.yourbrand.com
          type: string
      type: object
    externalTaxCalculatorUpdate_data:
      properties:
        type:
          default: external_tax_calculators
          description: The resource's type
          example: external_tax_calculators
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/externalTaxCalculatorUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccountCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    fixedAmountPromotion_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        total_usage_count:
          description: The number of times this promotion has been applied.
          example: 2
          type: integer
        active:
          description: Indicates if the promotion is active.
          example: true
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        fixed_amount_cents:
          description: "The discount fixed amount to be applied, in cents"
          example: 1000
          type: integer
        fixed_amount_float:
          description: "The discount fixed amount to be applied, float."
          example: 10.0
          type: number
        formatted_fixed_amount:
          description: "The discount fixed amount to be applied, formatted."
          example: "€10,00"
          type: string
      type: object
    fixedAmountPromotion_data:
      properties:
        type:
          default: fixed_amount_promotions
          description: The resource's type
          example: fixed_amount_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/fixedAmountPromotion_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotion_data_relationships'
      required:
      - attributes
      - type
      type: object
    fixedAmountPromotionCreate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        fixed_amount_cents:
          description: "The discount fixed amount to be applied, in cents"
          example: 1000
          type: integer
      required:
      - expires_at
      - fixed_amount_cents
      - name
      - starts_at
      - total_usage_limit
      type: object
    fixedAmountPromotionCreate_data:
      properties:
        type:
          default: fixed_amount_promotions
          description: The resource's type
          example: fixed_amount_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/fixedAmountPromotionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotionCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    fixedAmountPromotionUpdate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        fixed_amount_cents:
          description: "The discount fixed amount to be applied, in cents"
          example: 1000
          type: integer
      type: object
    fixedAmountPromotionUpdate_data:
      properties:
        type:
          default: fixed_amount_promotions
          description: The resource's type
          example: fixed_amount_promotions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/fixedAmountPromotionUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotionCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    fixedPricePromotion_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        total_usage_count:
          description: The number of times this promotion has been applied.
          example: 2
          type: integer
        active:
          description: Indicates if the promotion is active.
          example: true
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        fixed_amount_cents:
          description: "The price fixed amount to be applied on matching SKUs, in\
            \ cents"
          example: 1000
          type: integer
        fixed_amount_float:
          description: "The discount fixed amount to be applied, float."
          example: 10.0
          type: number
        formatted_fixed_amount:
          description: "The discount fixed amount to be applied, formatted."
          example: "€10,00"
          type: string
      type: object
    fixedPricePromotion_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        promotion_rules:
          $ref: '#/components/schemas/externalPromotion_data_relationships_promotion_rules'
        order_amount_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_order_amount_promotion_rule'
        sku_list_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_sku_list_promotion_rule'
        coupon_codes_promotion_rule:
          $ref: '#/components/schemas/coupon_data_relationships_promotion_rule'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
        skus:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      type: object
    fixedPricePromotion_data:
      properties:
        type:
          default: fixed_price_promotions
          description: The resource's type
          example: fixed_price_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/fixedPricePromotion_data_attributes'
        relationships:
          $ref: '#/components/schemas/fixedPricePromotion_data_relationships'
      required:
      - attributes
      - type
      type: object
    fixedPricePromotionCreate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        fixed_amount_cents:
          description: "The price fixed amount to be applied on matching SKUs, in\
            \ cents"
          example: 1000
          type: integer
      required:
      - expires_at
      - fixed_amount_cents
      - name
      - starts_at
      - total_usage_limit
      type: object
    fixedPricePromotionCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        promotion_rules:
          $ref: '#/components/schemas/externalPromotion_data_relationships_promotion_rules'
        order_amount_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_order_amount_promotion_rule'
        sku_list_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_sku_list_promotion_rule'
        coupon_codes_promotion_rule:
          $ref: '#/components/schemas/coupon_data_relationships_promotion_rule'
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
      required:
      - sku_list
      type: object
    fixedPricePromotionCreate_data:
      properties:
        type:
          default: fixed_price_promotions
          description: The resource's type
          example: fixed_price_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/fixedPricePromotionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/fixedPricePromotionCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    fixedPricePromotionUpdate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        fixed_amount_cents:
          description: "The price fixed amount to be applied on matching SKUs, in\
            \ cents"
          example: 1000
          type: integer
      type: object
    fixedPricePromotionUpdate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        promotion_rules:
          $ref: '#/components/schemas/externalPromotion_data_relationships_promotion_rules'
        order_amount_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_order_amount_promotion_rule'
        sku_list_promotion_rule:
          $ref: '#/components/schemas/externalPromotion_data_relationships_sku_list_promotion_rule'
        coupon_codes_promotion_rule:
          $ref: '#/components/schemas/coupon_data_relationships_promotion_rule'
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
      type: object
    fixedPricePromotionUpdate_data:
      properties:
        type:
          default: fixed_price_promotions
          description: The resource's type
          example: fixed_price_promotions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/fixedPricePromotionUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/fixedPricePromotionUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    freeGiftPromotion_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        total_usage_count:
          description: The number of times this promotion has been applied.
          example: 2
          type: integer
        active:
          description: Indicates if the promotion is active.
          example: true
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        max_quantity:
          description: "The max quantity of free gifts globally applicable by the\
            \ promotion, default to 1"
          example: 3
          type: integer
      type: object
    freeGiftPromotion_data:
      properties:
        type:
          default: free_gift_promotions
          description: The resource's type
          example: free_gift_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/freeGiftPromotion_data_attributes'
        relationships:
          $ref: '#/components/schemas/fixedPricePromotion_data_relationships'
      required:
      - attributes
      - type
      type: object
    freeGiftPromotionCreate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        max_quantity:
          description: "The max quantity of free gifts globally applicable by the\
            \ promotion, default to 1"
          example: 3
          type: integer
      required:
      - expires_at
      - name
      - starts_at
      - total_usage_limit
      type: object
    freeGiftPromotionCreate_data:
      properties:
        type:
          default: free_gift_promotions
          description: The resource's type
          example: free_gift_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/freeGiftPromotionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/fixedPricePromotionCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    freeGiftPromotionUpdate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        max_quantity:
          description: "The max quantity of free gifts globally applicable by the\
            \ promotion, default to 1"
          example: 3
          type: integer
      type: object
    freeGiftPromotionUpdate_data:
      properties:
        type:
          default: free_gift_promotions
          description: The resource's type
          example: free_gift_promotions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/freeGiftPromotionUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/fixedPricePromotionUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    freeShippingPromotion_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        total_usage_count:
          description: The number of times this promotion has been applied.
          example: 2
          type: integer
        active:
          description: Indicates if the promotion is active.
          example: true
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    freeShippingPromotion_data:
      properties:
        type:
          default: free_shipping_promotions
          description: The resource's type
          example: free_shipping_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/freeShippingPromotion_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotion_data_relationships'
      required:
      - attributes
      - type
      type: object
    freeShippingPromotionCreate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - expires_at
      - name
      - starts_at
      - total_usage_limit
      type: object
    freeShippingPromotionCreate_data:
      properties:
        type:
          default: free_shipping_promotions
          description: The resource's type
          example: free_shipping_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/freeShippingPromotionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotionCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    freeShippingPromotionUpdate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    freeShippingPromotionUpdate_data:
      properties:
        type:
          default: free_shipping_promotions
          description: The resource's type
          example: free_shipping_promotions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/freeShippingPromotionUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotionCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    geocoder_data:
      properties:
        type:
          default: geocoders
          description: The resource's type
          example: geocoders
          type: string
        attributes:
          $ref: '#/components/schemas/bingGeocoder_data_attributes'
        relationships:
          $ref: '#/components/schemas/bingGeocoder_data_relationships'
      required:
      - attributes
      - type
      type: object
    giftCardRecipient_data:
      properties:
        type:
          default: gift_card_recipients
          description: The resource's type
          example: gift_card_recipients
          type: string
        attributes:
          $ref: '#/components/schemas/couponRecipient_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponRecipient_data_relationships'
      required:
      - attributes
      - type
      type: object
    giftCardRecipientCreate_data:
      properties:
        type:
          default: gift_card_recipients
          description: The resource's type
          example: gift_card_recipients
          type: string
        attributes:
          $ref: '#/components/schemas/couponRecipientCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponRecipientCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    giftCardRecipientUpdate_data:
      properties:
        type:
          default: gift_card_recipients
          description: The resource's type
          example: gift_card_recipients
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/couponRecipientUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/couponRecipientCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    giftCard_data_attributes:
      properties:
        status:
          description: "The gift card status, one of 'draft', 'inactive', 'active',\
            \ or 'redeemed'."
          example: draft
          type: string
        code:
          description: "The gift card code UUID. If not set, it's automatically generated."
          example: 32db311a-75d9-4c17-9e34-2be220137ad6
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        initial_balance_cents:
          description: "The gift card initial balance, in cents."
          example: 15000
          type: integer
        initial_balance_float:
          description: "The gift card initial balance, float."
          example: 150.0
          type: number
        formatted_initial_balance:
          description: "The gift card initial balance, formatted."
          example: "€150,00"
          type: string
        balance_cents:
          description: "The gift card balance, in cents."
          example: 15000
          type: integer
        balance_float:
          description: "The gift card balance, float."
          example: 150.0
          type: number
        formatted_balance:
          description: "The gift card balance, formatted."
          example: "€150,00"
          type: string
        balance_max_cents:
          description: "The gift card balance max, in cents."
          example: "100000"
          type: string
        balance_max_float:
          description: "The gift card balance max, float."
          example: 1000.0
          type: number
        formatted_balance_max:
          description: "The gift card balance max, formatted."
          example: "€1000,00"
          type: string
        balance_log:
          description: The gift card balance log. Tracks all the gift card transactions.
          example:
          - date: 2019-12-23T12:00:00.000Z
            amount_cents: -10000
          - date: 2020-02-01T12:00:00.000Z
            amount_cents: 5000
          items:
            type: object
          type: array
        single_use:
          description: Indicates if the gift card can be used only one.
          example: false
          type: boolean
        rechargeable:
          description: Indicates if the gift card can be recharged.
          example: true
          type: boolean
        image_url:
          description: The URL of an image that represents the gift card.
          example: https://img.yourdomain.com/gift_cards/32db311a.png
          type: string
        expires_at:
          description: Time at which the gift card will expire.
          example: 2018-01-01T12:00:00.000Z
          type: string
        recipient_email:
          description: "The email address of the associated recipient. When creating\
            \ or updating a gift card, this is a shortcut to find or create the associated\
            \ recipient by email."
          example: john@example.com
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    giftCard_data_relationships_gift_card_recipient:
      properties:
        type:
          default: gift_card_recipients
          description: The resource's type
          example: gift_card_recipients
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    giftCard_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        gift_card_recipient:
          $ref: '#/components/schemas/giftCard_data_relationships_gift_card_recipient'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    giftCard_data:
      properties:
        type:
          default: gift_cards
          description: The resource's type
          example: gift_cards
          type: string
        attributes:
          $ref: '#/components/schemas/giftCard_data_attributes'
        relationships:
          $ref: '#/components/schemas/giftCard_data_relationships'
      required:
      - attributes
      - type
      type: object
    giftCardCreate_data_attributes:
      properties:
        code:
          description: "The gift card code UUID. If not set, it's automatically generated."
          example: 32db311a-75d9-4c17-9e34-2be220137ad6
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        balance_cents:
          description: "The gift card balance, in cents."
          example: 15000
          type: integer
        balance_max_cents:
          description: "The gift card balance max, in cents."
          example: "100000"
          type: string
        single_use:
          description: Indicates if the gift card can be used only one.
          example: false
          type: boolean
        rechargeable:
          description: Indicates if the gift card can be recharged.
          example: true
          type: boolean
        image_url:
          description: The URL of an image that represents the gift card.
          example: https://img.yourdomain.com/gift_cards/32db311a.png
          type: string
        expires_at:
          description: Time at which the gift card will expire.
          example: 2018-01-01T12:00:00.000Z
          type: string
        recipient_email:
          description: "The email address of the associated recipient. When creating\
            \ or updating a gift card, this is a shortcut to find or create the associated\
            \ recipient by email."
          example: john@example.com
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - balance_cents
      type: object
    giftCardCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        gift_card_recipient:
          $ref: '#/components/schemas/giftCard_data_relationships_gift_card_recipient'
      type: object
    giftCardCreate_data:
      properties:
        type:
          default: gift_cards
          description: The resource's type
          example: gift_cards
          type: string
        attributes:
          $ref: '#/components/schemas/giftCardCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/giftCardCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    giftCardUpdate_data_attributes:
      properties:
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        balance_cents:
          description: "The gift card balance, in cents."
          example: 15000
          type: integer
        balance_max_cents:
          description: "The gift card balance max, in cents."
          example: "100000"
          type: string
        single_use:
          description: Indicates if the gift card can be used only one.
          example: false
          type: boolean
        rechargeable:
          description: Indicates if the gift card can be recharged.
          example: true
          type: boolean
        image_url:
          description: The URL of an image that represents the gift card.
          example: https://img.yourdomain.com/gift_cards/32db311a.png
          type: string
        expires_at:
          description: Time at which the gift card will expire.
          example: 2018-01-01T12:00:00.000Z
          type: string
        recipient_email:
          description: "The email address of the associated recipient. When creating\
            \ or updating a gift card, this is a shortcut to find or create the associated\
            \ recipient by email."
          example: john@example.com
          type: string
        _purchase:
          description: "Send this attribute if you want to confirm a draft gift card.\
            \ The gift card becomes 'inactive', waiting to be activated."
          example: true
          type: boolean
        _activate:
          description: Send this attribute if you want to activate a gift card.
          example: true
          type: boolean
        _deactivate:
          description: Send this attribute if you want to deactivate a gift card.
          example: true
          type: boolean
        _balance_change_cents:
          description: "The balance change, in cents. Send a negative value to reduces\
            \ the card balance by the specified amount. Send a positive value to recharge\
            \ the gift card (if rechargeable)."
          example: -5000
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    giftCardUpdate_data:
      properties:
        type:
          default: gift_cards
          description: The resource's type
          example: gift_cards
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/giftCardUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/giftCardCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    googleGeocoder_data:
      properties:
        type:
          default: google_geocoders
          description: The resource's type
          example: google_geocoders
          type: string
        attributes:
          $ref: '#/components/schemas/bingGeocoder_data_attributes'
        relationships:
          $ref: '#/components/schemas/bingGeocoder_data_relationships'
      required:
      - attributes
      - type
      type: object
    googleGeocoderCreate_data_attributes:
      properties:
        name:
          description: The geocoder's internal name
          example: Default geocoder
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        api_key:
          description: The Google Map API key
          example: xxxx-yyyy-zzzz
          type: string
      required:
      - api_key
      - name
      type: object
    googleGeocoderCreate_data:
      properties:
        type:
          default: google_geocoders
          description: The resource's type
          example: google_geocoders
          type: string
        attributes:
          $ref: '#/components/schemas/googleGeocoderCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    googleGeocoderUpdate_data_attributes:
      properties:
        name:
          description: The geocoder's internal name
          example: Default geocoder
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        api_key:
          description: The Google Map API key
          example: xxxx-yyyy-zzzz
          type: string
      type: object
    googleGeocoderUpdate_data:
      properties:
        type:
          default: google_geocoders
          description: The resource's type
          example: google_geocoders
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/googleGeocoderUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    import_data_attributes:
      properties:
        resource_type:
          description: The type of resource being imported.
          example: skus
          type: string
        parent_resource_id:
          description: The ID of the parent resource to be associated with imported
            data.
          example: "1234"
          type: string
        status:
          description: "The import job status. One of 'pending' (default), 'in_progress',\
            \ 'interrputed', or 'completed'."
          example: in_progress
          type: string
        started_at:
          description: Time at which the import was started.
          example: 2018-01-01T12:00:00.000Z
          type: string
        completed_at:
          description: Time at which the import was completed.
          example: 2018-01-01T12:00:00.000Z
          type: string
        interrupted_at:
          description: Time at which the import was interrupted.
          example: 2018-01-01T12:00:00.000Z
          type: string
        inputs:
          description: Array of objects representing the resources that are being
            imported.
          example:
          - code: ABC
            name: Foo
          - code: DEF
            name: Bar
          items:
            type: object
          type: array
        inputs_size:
          description: Indicates the size of the objects to be imported.
          example: 300
          type: integer
        errors_count:
          description: "Indicates the number of import errors, if any."
          example: 30
          type: integer
        warnings_count:
          description: "Indicates the number of import warnings, if any."
          example: 1
          type: integer
        destroyed_count:
          description: "Indicates the number of records that have been destroyed,\
            \ if any."
          example: 99
          type: integer
        processed_count:
          description: Indicates the number of records that have been processed (created
            or updated).
          example: 270
          type: integer
        errors_log:
          description: "Contains the import errors, if any."
          example:
            ABC:
              name:
              - has already been taken
          type: object
        warnings_log:
          description: "Contains the import warnings, if any."
          example:
            ABC:
            - could not be deleted
          type: object
        cleanup_records:
          description: Indicates if the import should cleanup records that are not
            included in the inputs array.
          example: true
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    import_data:
      properties:
        type:
          default: imports
          description: The resource's type
          example: imports
          type: string
        attributes:
          $ref: '#/components/schemas/import_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    importCreate_data_attributes:
      properties:
        resource_type:
          description: The type of resource being imported.
          example: skus
          type: string
        parent_resource_id:
          description: The ID of the parent resource to be associated with imported
            data.
          example: "1234"
          type: string
        inputs:
          description: Array of objects representing the resources that are being
            imported.
          example:
          - code: ABC
            name: Foo
          - code: DEF
            name: Bar
          items:
            type: object
          type: array
        cleanup_records:
          description: Indicates if the import should cleanup records that are not
            included in the inputs array.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - inputs
      - resource_type
      type: object
    importCreate_data:
      properties:
        type:
          default: imports
          description: The resource's type
          example: imports
          type: string
        attributes:
          $ref: '#/components/schemas/importCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    inStockSubscription_data_attributes:
      properties:
        status:
          description: "The subscription status. One of 'active' (default), 'inactive',\
            \ or 'notified'"
          example: active
          type: string
        customer_email:
          description: "The email of the associated customer, replace the relationship"
          example: john@example.com
          type: string
        sku_code:
          description: "The code of the associated sku, replace the relationship"
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        stock_threshold:
          description: "The threshold at which to trigger the back in stock notification,\
            \ default to 1."
          example: 3
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    inStockSubscription_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      type: object
    inStockSubscription_data:
      properties:
        type:
          default: in_stock_subscriptions
          description: The resource's type
          example: in_stock_subscriptions
          type: string
        attributes:
          $ref: '#/components/schemas/inStockSubscription_data_attributes'
        relationships:
          $ref: '#/components/schemas/inStockSubscription_data_relationships'
      required:
      - attributes
      - type
      type: object
    inStockSubscriptionCreate_data_attributes:
      properties:
        customer_email:
          description: "The email of the associated customer, replace the relationship"
          example: john@example.com
          type: string
        sku_code:
          description: "The code of the associated sku, replace the relationship"
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        stock_threshold:
          description: "The threshold at which to trigger the back in stock notification,\
            \ default to 1."
          example: 3
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    inStockSubscriptionCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      required:
      - customer
      - market
      - sku
      type: object
    inStockSubscriptionCreate_data:
      properties:
        type:
          default: in_stock_subscriptions
          description: The resource's type
          example: in_stock_subscriptions
          type: string
        attributes:
          $ref: '#/components/schemas/inStockSubscriptionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/inStockSubscriptionCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    inStockSubscriptionUpdate_data_attributes:
      properties:
        sku_code:
          description: "The code of the associated sku, replace the relationship"
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        stock_threshold:
          description: "The threshold at which to trigger the back in stock notification,\
            \ default to 1."
          example: 3
          type: integer
        _activate:
          description: Send this attribute if you want to activate an inactive subscription.
          example: true
          type: boolean
        _deactivate:
          description: Send this attribute if you want to dactivate an active subscription.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    inStockSubscriptionUpdate_data:
      properties:
        type:
          default: in_stock_subscriptions
          description: The resource's type
          example: in_stock_subscriptions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/inStockSubscriptionUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/inStockSubscription_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    inventoryModel_data_attributes:
      properties:
        name:
          description: The inventory model's internal name.
          example: EU Inventory Model
          type: string
        strategy:
          description: "The inventory model's shipping strategy: one between 'split_shipments'\
            \ (default), 'ship_from_primary' and 'ship_from_first_available_or_primary'."
          example: split_shipments
          type: string
        stock_locations_cutoff:
          description: The maximum number of stock locations used for inventory computation
          example: 3
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    inventoryModel_data_relationships_inventory_stock_locations:
      properties:
        type:
          default: inventory_stock_locations
          description: The resource's type
          example: inventory_stock_locations
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    inventoryModel_data_relationships_inventory_return_locations:
      properties:
        type:
          default: inventory_return_locations
          description: The resource's type
          example: inventory_return_locations
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    inventoryModel_data_relationships:
      properties:
        inventory_stock_locations:
          $ref: '#/components/schemas/inventoryModel_data_relationships_inventory_stock_locations'
        inventory_return_locations:
          $ref: '#/components/schemas/inventoryModel_data_relationships_inventory_return_locations'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    inventoryModel_data:
      properties:
        type:
          default: inventory_models
          description: The resource's type
          example: inventory_models
          type: string
        attributes:
          $ref: '#/components/schemas/inventoryModel_data_attributes'
        relationships:
          $ref: '#/components/schemas/inventoryModel_data_relationships'
      required:
      - attributes
      - type
      type: object
    inventoryModelCreate_data_attributes:
      properties:
        name:
          description: The inventory model's internal name.
          example: EU Inventory Model
          type: string
        strategy:
          description: "The inventory model's shipping strategy: one between 'split_shipments'\
            \ (default), 'ship_from_primary' and 'ship_from_first_available_or_primary'."
          example: split_shipments
          type: string
        stock_locations_cutoff:
          description: The maximum number of stock locations used for inventory computation
          example: 3
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      - strategy
      type: object
    inventoryModelCreate_data:
      properties:
        type:
          default: inventory_models
          description: The resource's type
          example: inventory_models
          type: string
        attributes:
          $ref: '#/components/schemas/inventoryModelCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    inventoryModelUpdate_data_attributes:
      properties:
        name:
          description: The inventory model's internal name.
          example: EU Inventory Model
          type: string
        strategy:
          description: "The inventory model's shipping strategy: one between 'split_shipments'\
            \ (default), 'ship_from_primary' and 'ship_from_first_available_or_primary'."
          example: split_shipments
          type: string
        stock_locations_cutoff:
          description: The maximum number of stock locations used for inventory computation
          example: 3
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    inventoryModelUpdate_data:
      properties:
        type:
          default: inventory_models
          description: The resource's type
          example: inventory_models
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/inventoryModelUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    inventoryReturnLocation_data_attributes:
      properties:
        priority:
          description: The inventory return location priority within the associated
            invetory model.
          example: 1
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    inventoryReturnLocation_data_relationships_inventory_model:
      properties:
        type:
          default: inventory_models
          description: The resource's type
          example: inventory_models
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    inventoryReturnLocation_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        inventory_model:
          $ref: '#/components/schemas/inventoryReturnLocation_data_relationships_inventory_model'
      type: object
    inventoryReturnLocation_data:
      properties:
        type:
          default: inventory_return_locations
          description: The resource's type
          example: inventory_return_locations
          type: string
        attributes:
          $ref: '#/components/schemas/inventoryReturnLocation_data_attributes'
        relationships:
          $ref: '#/components/schemas/inventoryReturnLocation_data_relationships'
      required:
      - attributes
      - type
      type: object
    inventoryReturnLocationCreate_data_attributes:
      properties:
        priority:
          description: The inventory return location priority within the associated
            invetory model.
          example: 1
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - priority
      type: object
    inventoryReturnLocationCreate_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        inventory_model:
          $ref: '#/components/schemas/inventoryReturnLocation_data_relationships_inventory_model'
      required:
      - inventory_model
      - stock_location
      type: object
    inventoryReturnLocationCreate_data:
      properties:
        type:
          default: inventory_return_locations
          description: The resource's type
          example: inventory_return_locations
          type: string
        attributes:
          $ref: '#/components/schemas/inventoryReturnLocationCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/inventoryReturnLocationCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    inventoryReturnLocationUpdate_data_attributes:
      properties:
        priority:
          description: The inventory return location priority within the associated
            invetory model.
          example: 1
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    inventoryReturnLocationUpdate_data:
      properties:
        type:
          default: inventory_return_locations
          description: The resource's type
          example: inventory_return_locations
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/inventoryReturnLocationUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/inventoryReturnLocation_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    inventoryStockLocation_data_attributes:
      properties:
        priority:
          description: The stock location priority within the associated invetory
            model.
          example: 1
          type: integer
        on_hold:
          description: "Indicates if the shipment should be put on hold if fulfilled\
            \ from the associated stock location. This is useful to manage use cases\
            \ like back-orders, pre-orders or personalized orders that need to be\
            \ customized before being fulfilled."
          example: false
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    inventoryStockLocation_data:
      properties:
        type:
          default: inventory_stock_locations
          description: The resource's type
          example: inventory_stock_locations
          type: string
        attributes:
          $ref: '#/components/schemas/inventoryStockLocation_data_attributes'
        relationships:
          $ref: '#/components/schemas/inventoryReturnLocation_data_relationships'
      required:
      - attributes
      - type
      type: object
    inventoryStockLocationCreate_data_attributes:
      properties:
        priority:
          description: The stock location priority within the associated invetory
            model.
          example: 1
          type: integer
        on_hold:
          description: "Indicates if the shipment should be put on hold if fulfilled\
            \ from the associated stock location. This is useful to manage use cases\
            \ like back-orders, pre-orders or personalized orders that need to be\
            \ customized before being fulfilled."
          example: false
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - priority
      type: object
    inventoryStockLocationCreate_data:
      properties:
        type:
          default: inventory_stock_locations
          description: The resource's type
          example: inventory_stock_locations
          type: string
        attributes:
          $ref: '#/components/schemas/inventoryStockLocationCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/inventoryReturnLocationCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    inventoryStockLocationUpdate_data_attributes:
      properties:
        priority:
          description: The stock location priority within the associated invetory
            model.
          example: 1
          type: integer
        on_hold:
          description: "Indicates if the shipment should be put on hold if fulfilled\
            \ from the associated stock location. This is useful to manage use cases\
            \ like back-orders, pre-orders or personalized orders that need to be\
            \ customized before being fulfilled."
          example: false
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    inventoryStockLocationUpdate_data:
      properties:
        type:
          default: inventory_stock_locations
          description: The resource's type
          example: inventory_stock_locations
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/inventoryStockLocationUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/inventoryReturnLocation_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    klarnaGateway_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    klarnaGateway_data_relationships_klarna_payments:
      properties:
        type:
          default: klarna_payments
          description: The resource's type
          example: klarna_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    klarnaGateway_data_relationships:
      properties:
        payment_methods:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        klarna_payments:
          $ref: '#/components/schemas/klarnaGateway_data_relationships_klarna_payments'
      type: object
    klarnaGateway_data:
      properties:
        type:
          default: klarna_gateways
          description: The resource's type
          example: klarna_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/klarnaGateway_data_attributes'
        relationships:
          $ref: '#/components/schemas/klarnaGateway_data_relationships'
      required:
      - attributes
      - type
      type: object
    klarnaGatewayCreate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        country_code:
          description: "The gateway country code one of EU, US, or OC."
          example: EU
          type: string
        api_key:
          description: The public key linked to your API credential.
          example: xxxx-yyyy-zzzz
          type: string
        api_secret:
          description: The gateway API key.
          example: xxxx-yyyy-zzzz
          type: string
      required:
      - api_key
      - api_secret
      - country_code
      - name
      type: object
    klarnaGatewayCreate_data_relationships:
      properties:
        klarna_payments:
          $ref: '#/components/schemas/klarnaGateway_data_relationships_klarna_payments'
      type: object
    klarnaGatewayCreate_data:
      properties:
        type:
          default: klarna_gateways
          description: The resource's type
          example: klarna_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/klarnaGatewayCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/klarnaGatewayCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    klarnaGatewayUpdate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        country_code:
          description: "The gateway country code one of EU, US, or OC."
          example: EU
          type: string
        api_key:
          description: The public key linked to your API credential.
          example: xxxx-yyyy-zzzz
          type: string
        api_secret:
          description: The gateway API key.
          example: xxxx-yyyy-zzzz
          type: string
      type: object
    klarnaGatewayUpdate_data:
      properties:
        type:
          default: klarna_gateways
          description: The resource's type
          example: klarna_gateways
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/klarnaGatewayUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/klarnaGatewayCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    klarnaPayment_data_attributes:
      properties:
        session_id:
          description: "The identifier of the payment session, useful to updated it."
          example: xxxx-yyyy-zzzz
          type: string
        client_token:
          description: The public token linked to your API credential. Available upon
            session creation.
          example: xxxx-yyyy-zzzz
          type: string
        payment_methods:
          description: The merchant available payment methods for the assoiated order.
            Available upon session creation.
          example:
          - foo: bar
          items:
            type: object
          type: array
        auth_token:
          description: "The token returned by a successful client authorization, mandatory\
            \ to place the order."
          example: xxxx-yyyy-zzzz
          type: string
        mismatched_amounts:
          description: Indicates if the order current amount differs form the one
            of the created payment intent.
          example: false
          type: boolean
        intent_amount_cents:
          description: "The amount of the associated payment intent, in cents."
          example: 1000
          type: integer
        intent_amount_float:
          description: "The amount of the associated payment intent, float."
          example: 10.0
          type: number
        formatted_intent_amount:
          description: "The amount of the associated payment intent, formatted."
          example: "€10,00"
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    klarnaPayment_data:
      properties:
        type:
          default: klarna_payments
          description: The resource's type
          example: klarna_payments
          type: string
        attributes:
          $ref: '#/components/schemas/klarnaPayment_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPayment_data_relationships'
      required:
      - attributes
      - type
      type: object
    klarnaPaymentCreate_data:
      properties:
        type:
          default: klarna_payments
          description: The resource's type
          example: klarna_payments
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    klarnaPaymentUpdate_data_attributes:
      properties:
        auth_token:
          description: "The token returned by a successful client authorization, mandatory\
            \ to place the order."
          example: xxxx-yyyy-zzzz
          type: string
        _update:
          description: Send this attribute if you want to update the payment session
            with fresh order data.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    klarnaPaymentUpdate_data:
      properties:
        type:
          default: klarna_payments
          description: The resource's type
          example: klarna_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/klarnaPaymentUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    lineItemOption_data_attributes:
      properties:
        name:
          description: "The name of the line item option. When blank, it gets populated\
            \ with the name of the associated sku option."
          example: Embossing
          type: string
        quantity:
          description: The line item option's quantity
          example: 2
          type: integer
        currency_code:
          description: "The international 3-letter currency code as defined by the\
            \ ISO 4217 standard, automatically inherited from the order's market."
          example: EUR
          type: string
        unit_amount_cents:
          description: "The unit amount of the line item option, in cents. When you\
            \ add a line item option to an order, this is automatically populated\
            \ from associated sku option's price."
          example: 990
          type: integer
        unit_amount_float:
          description: "The unit amount of the line item option, float. This can be\
            \ useful to track the purchase on thrid party systems, e.g Google Analyitcs\
            \ Enhanced Ecommerce."
          example: 9.9
          type: number
        formatted_unit_amount:
          description: "The unit amount of the line item option, formatted. This can\
            \ be useful to display the amount with currency in you views."
          example: "€9,90"
          type: string
        total_amount_cents:
          description: "The unit amount x quantity, in cents."
          example: 1880
          type: integer
        total_amount_float:
          description: "The unit amount x quantity, float. This can be useful to track\
            \ the purchase on thrid party systems, e.g Google Analyitcs Enhanced Ecommerce."
          example: 18.8
          type: number
        formatted_total_amount:
          description: "The unit amount x quantity, formatted. This can be useful\
            \ to display the amount with currency in you views."
          example: "€18,80"
          type: string
        delay_hours:
          description: The shipping delay that the customer can expect when adding
            this option (hours). Inherited from the associated sku option.
          example: 48
          type: integer
        delay_days:
          description: "The shipping delay that the customer can expect when adding\
            \ this option (days, rounded)."
          example: 2
          type: integer
        options:
          description: Set of key-value pairs that represent the selected options.
          example:
            embossing_text: Happy Birthday!
          type: object
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    lineItemOption_data_relationships_line_item:
      properties:
        type:
          default: line_items
          description: The resource's type
          example: line_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    lineItemOption_data_relationships_sku_option:
      properties:
        type:
          default: sku_options
          description: The resource's type
          example: sku_options
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    lineItemOption_data_relationships:
      properties:
        line_item:
          $ref: '#/components/schemas/lineItemOption_data_relationships_line_item'
        sku_option:
          $ref: '#/components/schemas/lineItemOption_data_relationships_sku_option'
      type: object
    lineItemOption_data:
      properties:
        type:
          default: line_item_options
          description: The resource's type
          example: line_item_options
          type: string
        attributes:
          $ref: '#/components/schemas/lineItemOption_data_attributes'
        relationships:
          $ref: '#/components/schemas/lineItemOption_data_relationships'
      required:
      - attributes
      - type
      type: object
    lineItemOptionCreate_data_attributes:
      properties:
        name:
          description: "The name of the line item option. When blank, it gets populated\
            \ with the name of the associated sku option."
          example: Embossing
          type: string
        quantity:
          description: The line item option's quantity
          example: 2
          type: integer
        options:
          description: Set of key-value pairs that represent the selected options.
          example:
            embossing_text: Happy Birthday!
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - options
      - quantity
      type: object
    lineItemOptionCreate_data_relationships:
      properties:
        line_item:
          $ref: '#/components/schemas/lineItemOption_data_relationships_line_item'
        sku_option:
          $ref: '#/components/schemas/lineItemOption_data_relationships_sku_option'
      required:
      - line_item
      - sku_option
      type: object
    lineItemOptionCreate_data:
      properties:
        type:
          default: line_item_options
          description: The resource's type
          example: line_item_options
          type: string
        attributes:
          $ref: '#/components/schemas/lineItemOptionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/lineItemOptionCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    lineItemOptionUpdate_data_attributes:
      properties:
        name:
          description: "The name of the line item option. When blank, it gets populated\
            \ with the name of the associated sku option."
          example: Embossing
          type: string
        quantity:
          description: The line item option's quantity
          example: 2
          type: integer
        options:
          description: Set of key-value pairs that represent the selected options.
          example:
            embossing_text: Happy Birthday!
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    lineItemOptionUpdate_data_relationships:
      properties:
        sku_option:
          $ref: '#/components/schemas/lineItemOption_data_relationships_sku_option'
      type: object
    lineItemOptionUpdate_data:
      properties:
        type:
          default: line_item_options
          description: The resource's type
          example: line_item_options
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/lineItemOptionUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/lineItemOptionUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    lineItem_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        bundle_code:
          description: The code of the associated bundle.
          example: BUNDLEMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The line item quantity.
          example: 4
          type: integer
        currency_code:
          description: "The international 3-letter currency code as defined by the\
            \ ISO 4217 standard, automatically inherited from the order's market."
          example: EUR
          type: string
        unit_amount_cents:
          description: "The unit amount of the line item, in cents. Can be specified\
            \ without an item, otherwise is automatically populated from the price\
            \ list associated to the order's market."
          example: 9900
          type: integer
        unit_amount_float:
          description: "The unit amount of the line item, float. This can be useful\
            \ to track the purchase on thrid party systems, e.g Google Analyitcs Enhanced\
            \ Ecommerce."
          example: 99.0
          type: number
        formatted_unit_amount:
          description: "The unit amount of the line item, formatted. This can be useful\
            \ to display the amount with currency in you views."
          example: "€99,00"
          type: string
        options_amount_cents:
          description: "The options amount of the line item, in cents."
          example: 990
          type: integer
        options_amount_float:
          description: "The options amount of the line item, float."
          example: 9.9
          type: number
        formatted_options_amount:
          description: "The options amount of the line item, formatted."
          example: "€9,90"
          type: string
        discount_cents:
          description: "The discount applied to the line item, in cents. When you\
            \ apply a discount to an order, this is automatically calculated basing\
            \ on the line item total_amount_cents value."
          example: -900
          type: integer
        discount_float:
          description: "The discount applied to the line item, float. When you apply\
            \ a discount to an order, this is automatically calculated basing on the\
            \ line item total_amount_cents value."
          example: 9.0
          type: number
        formatted_discount:
          description: "The discount applied to the line item, fromatted. When you\
            \ apply a discount to an order, this is automatically calculated basing\
            \ on the line item total_amount_cents value."
          example: "€9,00"
          type: string
        total_amount_cents:
          description: "Calculated as unit amount x quantity + options amount, in\
            \ cents."
          example: 18800
          type: integer
        total_amount_float:
          description: "Calculated as unit amount x quantity + options amount, float.\
            \ This can be useful to track the purchase on thrid party systems, e.g\
            \ Google Analyitcs Enhanced Ecommerce."
          example: 188.0
          type: number
        formatted_total_amount:
          description: "Calculated as unit amount x quantity + options amount, formatted.\
            \ This can be useful to display the amount with currency in you views."
          example: "€188,00"
          type: string
        tax_amount_cents:
          description: "Calculated as total amount cents - discount cent * tax rate,\
            \ in cents."
          example: 1880
          type: integer
        tax_amount_float:
          description: "Calculated as total amount cents - discount cent * tax rate,\
            \ float."
          example: 18.8
          type: number
        formatted_tax_amount:
          description: "Calculated as total amount cents - discount cent * tax rate,\
            \ formatted."
          example: "€18,80"
          type: string
        name:
          description: "The name of the line item. When blank, it gets populated with\
            \ the name of the associated item (if present)."
          example: Black Men T-shirt with White Logo (XL)
          type: string
        image_url:
          description: "The image_url of the line item. When blank, it gets populated\
            \ with the image_url of the associated item (if present, sku only)."
          example: https://img.yourdomain.com/skus/xYZkjABcde.png
          type: string
        discount_breakdown:
          description: The discount breakdown for this line item (if calculated).
          example:
            "41":
              cents: -900
              weight: 0.416
          type: object
        tax_rate:
          description: The tax rate for this line item (if calculated).
          example: 0.22
          type: number
        tax_breakdown:
          description: The tax breakdown for this line item (if calculated).
          example:
            id: "1234"
            city_amount: "0.0"
            state_amount: 6.6
            city_tax_rate: 0.0
            county_amount: 2.78
            taxable_amount: 139.0
            county_tax_rate: 0.02
            tax_collectable: 10.08
            special_tax_rate: 0.005
            combined_tax_rate: 0.0725
            city_taxable_amount: 0.0
            state_sales_tax_rate: 0.0475
            state_taxable_amount: 139.0
            county_taxable_amount: 139.0
            special_district_amount: 0.7
            special_district_taxable_amount: 139.0
          type: object
        item_type:
          description: "The type of the associate item. Can be one of 'sku', 'bundle',\
            \ 'shipment', 'payment_method', 'adjustment', 'gift_card', or a valid\
            \ promotion type."
          example: sku
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    lineItem_data_relationships_item:
      oneOf:
      - $ref: '#/components/schemas/adjustment'
      - $ref: '#/components/schemas/bundle'
      - $ref: '#/components/schemas/externalPromotion'
      - $ref: '#/components/schemas/fixedAmountPromotion'
      - $ref: '#/components/schemas/freeShippingPromotion'
      - $ref: '#/components/schemas/giftCard'
      - $ref: '#/components/schemas/paymentMethod'
      - $ref: '#/components/schemas/percentageDiscountPromotion'
      - $ref: '#/components/schemas/shipment'
      - $ref: '#/components/schemas/sku'
      properties:
        type:
          default: adjustments
          description: The resource's type
          enum:
          - adjustments
          - bundles
          - external_promotions
          - fixed_amount_promotions
          - free_shipping_promotions
          - gift_cards
          - payment_methods
          - percentage_discount_promotions
          - shipments
          - skus
          example: adjustments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    lineItem_data_relationships_line_item_options:
      properties:
        type:
          default: line_item_options
          description: The resource's type
          example: line_item_options
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    lineItem_data_relationships_shipment_line_items:
      deprecated: true
      properties:
        type:
          default: shipment_line_items
          description: The resource's type
          example: shipment_line_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    lineItem_data_relationships_stock_line_items:
      properties:
        type:
          default: stock_line_items
          description: The resource's type
          example: stock_line_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    lineItem_data_relationships_stock_transfers:
      properties:
        type:
          default: stock_transfers
          description: The resource's type
          example: stock_transfers
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    lineItem_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        item:
          $ref: '#/components/schemas/lineItem_data_relationships_item'
        line_item_options:
          $ref: '#/components/schemas/lineItem_data_relationships_line_item_options'
        shipment_line_items:
          $ref: '#/components/schemas/lineItem_data_relationships_shipment_line_items'
        stock_line_items:
          $ref: '#/components/schemas/lineItem_data_relationships_stock_line_items'
        stock_transfers:
          $ref: '#/components/schemas/lineItem_data_relationships_stock_transfers'
      type: object
    lineItem_data:
      properties:
        type:
          default: line_items
          description: The resource's type
          example: line_items
          type: string
        attributes:
          $ref: '#/components/schemas/lineItem_data_attributes'
        relationships:
          $ref: '#/components/schemas/lineItem_data_relationships'
      required:
      - attributes
      - type
      type: object
    lineItemCreate_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        bundle_code:
          description: The code of the associated bundle.
          example: BUNDLEMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The line item quantity.
          example: 4
          type: integer
        _external_price:
          description: "When creating a new line item, set this attribute to '1' if\
            \ you want to inject the unit_amount_cents price from an external source."
          example: true
          type: boolean
        _update_quantity:
          description: "When creating a new line item, set this attribute to '1' if\
            \ you want to update the line item quantity (if present) instead of creating\
            \ a new line item for the same sku."
          example: true
          type: boolean
        unit_amount_cents:
          description: "The unit amount of the line item, in cents. Can be specified\
            \ without an item, otherwise is automatically populated from the price\
            \ list associated to the order's market."
          example: 9900
          type: integer
        name:
          description: "The name of the line item. When blank, it gets populated with\
            \ the name of the associated item (if present)."
          example: Black Men T-shirt with White Logo (XL)
          type: string
        image_url:
          description: "The image_url of the line item. When blank, it gets populated\
            \ with the image_url of the associated item (if present, sku only)."
          example: https://img.yourdomain.com/skus/xYZkjABcde.png
          type: string
        item_type:
          description: "The type of the associate item. Can be one of 'sku', 'bundle',\
            \ 'shipment', 'payment_method', 'adjustment', 'gift_card', or a valid\
            \ promotion type."
          example: sku
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - quantity
      type: object
    lineItemCreate_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        item:
          $ref: '#/components/schemas/lineItem_data_relationships_item'
      required:
      - order
      type: object
    lineItemCreate_data:
      properties:
        type:
          default: line_items
          description: The resource's type
          example: line_items
          type: string
        attributes:
          $ref: '#/components/schemas/lineItemCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/lineItemCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    lineItemUpdate_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        bundle_code:
          description: The code of the associated bundle.
          example: BUNDLEMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The line item quantity.
          example: 4
          type: integer
        name:
          description: "The name of the line item. When blank, it gets populated with\
            \ the name of the associated item (if present)."
          example: Black Men T-shirt with White Logo (XL)
          type: string
        image_url:
          description: "The image_url of the line item. When blank, it gets populated\
            \ with the image_url of the associated item (if present, sku only)."
          example: https://img.yourdomain.com/skus/xYZkjABcde.png
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    lineItemUpdate_data:
      properties:
        type:
          default: line_items
          description: The resource's type
          example: line_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/lineItemUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    manualGateway_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        require_capture:
          description: Indicates if the gateway requires to captured.
          example: true
          type: boolean
      type: object
    manualGateway_data_relationships:
      properties:
        payment_methods:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
      type: object
    manualGateway_data:
      properties:
        type:
          default: manual_gateways
          description: The resource's type
          example: manual_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/manualGateway_data_attributes'
        relationships:
          $ref: '#/components/schemas/manualGateway_data_relationships'
      required:
      - attributes
      - type
      type: object
    manualGatewayCreate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        require_capture:
          description: Indicates if the gateway requires to captured.
          example: true
          type: boolean
      required:
      - name
      type: object
    manualGatewayCreate_data:
      properties:
        type:
          default: manual_gateways
          description: The resource's type
          example: manual_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/manualGatewayCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    manualGatewayUpdate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        require_capture:
          description: Indicates if the gateway requires to captured.
          example: true
          type: boolean
      type: object
    manualGatewayUpdate_data:
      properties:
        type:
          default: manual_gateways
          description: The resource's type
          example: manual_gateways
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/manualGatewayUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    manualTaxCalculator_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    manualTaxCalculator_data_relationships_tax_rules:
      properties:
        type:
          default: tax_rules
          description: The resource's type
          example: tax_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    manualTaxCalculator_data_relationships:
      properties:
        tax_categories:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_tax_categories'
        markets:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
        tax_rules:
          $ref: '#/components/schemas/manualTaxCalculator_data_relationships_tax_rules'
      type: object
    manualTaxCalculator_data:
      properties:
        type:
          default: manual_tax_calculators
          description: The resource's type
          example: manual_tax_calculators
          type: string
        attributes:
          $ref: '#/components/schemas/manualTaxCalculator_data_attributes'
        relationships:
          $ref: '#/components/schemas/manualTaxCalculator_data_relationships'
      required:
      - attributes
      - type
      type: object
    manualTaxCalculatorCreate_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    manualTaxCalculatorCreate_data_relationships:
      properties:
        tax_categories:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_tax_categories'
        tax_rules:
          $ref: '#/components/schemas/manualTaxCalculator_data_relationships_tax_rules'
      type: object
    manualTaxCalculatorCreate_data:
      properties:
        type:
          default: manual_tax_calculators
          description: The resource's type
          example: manual_tax_calculators
          type: string
        attributes:
          $ref: '#/components/schemas/manualTaxCalculatorCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/manualTaxCalculatorCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    manualTaxCalculatorUpdate_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    manualTaxCalculatorUpdate_data:
      properties:
        type:
          default: manual_tax_calculators
          description: The resource's type
          example: manual_tax_calculators
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/manualTaxCalculatorUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/manualTaxCalculatorCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    market_data_attributes:
      properties:
        number:
          description: Unique identifier for the market (numeric)
          example: 1234
          type: integer
        name:
          description: The market's internal name
          example: EU Market
          type: string
        facebook_pixel_id:
          description: The Facebook Pixed ID
          example: "1234567890"
          type: string
        checkout_url:
          description: The checkout URL for this market
          example: https://checkout.yourbrand.com/:order_id
          type: string
        external_prices_url:
          description: The URL used to fetch prices from an external source
          example: https://external_prices.yourbrand.com
          type: string
        private:
          description: Indicates if market belongs to a customer_group.
          example: true
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    market_data_relationships_merchant:
      properties:
        type:
          default: merchants
          description: The resource's type
          example: merchants
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    market_data_relationships_price_list:
      properties:
        type:
          default: price_lists
          description: The resource's type
          example: price_lists
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    market_data_relationships_tax_calculator:
      properties:
        type:
          default: tax_calculators
          description: The resource's type
          example: tax_calculators
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    market_data_relationships:
      properties:
        merchant:
          $ref: '#/components/schemas/market_data_relationships_merchant'
        price_list:
          $ref: '#/components/schemas/market_data_relationships_price_list'
        inventory_model:
          $ref: '#/components/schemas/inventoryReturnLocation_data_relationships_inventory_model'
        tax_calculator:
          $ref: '#/components/schemas/market_data_relationships_tax_calculator'
        customer_group:
          $ref: '#/components/schemas/customer_data_relationships_customer_group'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    market_data:
      properties:
        type:
          default: markets
          description: The resource's type
          example: markets
          type: string
        attributes:
          $ref: '#/components/schemas/market_data_attributes'
        relationships:
          $ref: '#/components/schemas/market_data_relationships'
      required:
      - attributes
      - type
      type: object
    marketCreate_data_attributes:
      properties:
        name:
          description: The market's internal name
          example: EU Market
          type: string
        facebook_pixel_id:
          description: The Facebook Pixed ID
          example: "1234567890"
          type: string
        checkout_url:
          description: The checkout URL for this market
          example: https://checkout.yourbrand.com/:order_id
          type: string
        external_prices_url:
          description: The URL used to fetch prices from an external source
          example: https://external_prices.yourbrand.com
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    marketCreate_data_relationships:
      properties:
        merchant:
          $ref: '#/components/schemas/market_data_relationships_merchant'
        price_list:
          $ref: '#/components/schemas/market_data_relationships_price_list'
        inventory_model:
          $ref: '#/components/schemas/inventoryReturnLocation_data_relationships_inventory_model'
        tax_calculator:
          $ref: '#/components/schemas/market_data_relationships_tax_calculator'
        customer_group:
          $ref: '#/components/schemas/customer_data_relationships_customer_group'
      required:
      - inventory_model
      - merchant
      - price_list
      type: object
    marketCreate_data:
      properties:
        type:
          default: markets
          description: The resource's type
          example: markets
          type: string
        attributes:
          $ref: '#/components/schemas/marketCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/marketCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    marketUpdate_data_attributes:
      properties:
        name:
          description: The market's internal name
          example: EU Market
          type: string
        facebook_pixel_id:
          description: The Facebook Pixed ID
          example: "1234567890"
          type: string
        checkout_url:
          description: The checkout URL for this market
          example: https://checkout.yourbrand.com/:order_id
          type: string
        external_prices_url:
          description: The URL used to fetch prices from an external source
          example: https://external_prices.yourbrand.com
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    marketUpdate_data_relationships:
      properties:
        merchant:
          $ref: '#/components/schemas/market_data_relationships_merchant'
        price_list:
          $ref: '#/components/schemas/market_data_relationships_price_list'
        inventory_model:
          $ref: '#/components/schemas/inventoryReturnLocation_data_relationships_inventory_model'
        tax_calculator:
          $ref: '#/components/schemas/market_data_relationships_tax_calculator'
        customer_group:
          $ref: '#/components/schemas/customer_data_relationships_customer_group'
      type: object
    marketUpdate_data:
      properties:
        type:
          default: markets
          description: The resource's type
          example: markets
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/marketUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/marketUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    merchant_data_attributes:
      properties:
        name:
          description: The merchant's internal name
          example: The Brand Inc.
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    merchant_data_relationships:
      properties:
        address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    merchant_data:
      properties:
        type:
          default: merchants
          description: The resource's type
          example: merchants
          type: string
        attributes:
          $ref: '#/components/schemas/merchant_data_attributes'
        relationships:
          $ref: '#/components/schemas/merchant_data_relationships'
      required:
      - attributes
      - type
      type: object
    merchantCreate_data_attributes:
      properties:
        name:
          description: The merchant's internal name
          example: The Brand Inc.
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    merchantCreate_data_relationships:
      properties:
        address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
      required:
      - address
      type: object
    merchantCreate_data:
      properties:
        type:
          default: merchants
          description: The resource's type
          example: merchants
          type: string
        attributes:
          $ref: '#/components/schemas/merchantCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/merchantCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    merchantUpdate_data_attributes:
      properties:
        name:
          description: The merchant's internal name
          example: The Brand Inc.
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    merchantUpdate_data_relationships:
      properties:
        address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
      type: object
    merchantUpdate_data:
      properties:
        type:
          default: merchants
          description: The resource's type
          example: merchants
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/merchantUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/merchantUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    orderAmountPromotionRule_data_attributes:
      properties:
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        order_amount_cents:
          description: "Apply the promotion only when order is over this amount, in\
            \ cents."
          example: 1000
          type: integer
        order_amount_float:
          description: "Apply the promotion only when order is over this amount, float."
          example: 10.0
          type: number
        formatted_order_amount:
          description: "Apply the promotion only when order is over this amount, formatted."
          example: "€10,00"
          type: string
      type: object
    orderAmountPromotionRule_data_relationships:
      properties:
        promotion:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships_promotion'
      type: object
    orderAmountPromotionRule_data:
      properties:
        type:
          default: order_amount_promotion_rules
          description: The resource's type
          example: order_amount_promotion_rules
          type: string
        attributes:
          $ref: '#/components/schemas/orderAmountPromotionRule_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderAmountPromotionRule_data_relationships'
      required:
      - attributes
      - type
      type: object
    orderAmountPromotionRuleCreate_data_attributes:
      properties:
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        order_amount_cents:
          description: "Apply the promotion only when order is over this amount, in\
            \ cents."
          example: 1000
          type: integer
      type: object
    orderAmountPromotionRuleCreate_data_relationships:
      properties:
        promotion:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships_promotion'
      required:
      - promotion
      type: object
    orderAmountPromotionRuleCreate_data:
      properties:
        type:
          default: order_amount_promotion_rules
          description: The resource's type
          example: order_amount_promotion_rules
          type: string
        attributes:
          $ref: '#/components/schemas/orderAmountPromotionRuleCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderAmountPromotionRuleCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    orderAmountPromotionRuleUpdate_data:
      properties:
        type:
          default: order_amount_promotion_rules
          description: The resource's type
          example: order_amount_promotion_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/orderAmountPromotionRuleCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderAmountPromotionRule_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    orderCopy_data_attributes:
      properties:
        status:
          description: "The order copy status. One of 'pending' (default), 'in_progress',\
            \ 'failed', or 'completed'."
          example: in_progress
          type: string
        started_at:
          description: Time at which the order copy was started.
          example: 2018-01-01T12:00:00.000Z
          type: string
        completed_at:
          description: Time at which the order copy was completed.
          example: 2018-01-01T12:00:00.000Z
          type: string
        failed_at:
          description: Time at which the order copy has failed.
          example: 2018-01-01T12:00:00.000Z
          type: string
        place_target_order:
          description: Indicates if the target order must be placed upon copy.
          example: true
          type: boolean
        cancel_source_order:
          description: Indicates if the source order must be cancelled upon copy.
          example: true
          type: boolean
        reuse_wallet:
          description: Indicates if the payment source within the source order customer's
            wallet must be copied.
          example: true
          type: boolean
        errors_log:
          description: "Contains the order copy errors, if any."
          example:
            status:
            - cannot transition from draft to placed
          type: object
        errors_count:
          description: "Indicates the number of copy errors, if any."
          example: 2
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    orderCopy_data_relationships:
      properties:
        source_order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        target_order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        order_subscription:
          $ref: '#/components/schemas/customer_data_relationships_order_subscriptions'
      type: object
    orderCopy_data:
      properties:
        type:
          default: order_copies
          description: The resource's type
          example: order_copies
          type: string
        attributes:
          $ref: '#/components/schemas/orderCopy_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderCopy_data_relationships'
      required:
      - attributes
      - type
      type: object
    orderCopyCreate_data_attributes:
      properties:
        place_target_order:
          description: Indicates if the target order must be placed upon copy.
          example: true
          type: boolean
        cancel_source_order:
          description: Indicates if the source order must be cancelled upon copy.
          example: true
          type: boolean
        reuse_wallet:
          description: Indicates if the payment source within the source order customer's
            wallet must be copied.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    orderCopyCreate_data_relationships:
      properties:
        source_order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
      required:
      - source_order
      type: object
    orderCopyCreate_data:
      properties:
        type:
          default: order_copies
          description: The resource's type
          example: order_copies
          type: string
        attributes:
          $ref: '#/components/schemas/orderCopyCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderCopyCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    orderSubscription_data_attributes:
      properties:
        number:
          description: Unique identifier for the subscription (numeric)
          example: "1234"
          type: string
        status:
          description: "The subscription status. One of 'draft' (default), 'inactive',\
            \ 'active', or 'cancelled'."
          example: draft
          type: string
        frequency:
          description: "The frequency of the subscription. One of 'hourly', 'daily',\
            \ 'weekly', 'monthly', 'two-month', 'three-month', 'four-month', 'six-month',\
            \ or 'yearly'."
          example: monthly
          type: string
        activate_by_source_order:
          description: "Indicates if the subscription will be actvated considering\
            \ the placed source order as its first run, default to true."
          example: true
          type: boolean
        customer_email:
          description: "The email address of the customer, if any, associated to the\
            \ source order."
          example: john@example.com
          type: string
        starts_at:
          description: The activation date/time of this subscription.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this subscription (must be after
            starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        next_run_at:
          description: The date/time of the subscription next run.
          example: 2018-01-01T12:00:00.000Z
          type: string
        occurrencies:
          description: The number of times this subscription has run.
          example: 2
          type: integer
        errors_count:
          description: "Indicates the number of subscription errors, if any."
          example: 3
          type: integer
        succeeded_on_last_run:
          description: Indicates if the subscription has succeeded on its last run.
          example: true
          type: boolean
        options:
          description: "The subscription options used to create the order copy (check\
            \ order_copies for more information). For subscriptions the `place_target_order`\
            \ is enabled by default, specify custom options to overwrite it."
          example:
            place_target_order: false
          type: object
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    orderSubscription_data_relationships_order_copies:
      properties:
        type:
          default: order_copies
          description: The resource's type
          example: order_copies
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    orderSubscription_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        source_order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        order_copies:
          $ref: '#/components/schemas/orderSubscription_data_relationships_order_copies'
        orders:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
      type: object
    orderSubscription_data:
      properties:
        type:
          default: order_subscriptions
          description: The resource's type
          example: order_subscriptions
          type: string
        attributes:
          $ref: '#/components/schemas/orderSubscription_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderSubscription_data_relationships'
      required:
      - attributes
      - type
      type: object
    orderSubscriptionCreate_data_attributes:
      properties:
        frequency:
          description: "The frequency of the subscription. One of 'hourly', 'daily',\
            \ 'weekly', 'monthly', 'two-month', 'three-month', 'four-month', 'six-month',\
            \ or 'yearly'."
          example: monthly
          type: string
        activate_by_source_order:
          description: "Indicates if the subscription will be actvated considering\
            \ the placed source order as its first run, default to true."
          example: true
          type: boolean
        starts_at:
          description: The activation date/time of this subscription.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this subscription (must be after
            starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        options:
          description: "The subscription options used to create the order copy (check\
            \ order_copies for more information). For subscriptions the `place_target_order`\
            \ is enabled by default, specify custom options to overwrite it."
          example:
            place_target_order: false
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - frequency
      type: object
    orderSubscriptionCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        source_order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
      required:
      - source_order
      type: object
    orderSubscriptionCreate_data:
      properties:
        type:
          default: order_subscriptions
          description: The resource's type
          example: order_subscriptions
          type: string
        attributes:
          $ref: '#/components/schemas/orderSubscriptionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderSubscriptionCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    orderSubscriptionUpdate_data_attributes:
      properties:
        expires_at:
          description: The expiration date/time of this subscription (must be after
            starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        _activate:
          description: Send this attribute if you want to mark this subscription as
            active.
          example: true
          type: boolean
        _deactivate:
          description: Send this attribute if you want to mark this subscription as
            inactive.
          example: true
          type: boolean
        _cancel:
          description: Send this attribute if you want to mark this subscription as
            cancelled.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    orderSubscriptionUpdate_data:
      properties:
        type:
          default: order_subscriptions
          description: The resource's type
          example: order_subscriptions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/orderSubscriptionUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    orderValidationRule_data:
      properties:
        type:
          default: order_validation_rules
          description: The resource's type
          example: order_validation_rules
          type: string
        attributes:
          $ref: '#/components/schemas/billingInfoValidationRule_data_attributes'
        relationships:
          $ref: '#/components/schemas/billingInfoValidationRule_data_relationships'
      required:
      - attributes
      - type
      type: object
    order_data_attributes:
      properties:
        number:
          description: Unique identifier for the order (numeric).
          example: 1234
          type: integer
        autorefresh:
          description: Save this attribute as 'false' if you want prevent the order
            to be refreshed automatically at each change (much faster).
          example: true
          type: boolean
        status:
          description: "The order status. One of 'draft' (default), 'pending', 'placed',\
            \ 'approved', or 'cancelled'."
          example: draft
          type: string
        payment_status:
          description: "The order's payment status. One of 'unpaid' (default), 'authorized',\
            \ 'paid', 'voided', or 'refunded'."
          example: unpaid
          type: string
        fulfillment_status:
          description: "The order's fulfillment status. One of 'unfulfilled' (default),\
            \ 'in_progress', or 'fulfilled'."
          example: unfulfilled
          type: string
        guest:
          description: Indicates if the order has been placed as guest.
          example: true
          type: boolean
        editable:
          description: Indicates if the order can be edited.
          example: true
          type: boolean
        customer_email:
          description: "The email address of the associated customer. When creating\
            \ or updating an order, this is a shortcut to find or create the associated\
            \ customer by email."
          example: john@example.com
          type: string
        language_code:
          description: "The preferred language code (ISO 639-1) to be used when communicating\
            \ with the customer. This can be useful when sending the order to 3rd\
            \ party marketing tools and CRMs. If the language is supported, the hosted\
            \ checkout will be localized accordingly."
          example: it
          type: string
        currency_code:
          description: "The international 3-letter currency code as defined by the\
            \ ISO 4217 standard, automatically inherited from the order's market."
          example: EUR
          type: string
        tax_included:
          description: "Indicates if taxes are included in the order amounts, automatically\
            \ inherited from the order's price list."
          example: true
          type: boolean
        tax_rate:
          description: The tax rate for this order (if calculated).
          example: 0.22
          type: number
        freight_taxable:
          description: Indicates if taxes are applied to shipping costs.
          example: true
          type: boolean
        requires_billing_info:
          description: Indicates if the billing address associated to this order requires
            billing info to be present.
          example: false
          type: boolean
        country_code:
          description: "The international 2-letter country code as defined by the\
            \ ISO 3166-1 standard, automatically inherited from the order's shipping\
            \ address."
          example: IT
          type: string
        shipping_country_code_lock:
          description: "The country code that you want the shipping address to be\
            \ locked to. This can be useful to make sure the shipping address belongs\
            \ to a given shipping country, e.g. the one selected in a country selector\
            \ page."
          example: IT
          type: string
        coupon_code:
          description: "The coupon code to be used for the order. If valid, it triggers\
            \ a promotion adding a discount line item to the order."
          example: SUMMERDISCOUNT
          type: string
        gift_card_code:
          description: "The gift card code (at least the first 8 characters) to be\
            \ used for the order. If valid, it uses the gift card balance to pay for\
            \ the order."
          example: cc92c23e-967e-48b2-a323-59add603301f
          type: string
        gift_card_or_coupon_code:
          description: "The gift card or coupon code (at least the first 8 characters)\
            \ to be used for the order. If a gift card mathes, it uses the gift card\
            \ balance to pay for the order. Otherwise it tries to find a valid coupon\
            \ code and applies the associated discount."
          example: cc92c23e-967e-48b2-a323-59add603301f
          type: string
        subtotal_amount_cents:
          description: "The sum of all the sku line items total amounts, in cents."
          example: 5000
          type: integer
        subtotal_amount_float:
          description: "The sum of all the sku line items total amounts, float."
          example: 50.0
          type: number
        formatted_subtotal_amount:
          description: "The sum of all the sku line items total amounts, formatted."
          example: "€50,00"
          type: string
        shipping_amount_cents:
          description: "The sum of all the shipping costs, in cents."
          example: 1200
          type: integer
        shipping_amount_float:
          description: "The sum of all the shipping costs, float."
          example: 12.0
          type: number
        formatted_shipping_amount:
          description: "The sum of all the shipping costs, formatted."
          example: "€12,00"
          type: string
        payment_method_amount_cents:
          description: "The payment method costs, in cents."
          example: 0
          type: integer
        payment_method_amount_float:
          description: "The payment method costs, float."
          example: 0.0
          type: number
        formatted_payment_method_amount:
          description: "The payment method costs, formatted."
          example: "€0,00"
          type: string
        discount_amount_cents:
          description: "The sum of all the discounts applied to the order, in cents\
            \ (negative amount)."
          example: -500
          type: integer
        discount_amount_float:
          description: "The sum of all the discounts applied to the order, float."
          example: -5.0
          type: number
        formatted_discount_amount:
          description: "The sum of all the discounts applied to the order, formatted."
          example: "-€5,00"
          type: string
        adjustment_amount_cents:
          description: "The sum of all the adjustments applied to the order, in cents."
          example: 1500
          type: integer
        adjustment_amount_float:
          description: "The sum of all the adjustments applied to the order, float."
          example: 15.0
          type: number
        formatted_adjustment_amount:
          description: "The sum of all the adjustments applied to the order, formatted."
          example: "€15,00"
          type: string
        gift_card_amount_cents:
          description: "The sum of all the gift_cards applied to the order, in cents."
          example: 1500
          type: integer
        gift_card_amount_float:
          description: "The sum of all the gift_cards applied to the order, float."
          example: 15.0
          type: number
        formatted_gift_card_amount:
          description: "The sum of all the gift_cards applied to the order, formatted."
          example: "€15,00"
          type: string
        total_tax_amount_cents:
          description: "The sum of all the taxes applied to the order, in cents."
          example: 1028
          type: integer
        total_tax_amount_float:
          description: "The sum of all the taxes applied to the order, float."
          example: 10.28
          type: number
        formatted_total_tax_amount:
          description: "The sum of all the taxes applied to the order, formatted."
          example: "€10,28"
          type: string
        subtotal_tax_amount_cents:
          description: "The taxes applied to the order's subtotal, in cents."
          example: 902
          type: integer
        subtotal_tax_amount_float:
          description: "The taxes applied to the order's subtotal, float."
          example: 9.02
          type: number
        formatted_subtotal_tax_amount:
          description: "The taxes applied to the order's subtotal, formatted."
          example: "€9,02"
          type: string
        shipping_tax_amount_cents:
          description: "The taxes applied to the order's shipping costs, in cents."
          example: 216
          type: integer
        shipping_tax_amount_float:
          description: "The taxes applied to the order's shipping costs, float."
          example: 2.16
          type: number
        formatted_shipping_tax_amount:
          description: "The taxes applied to the order's shipping costs, formatted."
          example: "€2,16"
          type: string
        payment_method_tax_amount_cents:
          description: "The taxes applied to the order's payment method costs, in\
            \ cents."
          example: 0
          type: integer
        payment_method_tax_amount_float:
          description: "The taxes applied to the order's payment method costs, float."
          example: 0.0
          type: number
        formatted_payment_method_tax_amount:
          description: "The taxes applied to the order's payment method costs, formatted."
          example: "€0,00"
          type: string
        adjustment_tax_amount_cents:
          description: "The taxes applied to the order adjustments, in cents."
          example: 900
          type: integer
        adjustment_tax_amount_float:
          description: "The taxes applied to the order adjustments, float."
          example: 9.0
          type: number
        formatted_adjustment_tax_amount:
          description: "The taxes applied to the order adjustments, formatted."
          example: "€9,00"
          type: string
        total_amount_cents:
          description: "The order's total amount, in cents."
          example: 5700
          type: integer
        total_amount_float:
          description: "The order's total amount, float."
          example: 57.0
          type: number
        formatted_total_amount:
          description: "The order's total amount, formatted."
          example: "€57,00"
          type: string
        total_taxable_amount_cents:
          description: "The order's total taxable amount, in cents (equal to total_amount_cents\
            \ when prices don't include taxes)."
          example: 4672
          type: integer
        total_taxable_amount_float:
          description: "The order's total taxable amount, float."
          example: 46.72
          type: number
        formatted_total_taxable_amount:
          description: "The order's total taxable amount, formatted."
          example: "€46,72"
          type: string
        subtotal_taxable_amount_cents:
          description: "The order's subtotal taxable amount, in cents (equal to subtotal_amount_cents\
            \ when prices don't include taxes)."
          example: 4098
          type: integer
        subtotal_taxable_amount_float:
          description: "The order's subtotal taxable amount, float."
          example: 40.98
          type: number
        formatted_subtotal_taxable_amount:
          description: "The order's subtotal taxable amount, formatted."
          example: "€40,98"
          type: string
        shipping_taxable_amount_cents:
          description: "The order's shipping taxable amount, in cents (equal to shipping_amount_cents\
            \ when prices don't include taxes)."
          example: 984
          type: integer
        shipping_taxable_amount_float:
          description: "The order's shipping taxable amount, float."
          example: 9.84
          type: number
        formatted_shipping_taxable_amount:
          description: "The order's shipping taxable amount, formatted."
          example: "€9,84"
          type: string
        payment_method_taxable_amount_cents:
          description: "The order's payment method taxable amount, in cents (equal\
            \ to payment_method_amount_cents when prices don't include taxes)."
          example: 0
          type: integer
        payment_method_taxable_amount_float:
          description: "The order's payment method taxable amount, float."
          example: 0.0
          type: number
        formatted_payment_method_taxable_amount:
          description: "The order's payment method taxable amount, formatted."
          example: "€0,00"
          type: string
        adjustment_taxable_amount_cents:
          description: "The order's adjustment taxable amount, in cents (equal to\
            \ discount_adjustment_cents when prices don't include taxes)."
          example: 120
          type: integer
        adjustment_taxable_amount_float:
          description: "The order's adjustment taxable amount, float."
          example: 1.2
          type: number
        formatted_adjustment_taxable_amount:
          description: "The order's adjustment taxable amount, formatted."
          example: "€1,20"
          type: string
        total_amount_with_taxes_cents:
          description: "The order's total amount (when prices include taxes) or the\
            \ order's total + taxes amount (when prices don't include taxes, e.g.\
            \ US Markets or B2B)."
          example: 5700
          type: integer
        total_amount_with_taxes_float:
          description: "The order's total amount with taxes, float."
          example: 57.0
          type: number
        formatted_total_amount_with_taxes:
          description: "The order's total amount with taxes, formatted."
          example: "€57,00"
          type: string
        fees_amount_cents:
          description: "The fees amount that is applied by Commerce Layer, in cents."
          example: 0
          type: integer
        fees_amount_float:
          description: "The fees amount that is applied by Commerce Layer, float."
          example: 0.0
          type: number
        formatted_fees_amount:
          description: "The fees amount that is applied by Commerce Layer, formatted."
          example: "€0,00"
          type: string
        duty_amount_cents:
          description: "The duty amount that is calculated by external services, in\
            \ cents."
          example: 0
          type: integer
        duty_amount_float:
          description: "The duty amount that is calculated by external services, float."
          example: 0.0
          type: number
        formatted_duty_amount:
          description: "The duty amount that is calculated by external services, formatted."
          example: "€0,00"
          type: string
        skus_count:
          description: The total number of skus in the order's line items. This can
            be useful to display a preview of the customer shopping cart content.
          example: 2
          type: integer
        line_item_options_count:
          description: The total number of line item options. This can be useful to
            display a preview of the customer shopping cart content.
          example: 1
          type: integer
        shipments_count:
          description: The total number of shipments. This can be useful to manage
            the shipping method(s) selection during checkout.
          example: 1
          type: integer
        payment_source_details:
          description: An object that contains the shareable details of the order's
            payment source.
          example:
            foo: bar
          type: object
        token:
          description: A unique token that can be shared more securely instead of
            the order's id.
          example: 1c0994cc4e996e8c6ee56a2198f66f3c
          type: string
        cart_url:
          description: "The cart url on your site. If present, it will be used on\
            \ our hosted checkout application."
          example: https://yourdomain.com/cart
          type: string
        return_url:
          description: "The return url on your site. If present, it will be used on\
            \ our hosted checkout application."
          example: https://yourdomain.com/
          type: string
        terms_url:
          description: "The terms and conditions url on your site. If present, it\
            \ will be used on our hosted checkout application."
          example: https://yourdomain.com/terms
          type: string
        privacy_url:
          description: "The privacy policy url on your site. If present, it will be\
            \ used on our hosted checkout application."
          example: https://yourdomain.com/privacy
          type: string
        checkout_url:
          description: The checkout url that was automatically generated for the order.
            Send the customers to this url to let them checkout the order securely
            on our hosted checkout application.
          example: https://yourdomain.commercelayer.io/checkout/1c0994cc4e996e8c6ee56a2198f66f3c
          type: string
        placed_at:
          description: Time at which the order was placed.
          example: 2018-01-01T12:00:00.000Z
          type: string
        approved_at:
          description: Time at which the order was approved.
          example: 2018-01-01T12:00:00.000Z
          type: string
        cancelled_at:
          description: Time at which the order was cancelled.
          example: 2018-01-01T12:00:00.000Z
          type: string
        payment_updated_at:
          description: Time at which the order's payment status was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        fulfillment_updated_at:
          description: Time at which the order's fulfillment status was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        refreshed_at:
          description: Last time at which an order was manually refreshed.
          example: 2018-01-01T12:00:00.000Z
          type: string
        archived_at:
          description: Time at which the resource has been archived.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: Time at which an order is marked for cleanup. Any order will
            start with a default expire time of 2 months. Expiration is reset once
            a line item is added to the order.
          example: 2018-01-01T12:00:00.000Z
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    order_data_relationships_available_free_bundles:
      properties:
        type:
          default: bundles
          description: The resource's type
          example: bundles
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    order_data_relationships_shipments:
      properties:
        type:
          default: shipments
          description: The resource's type
          example: shipments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    order_data_relationships_transactions:
      oneOf:
      - $ref: '#/components/schemas/authorization'
      - $ref: '#/components/schemas/void'
      - $ref: '#/components/schemas/capture'
      - $ref: '#/components/schemas/refund'
      properties:
        type:
          default: authorizations
          description: The resource's type
          enum:
          - authorizations
          - voids
          - captures
          - refunds
          example: authorizations
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    order_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        shipping_address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        billing_address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        available_payment_methods:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        available_customer_payment_sources:
          $ref: '#/components/schemas/customer_data_relationships_customer_payment_sources'
        available_free_skus:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        available_free_bundles:
          $ref: '#/components/schemas/order_data_relationships_available_free_bundles'
        payment_method:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        payment_source:
          $ref: '#/components/schemas/customerPaymentSource_data_relationships_payment_source'
        line_items:
          $ref: '#/components/schemas/lineItemOption_data_relationships_line_item'
        shipments:
          $ref: '#/components/schemas/order_data_relationships_shipments'
        transactions:
          $ref: '#/components/schemas/order_data_relationships_transactions'
        authorizations:
          $ref: '#/components/schemas/capture_data_relationships_reference_authorization'
        captures:
          $ref: '#/components/schemas/authorization_data_relationships_captures'
        voids:
          $ref: '#/components/schemas/authorization_data_relationships_voids'
        refunds:
          $ref: '#/components/schemas/capture_data_relationships_refunds'
        order_subscriptions:
          $ref: '#/components/schemas/customer_data_relationships_order_subscriptions'
        order_copies:
          $ref: '#/components/schemas/orderSubscription_data_relationships_order_copies'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    order_data:
      properties:
        type:
          default: orders
          description: The resource's type
          example: orders
          type: string
        attributes:
          $ref: '#/components/schemas/order_data_attributes'
        relationships:
          $ref: '#/components/schemas/order_data_relationships'
      required:
      - attributes
      - type
      type: object
    orderCreate_data_attributes:
      properties:
        autorefresh:
          description: Save this attribute as 'false' if you want prevent the order
            to be refreshed automatically at each change (much faster).
          example: true
          type: boolean
        guest:
          description: Indicates if the order has been placed as guest.
          example: true
          type: boolean
        customer_email:
          description: "The email address of the associated customer. When creating\
            \ or updating an order, this is a shortcut to find or create the associated\
            \ customer by email."
          example: john@example.com
          type: string
        customer_password:
          description: "The password of the associated customer. When creating or\
            \ updating an order, this is a shortcut to sign up the associated customer."
          example: secret
          type: string
        language_code:
          description: "The preferred language code (ISO 639-1) to be used when communicating\
            \ with the customer. This can be useful when sending the order to 3rd\
            \ party marketing tools and CRMs. If the language is supported, the hosted\
            \ checkout will be localized accordingly."
          example: it
          type: string
        shipping_country_code_lock:
          description: "The country code that you want the shipping address to be\
            \ locked to. This can be useful to make sure the shipping address belongs\
            \ to a given shipping country, e.g. the one selected in a country selector\
            \ page."
          example: IT
          type: string
        coupon_code:
          description: "The coupon code to be used for the order. If valid, it triggers\
            \ a promotion adding a discount line item to the order."
          example: SUMMERDISCOUNT
          type: string
        gift_card_code:
          description: "The gift card code (at least the first 8 characters) to be\
            \ used for the order. If valid, it uses the gift card balance to pay for\
            \ the order."
          example: cc92c23e-967e-48b2-a323-59add603301f
          type: string
        gift_card_or_coupon_code:
          description: "The gift card or coupon code (at least the first 8 characters)\
            \ to be used for the order. If a gift card mathes, it uses the gift card\
            \ balance to pay for the order. Otherwise it tries to find a valid coupon\
            \ code and applies the associated discount."
          example: cc92c23e-967e-48b2-a323-59add603301f
          type: string
        cart_url:
          description: "The cart url on your site. If present, it will be used on\
            \ our hosted checkout application."
          example: https://yourdomain.com/cart
          type: string
        return_url:
          description: "The return url on your site. If present, it will be used on\
            \ our hosted checkout application."
          example: https://yourdomain.com/
          type: string
        terms_url:
          description: "The terms and conditions url on your site. If present, it\
            \ will be used on our hosted checkout application."
          example: https://yourdomain.com/terms
          type: string
        privacy_url:
          description: "The privacy policy url on your site. If present, it will be\
            \ used on our hosted checkout application."
          example: https://yourdomain.com/privacy
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    orderCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        shipping_address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        billing_address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        payment_method:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        payment_source:
          $ref: '#/components/schemas/customerPaymentSource_data_relationships_payment_source'
      type: object
    orderCreate_data:
      properties:
        type:
          default: orders
          description: The resource's type
          example: orders
          type: string
        attributes:
          $ref: '#/components/schemas/orderCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    orderUpdate_data_attributes:
      properties:
        autorefresh:
          description: Save this attribute as 'false' if you want prevent the order
            to be refreshed automatically at each change (much faster).
          example: true
          type: boolean
        guest:
          description: Indicates if the order has been placed as guest.
          example: true
          type: boolean
        customer_email:
          description: "The email address of the associated customer. When creating\
            \ or updating an order, this is a shortcut to find or create the associated\
            \ customer by email."
          example: john@example.com
          type: string
        customer_password:
          description: "The password of the associated customer. When creating or\
            \ updating an order, this is a shortcut to sign up the associated customer."
          example: secret
          type: string
        language_code:
          description: "The preferred language code (ISO 639-1) to be used when communicating\
            \ with the customer. This can be useful when sending the order to 3rd\
            \ party marketing tools and CRMs. If the language is supported, the hosted\
            \ checkout will be localized accordingly."
          example: it
          type: string
        shipping_country_code_lock:
          description: "The country code that you want the shipping address to be\
            \ locked to. This can be useful to make sure the shipping address belongs\
            \ to a given shipping country, e.g. the one selected in a country selector\
            \ page."
          example: IT
          type: string
        coupon_code:
          description: "The coupon code to be used for the order. If valid, it triggers\
            \ a promotion adding a discount line item to the order."
          example: SUMMERDISCOUNT
          type: string
        gift_card_code:
          description: "The gift card code (at least the first 8 characters) to be\
            \ used for the order. If valid, it uses the gift card balance to pay for\
            \ the order."
          example: cc92c23e-967e-48b2-a323-59add603301f
          type: string
        gift_card_or_coupon_code:
          description: "The gift card or coupon code (at least the first 8 characters)\
            \ to be used for the order. If a gift card mathes, it uses the gift card\
            \ balance to pay for the order. Otherwise it tries to find a valid coupon\
            \ code and applies the associated discount."
          example: cc92c23e-967e-48b2-a323-59add603301f
          type: string
        cart_url:
          description: "The cart url on your site. If present, it will be used on\
            \ our hosted checkout application."
          example: https://yourdomain.com/cart
          type: string
        return_url:
          description: "The return url on your site. If present, it will be used on\
            \ our hosted checkout application."
          example: https://yourdomain.com/
          type: string
        terms_url:
          description: "The terms and conditions url on your site. If present, it\
            \ will be used on our hosted checkout application."
          example: https://yourdomain.com/terms
          type: string
        privacy_url:
          description: "The privacy policy url on your site. If present, it will be\
            \ used on our hosted checkout application."
          example: https://yourdomain.com/privacy
          type: string
        _archive:
          description: Send this attribute if you want to archive the order.
          example: true
          type: boolean
        _unarchive:
          description: Send this attribute if you want to unarchive the order.
          example: true
          type: boolean
        _place:
          description: Send this attribute if you want to place the order.
          example: true
          type: boolean
        _cancel:
          description: Send this attribute if you want to cancel a placed order. The
            order's authorization will be automatically voided.
          example: true
          type: boolean
        _approve:
          description: Send this attribute if you want to approve a placed order.
          example: true
          type: boolean
        _approve_and_capture:
          description: Send this attribute if you want to approve and capture a placed
            order.
          example: true
          type: boolean
        _authorize:
          description: Send this attribute if you want to authorize the order's payment
            source.
          example: true
          type: boolean
        _authorization_amount_cents:
          description: "The authorization amount, in cents."
          example: 500
          type: integer
        _capture:
          description: Send this attribute if you want to capture an approved order.
          example: true
          type: boolean
        _refund:
          description: Send this attribute if you want to refund a captured order.
          example: true
          type: boolean
        _update_taxes:
          description: Send this attribute if you want to force tax calculation for
            this order (a tax calculator must be associated to the order's market).
          example: true
          type: boolean
        _nullify_payment_source:
          description: Send this attribute if you want to nullify the payment source
            for this order.
          example: false
          type: boolean
        _billing_address_clone_id:
          description: The id of the address that you want to clone to create the
            order's billing address.
          example: "1234"
          type: string
        _shipping_address_clone_id:
          description: The id of the address that you want to clone to create the
            order's shipping address.
          example: "1234"
          type: string
        _customer_payment_source_id:
          description: The id of the customer payment source (i.e. credit card) that
            you want to use as the order's payment source.
          example: "1234"
          type: string
        _shipping_address_same_as_billing:
          description: Send this attribute if you want the shipping address to be
            cloned from the order's billing address.
          example: true
          type: boolean
        _billing_address_same_as_shipping:
          description: Send this attribute if you want the billing address to be cloned
            from the order's shipping address.
          example: true
          type: boolean
        _commit_invoice:
          description: Send this attribute if you want commit the sales tax invoice
            to the associated tax calculator (currently supported by Avalara).
          example: true
          type: boolean
        _refund_invoice:
          description: Send this attribute if you want refund the sales tax invoice
            to the associated tax calculator (currently supported by Avalara).
          example: true
          type: boolean
        _save_payment_source_to_customer_wallet:
          description: Send this attribute if you want the order's payment source
            to be saved in the customer's wallet as a customer payment source.
          example: true
          type: boolean
        _save_shipping_address_to_customer_address_book:
          description: Send this attribute if you want the order's shipping address
            to be saved in the customer's address book as a customer address.
          example: true
          type: boolean
        _save_billing_address_to_customer_address_book:
          description: Send this attribute if you want the order's billing address
            to be saved in the customer's address book as a customer address.
          example: true
          type: boolean
        _refresh:
          description: Send this attribute if you want to manually refresh the order.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    orderUpdate_data:
      properties:
        type:
          default: orders
          description: The resource's type
          example: orders
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/orderUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    organization_data_attributes:
      properties:
        name:
          description: The organization's internal name.
          example: The Blue Brand
          type: string
        slug:
          description: The organization's slug name.
          example: the-blue-brand
          type: string
        domain:
          description: The organization's domain.
          example: the-blue-brand.commercelayer.io
          type: string
        support_phone:
          description: The organization's support phone.
          example: +01 30800857
          type: string
        support_email:
          description: The organization's support email.
          example: support@bluebrand.com
          type: string
        logo_url:
          description: The URL to the organization's logo.
          example: https://bluebrand.com/img/logo.svg
          type: string
        favicon_url:
          description: The URL to the organization's favicon.
          example: https://bluebrand.com/img/favicon.ico
          type: string
        primary_color:
          description: The organization's primary color.
          example: '#C8984E'
          type: string
        contrast_color:
          description: The organization's contrast color.
          example: '#FFFFCC'
          type: string
        gtm_id:
          description: The organization's Google Tag Manager ID.
          example: GTM-5FJXX6
          type: string
        gtm_id_test:
          description: The organization's Google Tag Manager ID for test.
          example: GTM-5FJXX7
          type: string
        discount_disabled:
          description: Indicates if organization has discount disabled.
          example: false
          type: boolean
        account_disabled:
          description: Indicates if organization has account disabled.
          example: false
          type: boolean
        acceptance_disabled:
          description: Indicates if organization has acceptance disabled.
          example: false
          type: boolean
        max_concurrent_promotions:
          description: The maximum number of active concurrent promotions allowed
            for your organization.
          example: 10
          type: integer
        max_concurrent_imports:
          description: The maximum number of concurrent imports allowed for your organization.
          example: 30
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    organization_data:
      properties:
        type:
          default: organization
          description: The resource's type
          example: organization
          type: string
        attributes:
          $ref: '#/components/schemas/organization_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    package_data_attributes:
      properties:
        name:
          description: Unique name for the package
          example: Large (60x40x30)
          type: string
        code:
          description: The package identifying code
          example: YYYY 2000
          type: string
        length:
          description: "The package length, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 40.0
          type: number
        width:
          description: "The package width, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 40.0
          type: number
        height:
          description: "The package height, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 25.0
          type: number
        unit_of_length:
          description: "The unit of length. Can be one of 'cm', or 'in'."
          example: gr
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    package_data_relationships_parcels:
      properties:
        type:
          default: parcels
          description: The resource's type
          example: parcels
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    package_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        parcels:
          $ref: '#/components/schemas/package_data_relationships_parcels'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    package_data:
      properties:
        type:
          default: packages
          description: The resource's type
          example: packages
          type: string
        attributes:
          $ref: '#/components/schemas/package_data_attributes'
        relationships:
          $ref: '#/components/schemas/package_data_relationships'
      required:
      - attributes
      - type
      type: object
    packageCreate_data_attributes:
      properties:
        name:
          description: Unique name for the package
          example: Large (60x40x30)
          type: string
        code:
          description: The package identifying code
          example: YYYY 2000
          type: string
        length:
          description: "The package length, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 40.0
          type: number
        width:
          description: "The package width, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 40.0
          type: number
        height:
          description: "The package height, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 25.0
          type: number
        unit_of_length:
          description: "The unit of length. Can be one of 'cm', or 'in'."
          example: gr
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - height
      - length
      - name
      - unit_of_length
      - width
      type: object
    packageCreate_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
      required:
      - stock_location
      type: object
    packageCreate_data:
      properties:
        type:
          default: packages
          description: The resource's type
          example: packages
          type: string
        attributes:
          $ref: '#/components/schemas/packageCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/packageCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    packageUpdate_data_attributes:
      properties:
        name:
          description: Unique name for the package
          example: Large (60x40x30)
          type: string
        code:
          description: The package identifying code
          example: YYYY 2000
          type: string
        length:
          description: "The package length, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 40.0
          type: number
        width:
          description: "The package width, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 40.0
          type: number
        height:
          description: "The package height, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 25.0
          type: number
        unit_of_length:
          description: "The unit of length. Can be one of 'cm', or 'in'."
          example: gr
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    packageUpdate_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
      type: object
    packageUpdate_data:
      properties:
        type:
          default: packages
          description: The resource's type
          example: packages
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/packageUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/packageUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    parcelLineItem_data_attributes:
      properties:
        sku_code:
          description: The code of the sku of the associated shipment_line_item.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The parcel line item quantity.
          example: 4
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    parcelLineItem_data_relationships:
      properties:
        parcel:
          $ref: '#/components/schemas/package_data_relationships_parcels'
        stock_line_item:
          $ref: '#/components/schemas/lineItem_data_relationships_stock_line_items'
        shipment_line_item:
          $ref: '#/components/schemas/lineItem_data_relationships_shipment_line_items'
      type: object
    parcelLineItem_data:
      properties:
        type:
          default: parcel_line_items
          description: The resource's type
          example: parcel_line_items
          type: string
        attributes:
          $ref: '#/components/schemas/parcelLineItem_data_attributes'
        relationships:
          $ref: '#/components/schemas/parcelLineItem_data_relationships'
      required:
      - attributes
      - type
      type: object
    parcelLineItemCreate_data_attributes:
      properties:
        sku_code:
          description: The code of the sku of the associated shipment_line_item.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The parcel line item quantity.
          example: 4
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - quantity
      type: object
    parcelLineItemCreate_data_relationships:
      properties:
        parcel:
          $ref: '#/components/schemas/package_data_relationships_parcels'
        stock_line_item:
          $ref: '#/components/schemas/lineItem_data_relationships_stock_line_items'
        shipment_line_item:
          $ref: '#/components/schemas/lineItem_data_relationships_shipment_line_items'
      required:
      - parcel
      - stock_line_item
      type: object
    parcelLineItemCreate_data:
      properties:
        type:
          default: parcel_line_items
          description: The resource's type
          example: parcel_line_items
          type: string
        attributes:
          $ref: '#/components/schemas/parcelLineItemCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/parcelLineItemCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    parcelLineItemUpdate_data:
      properties:
        type:
          default: parcel_line_items
          description: The resource's type
          example: parcel_line_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    parcel_data_attributes:
      properties:
        number:
          description: Unique identifier for the parcel
          example: '#1234/S/001/P/001'
          type: string
        weight:
          description: "The parcel weight, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 1000.0
          type: number
        unit_of_weight:
          description: "The unit of weight. Can be one of 'gr', or 'oz'."
          example: gr
          type: string
        eel_pfc:
          description: "When shipping outside the US, you need to provide either an\
            \ Exemption and Exclusion Legend (EEL) code or a Proof of Filing Citation\
            \ (PFC). Which you need is based on the value of the goods being shipped.\
            \ Value can be one of \"EEL\" o \"PFC\"."
          example: EEL
          type: string
        contents_type:
          description: "The type of item you are sending. Can be one of 'merchandise',\
            \ 'gift', 'documents', 'returned_goods', 'sample', or 'other'."
          example: merchandise
          type: string
        contents_explanation:
          description: "If you specify 'other' in the 'contents_type' attribute, you\
            \ must supply a brief description in this attribute."
          example: ""
          type: string
        customs_certify:
          description: Indicates if the provided information is accurate
          example: false
          type: boolean
        customs_signer:
          description: This is the name of the person who is certifying that the information
            provided on the customs form is accurate. Use a name of the person in
            your organization who is responsible for this.
          example: John Doe
          type: string
        non_delivery_option:
          description: "In case the shipment cannot be delivered, this option tells\
            \ the carrier what you want to happen to the parcel. You can pass either\
            \ 'return', or 'abandon'. The value defaults to 'return'. If you pass\
            \ 'abandon', you will not receive the parcel back if it cannot be delivered."
          example: return
          type: string
        restriction_type:
          description: "Describes if your parcel requires any special treatment or\
            \ quarantine when entering the country. Can be one of 'none', 'other',\
            \ 'quarantine', or 'sanitary_phytosanitary_inspection'."
          example: none
          type: string
        restriction_comments:
          description: "If you specify 'other' in the restriction type, you must supply\
            \ a brief description of what is required."
          example: ""
          type: string
        customs_info_required:
          description: Indicates if the parcel requires customs info to get the shipping
            rates.
          example: false
          type: boolean
        shipping_label_url:
          description: "The shipping label url, ready to be downloaded and printed."
          example: https://bucket.s3-us-west-2.amazonaws.com/files/postage_label/20180101/123.pdf
          type: string
        shipping_label_file_type:
          description: "The shipping label file type. One of 'application/pdf', 'application/zpl',\
            \ 'application/epl2', or 'image/png'."
          example: application/pdf
          type: string
        shipping_label_size:
          description: The shipping label size.
          example: 4x7
          type: string
        shipping_label_resolution:
          description: The shipping label resolution.
          example: "200"
          type: string
        tracking_number:
          description: The tracking number associated to this parcel.
          example: 1Z4V2A000000000000
          type: string
        tracking_status:
          description: "The tracking status for this parcel, automatically updated\
            \ in real time by the shipping carrier."
          example: delivered
          type: string
        tracking_status_detail:
          description: "Additional information about the tracking status, automatically\
            \ updated in real time by the shipping carrier."
          example: arrived_at_destination
          type: string
        tracking_status_updated_at:
          description: Time at which the parcel's tracking status was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        tracking_details:
          description: "The parcel's full tracking history, automatically updated\
            \ in real time by the shipping carrier."
          example: ""
          type: string
        carrier_weight_oz:
          description: The weight of the parcel as measured by the carrier in ounces
            (if available)
          example: "42.32"
          type: string
        signed_by:
          description: The name of the person who signed for the parcel (if available)
          example: John Smith
          type: string
        incoterm:
          description: The type of Incoterm (if available).
          example: EXW
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    parcel_data_relationships_package:
      properties:
        type:
          default: packages
          description: The resource's type
          example: packages
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    parcel_data_relationships_parcel_line_items:
      properties:
        type:
          default: parcel_line_items
          description: The resource's type
          example: parcel_line_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    parcel_data_relationships:
      properties:
        shipment:
          $ref: '#/components/schemas/order_data_relationships_shipments'
        package:
          $ref: '#/components/schemas/parcel_data_relationships_package'
        parcel_line_items:
          $ref: '#/components/schemas/parcel_data_relationships_parcel_line_items'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    parcel_data:
      properties:
        type:
          default: parcels
          description: The resource's type
          example: parcels
          type: string
        attributes:
          $ref: '#/components/schemas/parcel_data_attributes'
        relationships:
          $ref: '#/components/schemas/parcel_data_relationships'
      required:
      - attributes
      - type
      type: object
    parcelCreate_data_attributes:
      properties:
        weight:
          description: "The parcel weight, used to automatically calculate the tax\
            \ rates from the available carrier accounts."
          example: 1000.0
          type: number
        unit_of_weight:
          description: "The unit of weight. Can be one of 'gr', or 'oz'."
          example: gr
          type: string
        eel_pfc:
          description: "When shipping outside the US, you need to provide either an\
            \ Exemption and Exclusion Legend (EEL) code or a Proof of Filing Citation\
            \ (PFC). Which you need is based on the value of the goods being shipped.\
            \ Value can be one of \"EEL\" o \"PFC\"."
          example: EEL
          type: string
        contents_type:
          description: "The type of item you are sending. Can be one of 'merchandise',\
            \ 'gift', 'documents', 'returned_goods', 'sample', or 'other'."
          example: merchandise
          type: string
        contents_explanation:
          description: "If you specify 'other' in the 'contents_type' attribute, you\
            \ must supply a brief description in this attribute."
          example: ""
          type: string
        customs_certify:
          description: Indicates if the provided information is accurate
          example: false
          type: boolean
        customs_signer:
          description: This is the name of the person who is certifying that the information
            provided on the customs form is accurate. Use a name of the person in
            your organization who is responsible for this.
          example: John Doe
          type: string
        non_delivery_option:
          description: "In case the shipment cannot be delivered, this option tells\
            \ the carrier what you want to happen to the parcel. You can pass either\
            \ 'return', or 'abandon'. The value defaults to 'return'. If you pass\
            \ 'abandon', you will not receive the parcel back if it cannot be delivered."
          example: return
          type: string
        restriction_type:
          description: "Describes if your parcel requires any special treatment or\
            \ quarantine when entering the country. Can be one of 'none', 'other',\
            \ 'quarantine', or 'sanitary_phytosanitary_inspection'."
          example: none
          type: string
        restriction_comments:
          description: "If you specify 'other' in the restriction type, you must supply\
            \ a brief description of what is required."
          example: ""
          type: string
        customs_info_required:
          description: Indicates if the parcel requires customs info to get the shipping
            rates.
          example: false
          type: boolean
        tracking_number:
          description: The tracking number associated to this parcel.
          example: 1Z4V2A000000000000
          type: string
        tracking_status:
          description: "The tracking status for this parcel, automatically updated\
            \ in real time by the shipping carrier."
          example: delivered
          type: string
        tracking_status_detail:
          description: "Additional information about the tracking status, automatically\
            \ updated in real time by the shipping carrier."
          example: arrived_at_destination
          type: string
        tracking_status_updated_at:
          description: Time at which the parcel's tracking status was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        tracking_details:
          description: "The parcel's full tracking history, automatically updated\
            \ in real time by the shipping carrier."
          example: ""
          type: string
        carrier_weight_oz:
          description: The weight of the parcel as measured by the carrier in ounces
            (if available)
          example: "42.32"
          type: string
        signed_by:
          description: The name of the person who signed for the parcel (if available)
          example: John Smith
          type: string
        incoterm:
          description: The type of Incoterm (if available).
          example: EXW
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    parcelCreate_data_relationships:
      properties:
        shipment:
          $ref: '#/components/schemas/order_data_relationships_shipments'
        package:
          $ref: '#/components/schemas/parcel_data_relationships_package'
      required:
      - package
      - shipment
      type: object
    parcelCreate_data:
      properties:
        type:
          default: parcels
          description: The resource's type
          example: parcels
          type: string
        attributes:
          $ref: '#/components/schemas/parcelCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/parcelCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    parcelUpdate_data_relationships:
      properties:
        shipment:
          $ref: '#/components/schemas/order_data_relationships_shipments'
        package:
          $ref: '#/components/schemas/parcel_data_relationships_package'
      type: object
    parcelUpdate_data:
      properties:
        type:
          default: parcels
          description: The resource's type
          example: parcels
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/parcelCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/parcelUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    paymentGateway_data:
      properties:
        type:
          default: payment_gateways
          description: The resource's type
          example: payment_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/klarnaGateway_data_attributes'
        relationships:
          $ref: '#/components/schemas/manualGateway_data_relationships'
      required:
      - attributes
      - type
      type: object
    paymentMethod_data_attributes:
      properties:
        payment_source_type:
          description: "The payment source type, can be one of: 'AdyenPayment', 'BraintreePayment',\
            \ 'CheckoutComPayment', 'CreditCard', 'ExternalPayment', 'PaypalPayment',\
            \ 'StripePayment', or 'WireTransfer'."
          example: CreditCard
          type: string
        name:
          description: "Payment source type, titleized"
          example: Credit Card
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        moto:
          description: "Send this attribute if you want to mark the payment as MOTO,\
            \ must be supported by payment gateway."
          example: false
          type: boolean
        disabled_at:
          description: Time at which the payment method was disabled.
          example: 2018-01-01T12:00:00.000Z
          type: string
        price_amount_cents:
          description: "The payment method's price, in cents"
          example: 0
          type: integer
        price_amount_float:
          description: "The payment method's price, float"
          example: 0.0
          type: number
        formatted_price_amount:
          description: "The payment method's price, formatted"
          example: "€0,00"
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    paymentMethod_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        payment_gateway:
          $ref: '#/components/schemas/adyenPayment_data_relationships_payment_gateway'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    paymentMethod_data:
      properties:
        type:
          default: payment_methods
          description: The resource's type
          example: payment_methods
          type: string
        attributes:
          $ref: '#/components/schemas/paymentMethod_data_attributes'
        relationships:
          $ref: '#/components/schemas/paymentMethod_data_relationships'
      required:
      - attributes
      - type
      type: object
    paymentMethodCreate_data_attributes:
      properties:
        payment_source_type:
          description: "The payment source type, can be one of: 'AdyenPayment', 'BraintreePayment',\
            \ 'CheckoutComPayment', 'CreditCard', 'ExternalPayment', 'PaypalPayment',\
            \ 'StripePayment', or 'WireTransfer'."
          example: CreditCard
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        moto:
          description: "Send this attribute if you want to mark the payment as MOTO,\
            \ must be supported by payment gateway."
          example: false
          type: boolean
        price_amount_cents:
          description: "The payment method's price, in cents"
          example: 0
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - payment_source_type
      - price_amount_cents
      type: object
    paymentMethodCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        payment_gateway:
          $ref: '#/components/schemas/adyenPayment_data_relationships_payment_gateway'
      required:
      - payment_gateway
      type: object
    paymentMethodCreate_data:
      properties:
        type:
          default: payment_methods
          description: The resource's type
          example: payment_methods
          type: string
        attributes:
          $ref: '#/components/schemas/paymentMethodCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/paymentMethodCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    paymentMethodUpdate_data_attributes:
      properties:
        payment_source_type:
          description: "The payment source type, can be one of: 'AdyenPayment', 'BraintreePayment',\
            \ 'CheckoutComPayment', 'CreditCard', 'ExternalPayment', 'PaypalPayment',\
            \ 'StripePayment', or 'WireTransfer'."
          example: CreditCard
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        moto:
          description: "Send this attribute if you want to mark the payment as MOTO,\
            \ must be supported by payment gateway."
          example: false
          type: boolean
        price_amount_cents:
          description: "The payment method's price, in cents"
          example: 0
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    paymentMethodUpdate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        payment_gateway:
          $ref: '#/components/schemas/adyenPayment_data_relationships_payment_gateway'
      type: object
    paymentMethodUpdate_data:
      properties:
        type:
          default: payment_methods
          description: The resource's type
          example: payment_methods
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/paymentMethodUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/paymentMethodUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    paypalGateway_data_relationships_paypal_payments:
      properties:
        type:
          default: paypal_payments
          description: The resource's type
          example: paypal_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    paypalGateway_data_relationships:
      properties:
        payment_methods:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        paypal_payments:
          $ref: '#/components/schemas/paypalGateway_data_relationships_paypal_payments'
      type: object
    paypalGateway_data:
      properties:
        type:
          default: paypal_gateways
          description: The resource's type
          example: paypal_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/klarnaGateway_data_attributes'
        relationships:
          $ref: '#/components/schemas/paypalGateway_data_relationships'
      required:
      - attributes
      - type
      type: object
    paypalGatewayCreate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        client_id:
          description: The gateway client ID.
          example: xxxx-yyyy-zzzz
          type: string
        client_secret:
          description: The gateway client secret.
          example: xxxx-yyyy-zzzz
          type: string
      required:
      - client_id
      - client_secret
      - name
      type: object
    paypalGatewayCreate_data:
      properties:
        type:
          default: paypal_gateways
          description: The resource's type
          example: paypal_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/paypalGatewayCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    paypalGatewayUpdate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        client_id:
          description: The gateway client ID.
          example: xxxx-yyyy-zzzz
          type: string
        client_secret:
          description: The gateway client secret.
          example: xxxx-yyyy-zzzz
          type: string
      type: object
    paypalGatewayUpdate_data:
      properties:
        type:
          default: paypal_gateways
          description: The resource's type
          example: paypal_gateways
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/paypalGatewayUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    paypalPayment_data_attributes:
      properties:
        return_url:
          description: The URL where the payer is redirected after they approve the
            payment.
          example: https://yourdomain.com/thankyou
          type: string
        cancel_url:
          description: The URL where the payer is redirected after they cancel the
            payment.
          example: https://yourdomain.com/checkout/payment
          type: string
        note_to_payer:
          description: A free-form field that you can use to send a note to the payer
            on PayPal.
          example: Thank you for shopping with us!
          type: string
        paypal_payer_id:
          description: The id of the payer that PayPal passes in the return_url.
          example: ABCDEFGHG123456
          type: string
        name:
          description: The PayPal payer id (if present)
          example: ABCDEFGHG123456
          type: string
        paypal_id:
          description: The id of the PayPal payment object.
          example: "1234567890"
          type: string
        status:
          description: The PayPal payment status. One of 'created' (default) or 'approved'.
          example: created
          type: string
        approval_url:
          description: The URL the customer should be redirected to approve the payment.
          example: https://www.paypal.com/cgi-bin/webscr?cmd=_express-checkout&token=EC-1234567890ABCDEFGHG
          type: string
        mismatched_amounts:
          description: Indicates if the order current amount differs form the one
            of the created payment intent.
          example: false
          type: boolean
        intent_amount_cents:
          description: "The amount of the associated payment intent, in cents."
          example: 1000
          type: integer
        intent_amount_float:
          description: "The amount of the associated payment intent, float."
          example: 10.0
          type: number
        formatted_intent_amount:
          description: "The amount of the associated payment intent, formatted."
          example: "€10,00"
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    paypalPayment_data:
      properties:
        type:
          default: paypal_payments
          description: The resource's type
          example: paypal_payments
          type: string
        attributes:
          $ref: '#/components/schemas/paypalPayment_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPayment_data_relationships'
      required:
      - attributes
      - type
      type: object
    paypalPaymentCreate_data_attributes:
      properties:
        return_url:
          description: The URL where the payer is redirected after they approve the
            payment.
          example: https://yourdomain.com/thankyou
          type: string
        cancel_url:
          description: The URL where the payer is redirected after they cancel the
            payment.
          example: https://yourdomain.com/checkout/payment
          type: string
        note_to_payer:
          description: A free-form field that you can use to send a note to the payer
            on PayPal.
          example: Thank you for shopping with us!
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - cancel_url
      - return_url
      type: object
    paypalPaymentCreate_data:
      properties:
        type:
          default: paypal_payments
          description: The resource's type
          example: paypal_payments
          type: string
        attributes:
          $ref: '#/components/schemas/paypalPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    paypalPaymentUpdate_data_attributes:
      properties:
        paypal_payer_id:
          description: The id of the payer that PayPal passes in the return_url.
          example: ABCDEFGHG123456
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    paypalPaymentUpdate_data:
      properties:
        type:
          default: paypal_payments
          description: The resource's type
          example: paypal_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/paypalPaymentUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    percentageDiscountPromotion_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        total_usage_count:
          description: The number of times this promotion has been applied.
          example: 2
          type: integer
        active:
          description: Indicates if the promotion is active.
          example: true
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        percentage:
          description: The discount percentage to be applied.
          example: 10
          type: integer
      type: object
    percentageDiscountPromotion_data:
      properties:
        type:
          default: percentage_discount_promotions
          description: The resource's type
          example: percentage_discount_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/percentageDiscountPromotion_data_attributes'
        relationships:
          $ref: '#/components/schemas/fixedPricePromotion_data_relationships'
      required:
      - attributes
      - type
      type: object
    percentageDiscountPromotionCreate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        percentage:
          description: The discount percentage to be applied.
          example: 10
          type: integer
      required:
      - expires_at
      - name
      - percentage
      - starts_at
      - total_usage_limit
      type: object
    percentageDiscountPromotionCreate_data:
      properties:
        type:
          default: percentage_discount_promotions
          description: The resource's type
          example: percentage_discount_promotions
          type: string
        attributes:
          $ref: '#/components/schemas/percentageDiscountPromotionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/fixedPricePromotionUpdate_data_relationships'
      required:
      - attributes
      - type
      type: object
    percentageDiscountPromotionUpdate_data_attributes:
      properties:
        name:
          description: The promotion's internal name.
          example: Personal promotion
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        starts_at:
          description: The activation date/time of this promotion.
          example: 2018-01-01T12:00:00.000Z
          type: string
        expires_at:
          description: The expiration date/time of this promotion (must be after starts_at).
          example: 2018-01-02T12:00:00.000Z
          type: string
        total_usage_limit:
          description: The total number of times this promotion can be applied.
          example: 5
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        percentage:
          description: The discount percentage to be applied.
          example: 10
          type: integer
      type: object
    percentageDiscountPromotionUpdate_data:
      properties:
        type:
          default: percentage_discount_promotions
          description: The resource's type
          example: percentage_discount_promotions
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/percentageDiscountPromotionUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/fixedPricePromotionUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    priceList_data_attributes:
      properties:
        name:
          description: The price list's internal name
          example: EU Price list
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        tax_included:
          description: Indicates if the associated prices include taxes.
          example: true
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    priceList_data_relationships_prices:
      properties:
        type:
          default: prices
          description: The resource's type
          example: prices
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    priceList_data_relationships:
      properties:
        prices:
          $ref: '#/components/schemas/priceList_data_relationships_prices'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    priceList_data:
      properties:
        type:
          default: price_lists
          description: The resource's type
          example: price_lists
          type: string
        attributes:
          $ref: '#/components/schemas/priceList_data_attributes'
        relationships:
          $ref: '#/components/schemas/priceList_data_relationships'
      required:
      - attributes
      - type
      type: object
    priceListCreate_data_attributes:
      properties:
        name:
          description: The price list's internal name
          example: EU Price list
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        tax_included:
          description: Indicates if the associated prices include taxes.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - currency_code
      - name
      type: object
    priceListCreate_data:
      properties:
        type:
          default: price_lists
          description: The resource's type
          example: price_lists
          type: string
        attributes:
          $ref: '#/components/schemas/priceListCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    priceListUpdate_data_attributes:
      properties:
        name:
          description: The price list's internal name
          example: EU Price list
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        tax_included:
          description: Indicates if the associated prices include taxes.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    priceListUpdate_data:
      properties:
        type:
          default: price_lists
          description: The resource's type
          example: price_lists
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/priceListUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    price_data_attributes:
      properties:
        currency_code:
          description: "The international 3-letter currency code as defined by the\
            \ ISO 4217 standard, inherited from the associated price list."
          example: EUR
          type: string
        sku_code:
          description: "The code of the associated SKU. When creating a price, either\
            \ a valid sku_code or a SKU relationship must be present."
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        amount_cents:
          description: "The SKU price amount for the associated price list, in cents."
          example: 10000
          type: integer
        amount_float:
          description: "The SKU price amount for the associated price list, float."
          example: 100.0
          type: number
        formatted_amount:
          description: "The SKU price amount for the associated price list, formatted."
          example: "€100,00"
          type: string
        compare_at_amount_cents:
          description: "The compared price amount, in cents. Useful to display a percentage\
            \ discount."
          example: 13000
          type: integer
        compare_at_amount_float:
          description: "The compared price amount, float."
          example: 130.0
          type: number
        formatted_compare_at_amount:
          description: "The compared price amount, formatted."
          example: "€130,00"
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    price_data_relationships:
      properties:
        price_list:
          $ref: '#/components/schemas/market_data_relationships_price_list'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    price_data:
      properties:
        type:
          default: prices
          description: The resource's type
          example: prices
          type: string
        attributes:
          $ref: '#/components/schemas/price_data_attributes'
        relationships:
          $ref: '#/components/schemas/price_data_relationships'
      required:
      - attributes
      - type
      type: object
    priceCreate_data_attributes:
      properties:
        sku_code:
          description: "The code of the associated SKU. When creating a price, either\
            \ a valid sku_code or a SKU relationship must be present."
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        amount_cents:
          description: "The SKU price amount for the associated price list, in cents."
          example: 10000
          type: integer
        compare_at_amount_cents:
          description: "The compared price amount, in cents. Useful to display a percentage\
            \ discount."
          example: 13000
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - amount_cents
      - compare_at_amount_cents
      type: object
    priceCreate_data_relationships:
      properties:
        price_list:
          $ref: '#/components/schemas/market_data_relationships_price_list'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      required:
      - price_list
      type: object
    priceCreate_data:
      properties:
        type:
          default: prices
          description: The resource's type
          example: prices
          type: string
        attributes:
          $ref: '#/components/schemas/priceCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/priceCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    priceUpdate_data_attributes:
      properties:
        sku_code:
          description: "The code of the associated SKU. When creating a price, either\
            \ a valid sku_code or a SKU relationship must be present."
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        amount_cents:
          description: "The SKU price amount for the associated price list, in cents."
          example: 10000
          type: integer
        compare_at_amount_cents:
          description: "The compared price amount, in cents. Useful to display a percentage\
            \ discount."
          example: 13000
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    priceUpdate_data_relationships:
      properties:
        price_list:
          $ref: '#/components/schemas/market_data_relationships_price_list'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      type: object
    priceUpdate_data:
      properties:
        type:
          default: prices
          description: The resource's type
          example: prices
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/priceUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/priceUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    promotionRule_data:
      properties:
        type:
          default: promotion_rules
          description: The resource's type
          example: promotion_rules
          type: string
        attributes:
          $ref: '#/components/schemas/billingInfoValidationRule_data_attributes'
        relationships:
          $ref: '#/components/schemas/orderAmountPromotionRule_data_relationships'
      required:
      - attributes
      - type
      type: object
    promotion_data:
      properties:
        type:
          default: promotions
          description: The resource's type
          example: promotions
          type: string
        attributes:
          $ref: '#/components/schemas/freeShippingPromotion_data_attributes'
        relationships:
          $ref: '#/components/schemas/externalPromotion_data_relationships'
      required:
      - attributes
      - type
      type: object
    refund_data_attributes:
      properties:
        number:
          description: "The transaction number, auto generated"
          example: 42/T/001
          type: string
        currency_code:
          description: "The international 3-letter currency code as defined by the\
            \ ISO 4217 standard, inherited from the associated order."
          example: EUR
          type: string
        amount_cents:
          description: "The transaction amount, in cents."
          example: 1500
          type: integer
        amount_float:
          description: "The transaction amount, float."
          example: 15.0
          type: number
        formatted_amount:
          description: "The transaction amount, formatted."
          example: "€15,00"
          type: string
        succeeded:
          description: Indicates if the transaction is successful
          example: false
          type: boolean
        message:
          description: The message returned by the payment gateway
          example: Accepted
          type: string
        error_code:
          description: "The error code, if any, returned by the payment gateway"
          example: "00001"
          type: string
        error_detail:
          description: "The error detail, if any, returned by the payment gateway"
          example: Already settled
          type: string
        token:
          description: "The token identifying the transaction, returned by the payment\
            \ gateway"
          example: xxxx-yyyy-zzzz
          type: string
        gateway_transaction_id:
          description: "The ID identifying the transaction, returned by the payment\
            \ gateway"
          example: xxxx-yyyy-zzzz
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    refund_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        reference_capture:
          $ref: '#/components/schemas/authorization_data_relationships_captures'
      type: object
    refund_data:
      properties:
        type:
          default: refunds
          description: The resource's type
          example: refunds
          type: string
        attributes:
          $ref: '#/components/schemas/refund_data_attributes'
        relationships:
          $ref: '#/components/schemas/refund_data_relationships'
      required:
      - attributes
      - type
      type: object
    returnLineItem_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        bundle_code:
          description: The code of the associated bundle.
          example: BUNDLEMM000000FFFFFFXLXX
          type: string
        name:
          description: The name of the line item.
          example: Black Men T-shirt with White Logo (XL)
          type: string
        quantity:
          description: The line item quantity.
          example: 4
          type: integer
        return_reason:
          description: Set of key-value pairs that you can use to add details about
            return reason.
          example:
            size: was wrong
          type: object
        restocked_at:
          description: Time at which the return line item was restocked.
          example: 2018-01-01T12:00:00.000Z
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    returnLineItem_data_relationships:
      properties:
        return:
          $ref: '#/components/schemas/customer_data_relationships_returns'
        line_item:
          $ref: '#/components/schemas/lineItemOption_data_relationships_line_item'
      type: object
    returnLineItem_data:
      properties:
        type:
          default: return_line_items
          description: The resource's type
          example: return_line_items
          type: string
        attributes:
          $ref: '#/components/schemas/returnLineItem_data_attributes'
        relationships:
          $ref: '#/components/schemas/returnLineItem_data_relationships'
      required:
      - attributes
      - type
      type: object
    returnLineItemCreate_data_attributes:
      properties:
        quantity:
          description: The line item quantity.
          example: 4
          type: integer
        return_reason:
          description: Set of key-value pairs that you can use to add details about
            return reason.
          example:
            size: was wrong
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - quantity
      type: object
    returnLineItemCreate_data_relationships:
      properties:
        return:
          $ref: '#/components/schemas/customer_data_relationships_returns'
        line_item:
          $ref: '#/components/schemas/lineItemOption_data_relationships_line_item'
      required:
      - line_item
      - return
      type: object
    returnLineItemCreate_data:
      properties:
        type:
          default: return_line_items
          description: The resource's type
          example: return_line_items
          type: string
        attributes:
          $ref: '#/components/schemas/returnLineItemCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/returnLineItemCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    returnLineItemUpdate_data_attributes:
      properties:
        quantity:
          description: The line item quantity.
          example: 4
          type: integer
        _restock:
          description: Send this attribute if you want to restock the line item.
          example: true
          type: boolean
        return_reason:
          description: Set of key-value pairs that you can use to add details about
            return reason.
          example:
            size: was wrong
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    returnLineItemUpdate_data:
      properties:
        type:
          default: return_line_items
          description: The resource's type
          example: return_line_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/returnLineItemUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    return_data_attributes:
      properties:
        number:
          description: Unique identifier for the return
          example: '#1234/R/001'
          type: string
        status:
          description: "The return status, one of 'draft', 'requested', 'approved',\
            \ 'cancelled', 'shipped', 'rejected' or 'received'"
          example: draft
          type: string
        customer_email:
          description: The email address of the associated customer.
          example: john@example.com
          type: string
        skus_count:
          description: The total number of skus in the return's line items. This can
            be useful to display a preview of the return content.
          example: 2
          type: integer
        approved_at:
          description: Time at which the return was approved.
          example: 2018-01-01T12:00:00.000Z
          type: string
        cancelled_at:
          description: Time at which the return was cancelled.
          example: 2018-01-01T12:00:00.000Z
          type: string
        shipped_at:
          description: Time at which the return was shipped.
          example: 2018-01-01T12:00:00.000Z
          type: string
        rejected_at:
          description: Time at which the return was rejected.
          example: 2018-01-01T12:00:00.000Z
          type: string
        received_at:
          description: Time at which the return was received.
          example: 2018-01-01T12:00:00.000Z
          type: string
        archived_at:
          description: Time at which the resource has been archived.
          example: 2018-01-01T12:00:00.000Z
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    return_data_relationships_return_line_items:
      properties:
        type:
          default: return_line_items
          description: The resource's type
          example: return_line_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    return_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        customer:
          $ref: '#/components/schemas/couponRecipient_data_relationships_customer'
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        origin_address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        destination_address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        return_line_items:
          $ref: '#/components/schemas/return_data_relationships_return_line_items'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    return_data:
      properties:
        type:
          default: returns
          description: The resource's type
          example: returns
          type: string
        attributes:
          $ref: '#/components/schemas/return_data_attributes'
        relationships:
          $ref: '#/components/schemas/return_data_relationships'
      required:
      - attributes
      - type
      type: object
    returnCreate_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
      required:
      - order
      type: object
    returnCreate_data:
      properties:
        type:
          default: returns
          description: The resource's type
          example: returns
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/returnCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    returnUpdate_data_attributes:
      properties:
        _request:
          description: Send this attribute if you want to activate this return.
          example: true
          type: boolean
        _approve:
          description: Send this attribute if you want to mark this return as approved.
          example: true
          type: boolean
        _cancel:
          description: Send this attribute if you want to mark this return as cancelled.
          example: true
          type: boolean
        _ship:
          description: Send this attribute if you want to mark this return as shipped.
          example: true
          type: boolean
        _reject:
          description: Send this attribute if you want to mark this return as rejected.
          example: true
          type: boolean
        _receive:
          description: Send this attribute if you want to mark this return as received.
          example: true
          type: boolean
        _restock:
          description: Send this attribute if you want to restock all of the return
            line items.
          example: true
          type: boolean
        _archive:
          description: Send this attribute if you want to archive the return.
          example: true
          type: boolean
        _unarchive:
          description: Send this attribute if you want to unarchive the return.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    returnUpdate_data:
      properties:
        type:
          default: returns
          description: The resource's type
          example: returns
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/returnUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/packageUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    shipment_data_attributes:
      properties:
        number:
          description: Unique identifier for the shipment
          example: '#1234/S/001'
          type: string
        status:
          description: "The shipment status, one of 'draft', 'upcoming', 'cancelled',\
            \ 'on_hold', 'picking', 'packing', 'ready_to_ship', or 'shipped'"
          example: draft
          type: string
        currency_code:
          description: "The international 3-letter currency code as defined by the\
            \ ISO 4217 standard, automatically inherited from the associated order."
          example: EUR
          type: string
        cost_amount_cents:
          description: "The cost of this shipment from the selected carrier account,\
            \ in cents."
          example: 1000
          type: integer
        cost_amount_float:
          description: "The cost of this shipment from the selected carrier account,\
            \ float."
          example: 10.0
          type: number
        formatted_cost_amount:
          description: "The cost of this shipment from the selected carrier account,\
            \ formatted."
          example: "€10,00"
          type: string
        skus_count:
          description: The total number of skus in the shipment's line items. This
            can be useful to display a preview of the shipment content.
          example: 2
          type: integer
        selected_rate_id:
          description: The selected purchase rate from the available shipping rates.
          example: rate_f89e4663c3ed47ee94d37763f6d21d54
          type: string
        rates:
          description: The available shipping rates.
          example:
          - id: rate_f89e4663c3ed47ee94d37763f6d21d54
            rate: "45.59"
            carrier: DHLExpress
            service: MedicalExpress
          items:
            type: object
          type: array
        purchase_error_code:
          description: "The shipping rate purchase error code, if any."
          example: SHIPMENT.POSTAGE.FAILURE
          type: string
        purchase_error_message:
          description: "The shipping rate purchase error message, if any."
          example: Account not allowed for this service.
          type: string
        get_rates_started_at:
          description: Time at which the getting of the shipping rates started.
          example: 2018-01-01T12:00:00.000Z
          type: string
        get_rates_completed_at:
          description: Time at which the getting of the shipping rates completed.
          example: 2018-01-01T12:00:00.000Z
          type: string
        purchase_started_at:
          description: Time at which the purchasing of the shipping rate started.
          example: 2018-01-01T12:00:00.000Z
          type: string
        purchase_completed_at:
          description: Time at which the purchasing of the shipping rate completed.
          example: 2018-01-01T12:00:00.000Z
          type: string
        purchase_failed_at:
          description: Time at which the purchasing of the shipping rate failed.
          example: 2018-01-01T12:00:00.000Z
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    shipment_data_relationships_shipping_category:
      properties:
        type:
          default: shipping_categories
          description: The resource's type
          example: shipping_categories
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    shipment_data_relationships_delivery_lead_time:
      properties:
        type:
          default: delivery_lead_times
          description: The resource's type
          example: delivery_lead_times
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    shipment_data_relationships_carrier_accounts:
      properties:
        type:
          default: carrier_accounts
          description: The resource's type
          example: carrier_accounts
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    shipment_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        shipping_category:
          $ref: '#/components/schemas/shipment_data_relationships_shipping_category'
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        origin_address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        shipping_address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        shipping_method:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_shipping_method'
        delivery_lead_time:
          $ref: '#/components/schemas/shipment_data_relationships_delivery_lead_time'
        shipment_line_items:
          $ref: '#/components/schemas/lineItem_data_relationships_shipment_line_items'
        stock_line_items:
          $ref: '#/components/schemas/lineItem_data_relationships_stock_line_items'
        stock_transfers:
          $ref: '#/components/schemas/lineItem_data_relationships_stock_transfers'
        available_shipping_methods:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_shipping_method'
        carrier_accounts:
          $ref: '#/components/schemas/shipment_data_relationships_carrier_accounts'
        parcels:
          $ref: '#/components/schemas/package_data_relationships_parcels'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    shipment_data:
      properties:
        type:
          default: shipments
          description: The resource's type
          example: shipments
          type: string
        attributes:
          $ref: '#/components/schemas/shipment_data_attributes'
        relationships:
          $ref: '#/components/schemas/shipment_data_relationships'
      required:
      - attributes
      - type
      type: object
    shipmentUpdate_data_attributes:
      properties:
        _on_hold:
          description: Send this attribute if you want to put this shipment on hold.
          example: true
          type: boolean
        _picking:
          description: Send this attribute if you want to start picking this shipment.
          example: true
          type: boolean
        _packing:
          description: Send this attribute if you want to start packing this shipment.
          example: true
          type: boolean
        _ready_to_ship:
          description: Send this attribute if you want to mark this shipment as ready
            to ship.
          example: true
          type: boolean
        _ship:
          description: Send this attribute if you want to mark this shipment as shipped.
          example: true
          type: boolean
        _get_rates:
          description: Send this attribute if you want get the shipping rates from
            the associated carrier accounts.
          example: true
          type: boolean
        selected_rate_id:
          description: The selected purchase rate from the available shipping rates.
          example: rate_f89e4663c3ed47ee94d37763f6d21d54
          type: string
        _purchase:
          description: Send this attribute if you want to purchase this shipment with
            the selected rate.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    shipmentUpdate_data_relationships:
      properties:
        shipping_method:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_shipping_method'
      type: object
    shipmentUpdate_data:
      properties:
        type:
          default: shipments
          description: The resource's type
          example: shipments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/shipmentUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/shipmentUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    shippingCategory_data_attributes:
      properties:
        name:
          description: The shipping category name.
          example: Merchandise
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    shippingCategory_data_relationships:
      properties:
        skus:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    shippingCategory_data:
      properties:
        type:
          default: shipping_categories
          description: The resource's type
          example: shipping_categories
          type: string
        attributes:
          $ref: '#/components/schemas/shippingCategory_data_attributes'
        relationships:
          $ref: '#/components/schemas/shippingCategory_data_relationships'
      required:
      - attributes
      - type
      type: object
    shippingCategoryCreate_data_attributes:
      properties:
        name:
          description: The shipping category name.
          example: Merchandise
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    shippingCategoryCreate_data:
      properties:
        type:
          default: shipping_categories
          description: The resource's type
          example: shipping_categories
          type: string
        attributes:
          $ref: '#/components/schemas/shippingCategoryCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    shippingCategoryUpdate_data_attributes:
      properties:
        name:
          description: The shipping category name.
          example: Merchandise
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    shippingCategoryUpdate_data:
      properties:
        type:
          default: shipping_categories
          description: The resource's type
          example: shipping_categories
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/shippingCategoryUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    shippingMethod_data_attributes:
      properties:
        name:
          description: The shipping method's name
          example: Standard shipping
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        disabled_at:
          description: Time at which the shipping method was disabled.
          example: 2018-01-01T12:00:00.000Z
          type: string
        price_amount_cents:
          description: "The price of this shipping method, in cents."
          example: 1000
          type: integer
        price_amount_float:
          description: "The price of this shipping method, float."
          example: 10.0
          type: number
        formatted_price_amount:
          description: "The price of this shipping method, formatted."
          example: "€10,00"
          type: string
        free_over_amount_cents:
          description: "Apply free shipping if the order amount is over this value,\
            \ in cents."
          example: 9900
          type: integer
        free_over_amount_float:
          description: "Apply free shipping if the order amount is over this value,\
            \ float."
          example: 99.0
          type: number
        formatted_free_over_amount:
          description: "Apply free shipping if the order amount is over this value,\
            \ formatted."
          example: "€99,00"
          type: string
        price_amount_for_shipment_cents:
          description: "The calculated price (zero or price amount) when associated\
            \ to a shipment, in cents."
          example: 0
          type: integer
        price_amount_for_shipment_float:
          description: "The calculated price (zero or price amount) when associated\
            \ to a shipment, float."
          example: 0.0
          type: number
        formatted_price_amount_for_shipment:
          description: "The calculated price (zero or price amount) when associated\
            \ to a shipment, formatted."
          example: "€0,00"
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    shippingMethod_data_relationships_shipping_zone:
      properties:
        type:
          default: shipping_zones
          description: The resource's type
          example: shipping_zones
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    shippingMethod_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        shipping_zone:
          $ref: '#/components/schemas/shippingMethod_data_relationships_shipping_zone'
        shipping_category:
          $ref: '#/components/schemas/shipment_data_relationships_shipping_category'
        delivery_lead_time_for_shipment:
          $ref: '#/components/schemas/shipment_data_relationships_delivery_lead_time'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    shippingMethod_data:
      properties:
        type:
          default: shipping_methods
          description: The resource's type
          example: shipping_methods
          type: string
        attributes:
          $ref: '#/components/schemas/shippingMethod_data_attributes'
        relationships:
          $ref: '#/components/schemas/shippingMethod_data_relationships'
      required:
      - attributes
      - type
      type: object
    shippingMethodCreate_data_attributes:
      properties:
        name:
          description: The shipping method's name
          example: Standard shipping
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        price_amount_cents:
          description: "The price of this shipping method, in cents."
          example: 1000
          type: integer
        free_over_amount_cents:
          description: "Apply free shipping if the order amount is over this value,\
            \ in cents."
          example: 9900
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      - price_amount_cents
      type: object
    shippingMethodCreate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        shipping_zone:
          $ref: '#/components/schemas/shippingMethod_data_relationships_shipping_zone'
        shipping_category:
          $ref: '#/components/schemas/shipment_data_relationships_shipping_category'
      required:
      - shipping_category
      - shipping_zone
      type: object
    shippingMethodCreate_data:
      properties:
        type:
          default: shipping_methods
          description: The resource's type
          example: shipping_methods
          type: string
        attributes:
          $ref: '#/components/schemas/shippingMethodCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/shippingMethodCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    shippingMethodUpdate_data_attributes:
      properties:
        name:
          description: The shipping method's name
          example: Standard shipping
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        price_amount_cents:
          description: "The price of this shipping method, in cents."
          example: 1000
          type: integer
        free_over_amount_cents:
          description: "Apply free shipping if the order amount is over this value,\
            \ in cents."
          example: 9900
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    shippingMethodUpdate_data_relationships:
      properties:
        market:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_markets'
        shipping_zone:
          $ref: '#/components/schemas/shippingMethod_data_relationships_shipping_zone'
        shipping_category:
          $ref: '#/components/schemas/shipment_data_relationships_shipping_category'
      type: object
    shippingMethodUpdate_data:
      properties:
        type:
          default: shipping_methods
          description: The resource's type
          example: shipping_methods
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/shippingMethodUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/shippingMethodUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    shippingZone_data_attributes:
      properties:
        name:
          description: The shipping zone's internal name.
          example: Europe (main countries)
          type: string
        country_code_regex:
          description: The regex that will be evaluated to match the shipping address
            country code.
          example: AT|BE|BG|CZ|DK|EE|DE|HU|LV|LT
          type: string
        not_country_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address country code.
          example: AT|BE|BG|CZ|DK|EE|DE
          type: string
        state_code_regex:
          description: The regex that will be evaluated to match the shipping address
            state code.
          example: "A[KLRZ]|C[AOT]|D[CE]|FL"
          type: string
        not_state_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address state code.
          example: "A[KLRZ]|C[AOT]"
          type: string
        zip_code_regex:
          description: The regex that will be evaluated to match the shipping address
            zip code.
          example: (?i)(JE1|JE2|JE3|JE4|JE5)
          type: string
        not_zip_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping zip country code.
          example: (?i)(JE1|JE2|JE3)
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    shippingZone_data_relationships:
      properties:
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    shippingZone_data:
      properties:
        type:
          default: shipping_zones
          description: The resource's type
          example: shipping_zones
          type: string
        attributes:
          $ref: '#/components/schemas/shippingZone_data_attributes'
        relationships:
          $ref: '#/components/schemas/shippingZone_data_relationships'
      required:
      - attributes
      - type
      type: object
    shippingZoneCreate_data_attributes:
      properties:
        name:
          description: The shipping zone's internal name.
          example: Europe (main countries)
          type: string
        country_code_regex:
          description: The regex that will be evaluated to match the shipping address
            country code.
          example: AT|BE|BG|CZ|DK|EE|DE|HU|LV|LT
          type: string
        not_country_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address country code.
          example: AT|BE|BG|CZ|DK|EE|DE
          type: string
        state_code_regex:
          description: The regex that will be evaluated to match the shipping address
            state code.
          example: "A[KLRZ]|C[AOT]|D[CE]|FL"
          type: string
        not_state_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address state code.
          example: "A[KLRZ]|C[AOT]"
          type: string
        zip_code_regex:
          description: The regex that will be evaluated to match the shipping address
            zip code.
          example: (?i)(JE1|JE2|JE3|JE4|JE5)
          type: string
        not_zip_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping zip country code.
          example: (?i)(JE1|JE2|JE3)
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    shippingZoneCreate_data:
      properties:
        type:
          default: shipping_zones
          description: The resource's type
          example: shipping_zones
          type: string
        attributes:
          $ref: '#/components/schemas/shippingZoneCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    shippingZoneUpdate_data_attributes:
      properties:
        name:
          description: The shipping zone's internal name.
          example: Europe (main countries)
          type: string
        country_code_regex:
          description: The regex that will be evaluated to match the shipping address
            country code.
          example: AT|BE|BG|CZ|DK|EE|DE|HU|LV|LT
          type: string
        not_country_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address country code.
          example: AT|BE|BG|CZ|DK|EE|DE
          type: string
        state_code_regex:
          description: The regex that will be evaluated to match the shipping address
            state code.
          example: "A[KLRZ]|C[AOT]|D[CE]|FL"
          type: string
        not_state_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address state code.
          example: "A[KLRZ]|C[AOT]"
          type: string
        zip_code_regex:
          description: The regex that will be evaluated to match the shipping address
            zip code.
          example: (?i)(JE1|JE2|JE3|JE4|JE5)
          type: string
        not_zip_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping zip country code.
          example: (?i)(JE1|JE2|JE3)
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    shippingZoneUpdate_data:
      properties:
        type:
          default: shipping_zones
          description: The resource's type
          example: shipping_zones
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/shippingZoneUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    skuListItem_data_attributes:
      properties:
        position:
          description: The SKU list item's position.
          example: 2
          type: integer
        sku_code:
          description: The code of the associated SKU.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The SKU quantity for this SKU list item.
          example: 1
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    skuListItem_data_relationships:
      properties:
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      type: object
    skuListItem_data:
      properties:
        type:
          default: sku_list_items
          description: The resource's type
          example: sku_list_items
          type: string
        attributes:
          $ref: '#/components/schemas/skuListItem_data_attributes'
        relationships:
          $ref: '#/components/schemas/skuListItem_data_relationships'
      required:
      - attributes
      - type
      type: object
    skuListItemCreate_data_attributes:
      properties:
        position:
          description: The SKU list item's position.
          example: 2
          type: integer
        sku_code:
          description: The code of the associated SKU.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The SKU quantity for this SKU list item.
          example: 1
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    skuListItemCreate_data_relationships:
      properties:
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      required:
      - sku
      - sku_list
      type: object
    skuListItemCreate_data:
      properties:
        type:
          default: sku_list_items
          description: The resource's type
          example: sku_list_items
          type: string
        attributes:
          $ref: '#/components/schemas/skuListItemCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/skuListItemCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    skuListItemUpdate_data:
      properties:
        type:
          default: sku_list_items
          description: The resource's type
          example: sku_list_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/skuListItemCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    skuListPromotionRule_data_attributes:
      properties:
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        all_skus:
          description: Indicates if the rule is activated only when all of the SKUs
            of the list is also part of the order.
          example: true
          type: boolean
        min_quantity:
          description: "The min quantity of SKUs of the list that must be also part\
            \ of the order. If positive, overwrites the 'all_skus' option. When the\
            \ sku_list is manual, its items quantities are honoured."
          example: 3
          type: integer
      type: object
    skuListPromotionRule_data_relationships:
      properties:
        promotion:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships_promotion'
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
        skus:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      type: object
    skuListPromotionRule_data:
      properties:
        type:
          default: sku_list_promotion_rules
          description: The resource's type
          example: sku_list_promotion_rules
          type: string
        attributes:
          $ref: '#/components/schemas/skuListPromotionRule_data_attributes'
        relationships:
          $ref: '#/components/schemas/skuListPromotionRule_data_relationships'
      required:
      - attributes
      - type
      type: object
    skuListPromotionRuleCreate_data_attributes:
      properties:
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        all_skus:
          description: Indicates if the rule is activated only when all of the SKUs
            of the list is also part of the order.
          example: true
          type: boolean
        min_quantity:
          description: "The min quantity of SKUs of the list that must be also part\
            \ of the order. If positive, overwrites the 'all_skus' option. When the\
            \ sku_list is manual, its items quantities are honoured."
          example: 3
          type: integer
      type: object
    skuListPromotionRuleCreate_data_relationships:
      properties:
        promotion:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships_promotion'
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
      required:
      - promotion
      type: object
    skuListPromotionRuleCreate_data:
      properties:
        type:
          default: sku_list_promotion_rules
          description: The resource's type
          example: sku_list_promotion_rules
          type: string
        attributes:
          $ref: '#/components/schemas/skuListPromotionRuleCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/skuListPromotionRuleCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    skuListPromotionRuleUpdate_data_relationships:
      properties:
        promotion:
          $ref: '#/components/schemas/couponCodesPromotionRule_data_relationships_promotion'
        sku_list:
          $ref: '#/components/schemas/bundle_data_relationships_sku_list'
      type: object
    skuListPromotionRuleUpdate_data:
      properties:
        type:
          default: sku_list_promotion_rules
          description: The resource's type
          example: sku_list_promotion_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/skuListPromotionRuleCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/skuListPromotionRuleUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    skuList_data_attributes:
      properties:
        name:
          description: The SKU list's internal name.
          example: Personal list
          type: string
        slug:
          description: The SKU list's internal slug.
          example: personal-list-1
          type: string
        description:
          description: An internal description of the SKU list.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        image_url:
          description: The URL of an image that represents the SKU list.
          example: https://img.yourdomain.com/skus/xYZkjABcde.png
          type: string
        manual:
          description: Indicates if the SKU list is populated manually.
          example: false
          type: boolean
        sku_code_regex:
          description: The regex that will be evaluated to match the SKU codes.
          example: ^(A|B).*$
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    skuList_data_relationships_sku_list_items:
      properties:
        type:
          default: sku_list_items
          description: The resource's type
          example: sku_list_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    skuList_data_relationships:
      properties:
        skus:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        sku_list_items:
          $ref: '#/components/schemas/skuList_data_relationships_sku_list_items'
        bundles:
          $ref: '#/components/schemas/order_data_relationships_available_free_bundles'
      type: object
    skuList_data:
      properties:
        type:
          default: sku_lists
          description: The resource's type
          example: sku_lists
          type: string
        attributes:
          $ref: '#/components/schemas/skuList_data_attributes'
        relationships:
          $ref: '#/components/schemas/skuList_data_relationships'
      required:
      - attributes
      - type
      type: object
    skuListCreate_data_attributes:
      properties:
        name:
          description: The SKU list's internal name.
          example: Personal list
          type: string
        description:
          description: An internal description of the SKU list.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        image_url:
          description: The URL of an image that represents the SKU list.
          example: https://img.yourdomain.com/skus/xYZkjABcde.png
          type: string
        manual:
          description: Indicates if the SKU list is populated manually.
          example: false
          type: boolean
        sku_code_regex:
          description: The regex that will be evaluated to match the SKU codes.
          example: ^(A|B).*$
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    skuListCreate_data:
      properties:
        type:
          default: sku_lists
          description: The resource's type
          example: sku_lists
          type: string
        attributes:
          $ref: '#/components/schemas/skuListCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    skuListUpdate_data_attributes:
      properties:
        name:
          description: The SKU list's internal name.
          example: Personal list
          type: string
        description:
          description: An internal description of the SKU list.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        image_url:
          description: The URL of an image that represents the SKU list.
          example: https://img.yourdomain.com/skus/xYZkjABcde.png
          type: string
        manual:
          description: Indicates if the SKU list is populated manually.
          example: false
          type: boolean
        sku_code_regex:
          description: The regex that will be evaluated to match the SKU codes.
          example: ^(A|B).*$
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    skuListUpdate_data:
      properties:
        type:
          default: sku_lists
          description: The resource's type
          example: sku_lists
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/skuListUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    skuOption_data_attributes:
      properties:
        name:
          description: The sku option's internal name
          example: Embossing
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        description:
          description: An internal description of the sku option.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        price_amount_cents:
          description: "The price of this shipping method, in cents."
          example: 1000
          type: integer
        price_amount_float:
          description: "The price of this shipping method, float."
          example: 10.0
          type: number
        formatted_price_amount:
          description: "The price of this shipping method, formatted."
          example: "€10,00"
          type: string
        delay_hours:
          description: The delay time (in hours) that should be added to the delivery
            lead time when this option is purchased.
          example: 48
          type: integer
        delay_days:
          description: "The delay time, in days (rounded)"
          example: 2
          type: integer
        sku_code_regex:
          description: The regex that will be evaluated to match the sku codes.
          example: ^(A|B).*$
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    skuOption_data:
      properties:
        type:
          default: sku_options
          description: The resource's type
          example: sku_options
          type: string
        attributes:
          $ref: '#/components/schemas/skuOption_data_attributes'
        relationships:
          $ref: '#/components/schemas/carrierAccount_data_relationships'
      required:
      - attributes
      - type
      type: object
    skuOptionCreate_data_attributes:
      properties:
        name:
          description: The sku option's internal name
          example: Embossing
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        description:
          description: An internal description of the sku option.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        price_amount_cents:
          description: "The price of this shipping method, in cents."
          example: 1000
          type: integer
        delay_hours:
          description: The delay time (in hours) that should be added to the delivery
            lead time when this option is purchased.
          example: 48
          type: integer
        sku_code_regex:
          description: The regex that will be evaluated to match the sku codes.
          example: ^(A|B).*$
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    skuOptionCreate_data:
      properties:
        type:
          default: sku_options
          description: The resource's type
          example: sku_options
          type: string
        attributes:
          $ref: '#/components/schemas/skuOptionCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/billingInfoValidationRule_data_relationships'
      required:
      - attributes
      - type
      type: object
    skuOptionUpdate_data_attributes:
      properties:
        name:
          description: The sku option's internal name
          example: Embossing
          type: string
        currency_code:
          description: The international 3-letter currency code as defined by the
            ISO 4217 standard.
          example: EUR
          type: string
        description:
          description: An internal description of the sku option.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        price_amount_cents:
          description: "The price of this shipping method, in cents."
          example: 1000
          type: integer
        delay_hours:
          description: The delay time (in hours) that should be added to the delivery
            lead time when this option is purchased.
          example: 48
          type: integer
        sku_code_regex:
          description: The regex that will be evaluated to match the sku codes.
          example: ^(A|B).*$
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    skuOptionUpdate_data:
      properties:
        type:
          default: sku_options
          description: The resource's type
          example: sku_options
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/skuOptionUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/billingInfoValidationRule_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    sku_data_attributes:
      properties:
        code:
          description: "The SKU code, that uniquely identifies the SKU within the\
            \ organization."
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        name:
          description: The internal name of the SKU.
          example: Black Men T-shirt with White Logo (XL)
          type: string
        description:
          description: An internal description of the SKU.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        image_url:
          description: The URL of an image that represents the SKU.
          example: https://img.yourdomain.com/skus/xYZkjABcde.png
          type: string
        pieces_per_pack:
          description: The number of pieces that compose the SKU. This is useful to
            describe sets and bundles.
          example: 6
          type: integer
        weight:
          description: "The weight of the SKU. If present, it will be used to calculate\
            \ the shipping rates."
          example: 300.0
          type: number
        unit_of_weight:
          description: "Can be one of 'gr', or 'oz'"
          example: gr
          type: string
        hs_tariff_number:
          description: The Harmonized System Code used by customs to identify the
            products shipped across international borders.
          example: 4901.91.0020
          type: string
        do_not_ship:
          description: Indicates if the SKU doesn't generate shipments.
          example: false
          type: boolean
        do_not_track:
          description: Indicates if the SKU doesn't track the stock inventory.
          example: false
          type: boolean
        inventory:
          description: Aggregated information about the SKU's inventory. Returned
            only when retrieving a single SKU.
          example:
            available: true
            quantity: 10
            levels:
            - quantity: 4
              delivery_lead_times:
              - shipping_method:
                  name: Standard Shipping
                  reference: null
                  price_amount_cents: 700
                  free_over_amount_cents: 9900
                  formatted_price_amount: "€7,00"
                  formatted_free_over_amount: "€99,00"
                min:
                  hours: 72
                  days: 3
                max:
                  hours: 120
                  days: 5
              - shipping_method:
                  name: Express Delivery
                  reference: null
                  price_amount_cents: 1200
                  free_over_amount_cents: null
                  formatted_price_amount: "€12,00"
                  formatted_free_over_amount: null
                min:
                  hours: 48
                  days: 2
                max:
                  hours: 72
                  days: 3
            - quantity: 6
              delivery_lead_times:
              - shipping_method:
                  name: Standard Shipping
                  reference: null
                  price_amount_cents: 700
                  free_over_amount_cents: 9900
                  formatted_price_amount: "€7,00"
                  formatted_free_over_amount: "€99,00"
                min:
                  hours: 96
                  days: 4
                max:
                  hours: 144
                  days: 6
              - shipping_method:
                  name: Express Delivery
                  reference: null
                  price_amount_cents: 1200
                  free_over_amount_cents: null
                  formatted_price_amount: "€12,00"
                  formatted_free_over_amount: null
                min:
                  hours: 72
                  days: 3
                max:
                  hours: 96
                  days: 4
          type: object
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    sku_data_relationships_stock_items:
      properties:
        type:
          default: stock_items
          description: The resource's type
          example: stock_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    sku_data_relationships:
      properties:
        shipping_category:
          $ref: '#/components/schemas/shipment_data_relationships_shipping_category'
        prices:
          $ref: '#/components/schemas/priceList_data_relationships_prices'
        stock_items:
          $ref: '#/components/schemas/sku_data_relationships_stock_items'
        delivery_lead_times:
          $ref: '#/components/schemas/shipment_data_relationships_delivery_lead_time'
        sku_options:
          $ref: '#/components/schemas/lineItemOption_data_relationships_sku_option'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    sku_data:
      properties:
        type:
          default: skus
          description: The resource's type
          example: skus
          type: string
        attributes:
          $ref: '#/components/schemas/sku_data_attributes'
        relationships:
          $ref: '#/components/schemas/sku_data_relationships'
      required:
      - attributes
      - type
      type: object
    skuCreate_data_attributes:
      properties:
        code:
          description: "The SKU code, that uniquely identifies the SKU within the\
            \ organization."
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        name:
          description: The internal name of the SKU.
          example: Black Men T-shirt with White Logo (XL)
          type: string
        description:
          description: An internal description of the SKU.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        image_url:
          description: The URL of an image that represents the SKU.
          example: https://img.yourdomain.com/skus/xYZkjABcde.png
          type: string
        pieces_per_pack:
          description: The number of pieces that compose the SKU. This is useful to
            describe sets and bundles.
          example: 6
          type: integer
        weight:
          description: "The weight of the SKU. If present, it will be used to calculate\
            \ the shipping rates."
          example: 300.0
          type: number
        unit_of_weight:
          description: "Can be one of 'gr', or 'oz'"
          example: gr
          type: string
        hs_tariff_number:
          description: The Harmonized System Code used by customs to identify the
            products shipped across international borders.
          example: 4901.91.0020
          type: string
        do_not_ship:
          description: Indicates if the SKU doesn't generate shipments.
          example: false
          type: boolean
        do_not_track:
          description: Indicates if the SKU doesn't track the stock inventory.
          example: false
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - code
      - name
      type: object
    skuCreate_data_relationships:
      properties:
        shipping_category:
          $ref: '#/components/schemas/shipment_data_relationships_shipping_category'
      required:
      - shipping_category
      type: object
    skuCreate_data:
      properties:
        type:
          default: skus
          description: The resource's type
          example: skus
          type: string
        attributes:
          $ref: '#/components/schemas/skuCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/skuCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    skuUpdate_data_attributes:
      properties:
        code:
          description: "The SKU code, that uniquely identifies the SKU within the\
            \ organization."
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        name:
          description: The internal name of the SKU.
          example: Black Men T-shirt with White Logo (XL)
          type: string
        description:
          description: An internal description of the SKU.
          example: "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua."
          type: string
        image_url:
          description: The URL of an image that represents the SKU.
          example: https://img.yourdomain.com/skus/xYZkjABcde.png
          type: string
        pieces_per_pack:
          description: The number of pieces that compose the SKU. This is useful to
            describe sets and bundles.
          example: 6
          type: integer
        weight:
          description: "The weight of the SKU. If present, it will be used to calculate\
            \ the shipping rates."
          example: 300.0
          type: number
        unit_of_weight:
          description: "Can be one of 'gr', or 'oz'"
          example: gr
          type: string
        hs_tariff_number:
          description: The Harmonized System Code used by customs to identify the
            products shipped across international borders.
          example: 4901.91.0020
          type: string
        do_not_ship:
          description: Indicates if the SKU doesn't generate shipments.
          example: false
          type: boolean
        do_not_track:
          description: Indicates if the SKU doesn't track the stock inventory.
          example: false
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    skuUpdate_data_relationships:
      properties:
        shipping_category:
          $ref: '#/components/schemas/shipment_data_relationships_shipping_category'
      type: object
    skuUpdate_data:
      properties:
        type:
          default: skus
          description: The resource's type
          example: skus
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/skuUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/skuUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    stockItem_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The stock item quantity.
          example: 100
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stockItem_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    stockItem_data:
      properties:
        type:
          default: stock_items
          description: The resource's type
          example: stock_items
          type: string
        attributes:
          $ref: '#/components/schemas/stockItem_data_attributes'
        relationships:
          $ref: '#/components/schemas/stockItem_data_relationships'
      required:
      - attributes
      - type
      type: object
    stockItemCreate_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The stock item quantity.
          example: 100
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - quantity
      type: object
    stockItemCreate_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      required:
      - stock_location
      type: object
    stockItemCreate_data:
      properties:
        type:
          default: stock_items
          description: The resource's type
          example: stock_items
          type: string
        attributes:
          $ref: '#/components/schemas/stockItemCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/stockItemCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    stockItemUpdate_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The stock item quantity.
          example: 100
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stockItemUpdate_data_relationships:
      properties:
        stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      type: object
    stockItemUpdate_data:
      properties:
        type:
          default: stock_items
          description: The resource's type
          example: stock_items
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/stockItemUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/stockItemUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    stockLineItem_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        bundle_code:
          description: The code of the associated bundle.
          example: BUNDLEMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The line item quantity.
          example: 4
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stockLineItem_data_relationships:
      properties:
        shipment:
          $ref: '#/components/schemas/order_data_relationships_shipments'
        line_item:
          $ref: '#/components/schemas/lineItemOption_data_relationships_line_item'
        stock_item:
          $ref: '#/components/schemas/sku_data_relationships_stock_items'
      type: object
    stockLineItem_data:
      properties:
        type:
          default: stock_line_items
          description: The resource's type
          example: stock_line_items
          type: string
        attributes:
          $ref: '#/components/schemas/stockLineItem_data_attributes'
        relationships:
          $ref: '#/components/schemas/stockLineItem_data_relationships'
      required:
      - attributes
      - type
      type: object
    stockLocation_data_attributes:
      properties:
        number:
          description: Unique identifier for the stock location (numeric)
          example: 1234
          type: integer
        name:
          description: The stock location's internal name.
          example: Primary warehouse
          type: string
        label_format:
          description: "The shipping label format for this stock location. Can be\
            \ one of 'PDF', 'ZPL', 'EPL2', or 'PNG'"
          example: PDF
          type: string
        suppress_etd:
          description: Flag it if you want to skip the electronic invoice creation
            when generating the customs info for this stock location shipments.
          example: false
          type: boolean
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stockLocation_data_relationships:
      properties:
        address:
          $ref: '#/components/schemas/bingGeocoder_data_relationships_addresses'
        inventory_stock_locations:
          $ref: '#/components/schemas/inventoryModel_data_relationships_inventory_stock_locations'
        inventory_return_locations:
          $ref: '#/components/schemas/inventoryModel_data_relationships_inventory_return_locations'
        stock_items:
          $ref: '#/components/schemas/sku_data_relationships_stock_items'
        stock_transfers:
          $ref: '#/components/schemas/lineItem_data_relationships_stock_transfers'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    stockLocation_data:
      properties:
        type:
          default: stock_locations
          description: The resource's type
          example: stock_locations
          type: string
        attributes:
          $ref: '#/components/schemas/stockLocation_data_attributes'
        relationships:
          $ref: '#/components/schemas/stockLocation_data_relationships'
      required:
      - attributes
      - type
      type: object
    stockLocationCreate_data_attributes:
      properties:
        name:
          description: The stock location's internal name.
          example: Primary warehouse
          type: string
        label_format:
          description: "The shipping label format for this stock location. Can be\
            \ one of 'PDF', 'ZPL', 'EPL2', or 'PNG'"
          example: PDF
          type: string
        suppress_etd:
          description: Flag it if you want to skip the electronic invoice creation
            when generating the customs info for this stock location shipments.
          example: false
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    stockLocationCreate_data:
      properties:
        type:
          default: stock_locations
          description: The resource's type
          example: stock_locations
          type: string
        attributes:
          $ref: '#/components/schemas/stockLocationCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/merchantCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    stockLocationUpdate_data_attributes:
      properties:
        name:
          description: The stock location's internal name.
          example: Primary warehouse
          type: string
        label_format:
          description: "The shipping label format for this stock location. Can be\
            \ one of 'PDF', 'ZPL', 'EPL2', or 'PNG'"
          example: PDF
          type: string
        suppress_etd:
          description: Flag it if you want to skip the electronic invoice creation
            when generating the customs info for this stock location shipments.
          example: false
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stockLocationUpdate_data:
      properties:
        type:
          default: stock_locations
          description: The resource's type
          example: stock_locations
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/stockLocationUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/merchantUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    stockTransfer_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        status:
          description: "The stock transfer status, one of 'draft', 'upcoming', 'picking',\
            \ 'in_transit', 'completed', or 'cancelled'"
          example: draft
          type: string
        quantity:
          description: The stock quantity to be transferred from the origin stock
            location to destination one
          example: 2
          type: integer
        completed_at:
          description: Time at which the stock transfer was completed.
          example: 2018-01-01T12:00:00.000Z
          type: string
        cancelled_at:
          description: Time at which the stock transfer was cancelled.
          example: 2018-01-01T12:00:00.000Z
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stockTransfer_data_relationships:
      properties:
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        origin_stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        destination_stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        shipment:
          $ref: '#/components/schemas/order_data_relationships_shipments'
        line_item:
          $ref: '#/components/schemas/lineItemOption_data_relationships_line_item'
      type: object
    stockTransfer_data:
      properties:
        type:
          default: stock_transfers
          description: The resource's type
          example: stock_transfers
          type: string
        attributes:
          $ref: '#/components/schemas/stockTransfer_data_attributes'
        relationships:
          $ref: '#/components/schemas/stockTransfer_data_relationships'
      required:
      - attributes
      - type
      type: object
    stockTransferCreate_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        quantity:
          description: The stock quantity to be transferred from the origin stock
            location to destination one
          example: 2
          type: integer
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - quantity
      type: object
    stockTransferCreate_data_relationships:
      properties:
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        origin_stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        destination_stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        shipment:
          $ref: '#/components/schemas/order_data_relationships_shipments'
        line_item:
          $ref: '#/components/schemas/lineItemOption_data_relationships_line_item'
      required:
      - destination_stock_location
      - origin_stock_location
      - sku
      type: object
    stockTransferCreate_data:
      properties:
        type:
          default: stock_transfers
          description: The resource's type
          example: stock_transfers
          type: string
        attributes:
          $ref: '#/components/schemas/stockTransferCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/stockTransferCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    stockTransferUpdate_data_attributes:
      properties:
        sku_code:
          description: The code of the associated sku.
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        _upcoming:
          description: Send this attribute if you want to mark this stock transfer
            as upcoming.
          example: true
          type: boolean
        _picking:
          description: Send this attribute if you want to start picking this stock
            transfer.
          example: true
          type: boolean
        _in_transit:
          description: Send this attribute if you want to mark this stock transfer
            as in transit.
          example: true
          type: boolean
        _complete:
          description: Send this attribute if you want to complete this stock transfer.
          example: true
          type: boolean
        _cancel:
          description: Send this attribute if you want to cancel this stock transfer.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stockTransferUpdate_data_relationships:
      properties:
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        origin_stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
        destination_stock_location:
          $ref: '#/components/schemas/deliveryLeadTime_data_relationships_stock_location'
      type: object
    stockTransferUpdate_data:
      properties:
        type:
          default: stock_transfers
          description: The resource's type
          example: stock_transfers
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/stockTransferUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/stockTransferUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    stripeGateway_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        webhook_endpoint_id:
          description: "The gateway webhook endpoint ID, generated automatically."
          example: xxxx-yyyy-zzzz
          type: string
        webhook_endpoint_secret:
          description: "The gateway webhook endpoint secret, generated automatically."
          example: xxxx-yyyy-zzzz
          type: string
        webhook_endpoint_url:
          description: "The gateway webhook URL, generated automatically."
          example: https://core.commercelayer.co/webhook_callbacks/stripe_gateways/xxxxx
          type: string
      type: object
    stripeGateway_data_relationships_stripe_payments:
      properties:
        type:
          default: stripe_payments
          description: The resource's type
          example: stripe_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    stripeGateway_data_relationships:
      properties:
        payment_methods:
          $ref: '#/components/schemas/adyenGateway_data_relationships_payment_methods'
        stripe_payments:
          $ref: '#/components/schemas/stripeGateway_data_relationships_stripe_payments'
      type: object
    stripeGateway_data:
      properties:
        type:
          default: stripe_gateways
          description: The resource's type
          example: stripe_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/stripeGateway_data_attributes'
        relationships:
          $ref: '#/components/schemas/stripeGateway_data_relationships'
      required:
      - attributes
      - type
      type: object
    stripeGatewayCreate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        login:
          description: The gateway login.
          example: sk_live_xxxx-yyyy-zzzz
          type: string
        publishable_key:
          description: The gateway publishable API key.
          example: pk_live_xxxx-yyyy-zzzz
          type: string
      required:
      - login
      - name
      type: object
    stripeGatewayCreate_data:
      properties:
        type:
          default: stripe_gateways
          description: The resource's type
          example: stripe_gateways
          type: string
        attributes:
          $ref: '#/components/schemas/stripeGatewayCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    stripeGatewayUpdate_data_attributes:
      properties:
        name:
          description: The payment gateway's internal name.
          example: US payment gateway
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stripeGatewayUpdate_data:
      properties:
        type:
          default: stripe_gateways
          description: The resource's type
          example: stripe_gateways
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/stripeGatewayUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    stripePayment_data_attributes:
      properties:
        client_secret:
          description: The Stripe payment intent client secret. Required to create
            a charge through Stripe.js.
          example: pi_1234XXX_secret_5678YYY
          type: string
        publishable_key:
          description: The Stripe publishable API key.
          example: pk_live_xxxx-yyyy-zzzz
          type: string
        options:
          description: "Stripe payment options: 'setup_future_usage', 'customer',\
            \ and 'payment_method'"
          example:
            customer: cus_xxx
            payment_method: pm_xxx
          type: object
        payment_method:
          description: "Stripe 'payment_method', set by webhook."
          example:
            id: pm_xxx
          type: object
        mismatched_amounts:
          description: Indicates if the order current amount differs form the one
            of the created payment intent.
          example: false
          type: boolean
        intent_amount_cents:
          description: "The amount of the associated payment intent, in cents."
          example: 1000
          type: integer
        intent_amount_float:
          description: "The amount of the associated payment intent, float."
          example: 10.0
          type: number
        formatted_intent_amount:
          description: "The amount of the associated payment intent, formatted."
          example: "€10,00"
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stripePayment_data:
      properties:
        type:
          default: stripe_payments
          description: The resource's type
          example: stripe_payments
          type: string
        attributes:
          $ref: '#/components/schemas/stripePayment_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPayment_data_relationships'
      required:
      - attributes
      - type
      type: object
    stripePaymentCreate_data_attributes:
      properties:
        options:
          description: "Stripe payment options: 'setup_future_usage', 'customer',\
            \ and 'payment_method'"
          example:
            customer: cus_xxx
            payment_method: pm_xxx
          type: object
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stripePaymentCreate_data:
      properties:
        type:
          default: stripe_payments
          description: The resource's type
          example: stripe_payments
          type: string
        attributes:
          $ref: '#/components/schemas/stripePaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    stripePaymentUpdate_data_attributes:
      properties:
        options:
          description: "Stripe payment options: 'setup_future_usage', 'customer',\
            \ and 'payment_method'"
          example:
            customer: cus_xxx
            payment_method: pm_xxx
          type: object
        _refresh:
          description: "Send this attribute if you want to refresh the payment status,\
            \ can be used as webhooks fallback logic."
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    stripePaymentUpdate_data:
      properties:
        type:
          default: stripe_payments
          description: The resource's type
          example: stripe_payments
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/stripePaymentUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    taxCalculator_data:
      properties:
        type:
          default: tax_calculators
          description: The resource's type
          example: tax_calculators
          type: string
        attributes:
          $ref: '#/components/schemas/manualTaxCalculator_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccount_data_relationships'
      required:
      - attributes
      - type
      type: object
    taxCategory_data_attributes:
      properties:
        code:
          description: "The tax category identifier code, specific for a particular\
            \ tax calculator."
          example: "31000"
          type: string
        sku_code:
          description: The code of the associated sku
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    taxCategory_data_relationships_tax_calculator:
      oneOf:
      - $ref: '#/components/schemas/avalaraAccount'
      - $ref: '#/components/schemas/taxjarAccount'
      - $ref: '#/components/schemas/manualTaxCalculator'
      - $ref: '#/components/schemas/externalTaxCalculator'
      properties:
        type:
          default: avalara_accounts
          description: The resource's type
          enum:
          - avalara_accounts
          - taxjar_accounts
          - manual_tax_calculators
          - external_tax_calculators
          example: avalara_accounts
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    taxCategory_data_relationships:
      properties:
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        tax_calculator:
          $ref: '#/components/schemas/taxCategory_data_relationships_tax_calculator'
        attachments:
          $ref: '#/components/schemas/avalaraAccount_data_relationships_attachments'
      type: object
    taxCategory_data:
      properties:
        type:
          default: tax_categories
          description: The resource's type
          example: tax_categories
          type: string
        attributes:
          $ref: '#/components/schemas/taxCategory_data_attributes'
        relationships:
          $ref: '#/components/schemas/taxCategory_data_relationships'
      required:
      - attributes
      - type
      type: object
    taxCategoryCreate_data_attributes:
      properties:
        code:
          description: "The tax category identifier code, specific for a particular\
            \ tax calculator."
          example: "31000"
          type: string
        sku_code:
          description: The code of the associated sku
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - code
      type: object
    taxCategoryCreate_data_relationships:
      properties:
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
        tax_calculator:
          $ref: '#/components/schemas/taxCategory_data_relationships_tax_calculator'
      required:
      - sku
      - tax_calculator
      type: object
    taxCategoryCreate_data:
      properties:
        type:
          default: tax_categories
          description: The resource's type
          example: tax_categories
          type: string
        attributes:
          $ref: '#/components/schemas/taxCategoryCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/taxCategoryCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    taxCategoryUpdate_data_attributes:
      properties:
        code:
          description: "The tax category identifier code, specific for a particular\
            \ tax calculator."
          example: "31000"
          type: string
        sku_code:
          description: The code of the associated sku
          example: TSHIRTMM000000FFFFFFXLXX
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    taxCategoryUpdate_data_relationships:
      properties:
        sku:
          $ref: '#/components/schemas/bundle_data_relationships_skus'
      type: object
    taxCategoryUpdate_data:
      properties:
        type:
          default: tax_categories
          description: The resource's type
          example: tax_categories
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/taxCategoryUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/taxCategoryUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    taxRule_data_attributes:
      properties:
        name:
          description: The tax rule internal name.
          example: Fixed 22%
          type: string
        tax_rate:
          description: The tax rate for this ruke.
          example: 0.22
          type: number
        country_code_regex:
          description: The regex that will be evaluated to match the shipping address
            country code.
          example: AT|BE|BG|CZ|DK|EE|DE|HU|LV|LT
          type: string
        not_country_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address country code.
          example: AT|BE|BG|CZ|DK|EE|DE
          type: string
        state_code_regex:
          description: The regex that will be evaluated to match the shipping address
            state code.
          example: "A[KLRZ]|C[AOT]|D[CE]|FL"
          type: string
        not_state_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address state code.
          example: "A[KLRZ]|C[AOT]"
          type: string
        zip_code_regex:
          description: The regex that will be evaluated to match the shipping address
            zip code.
          example: (?i)(JE1|JE2|JE3|JE4|JE5)
          type: string
        not_zip_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping zip country code.
          example: (?i)(JE1|JE2|JE3)
          type: string
        freight_taxable:
          description: Indicates if the freight is taxable.
          example: false
          type: boolean
        payment_method_taxable:
          description: Indicates if the payment method is taxable.
          example: false
          type: boolean
        gift_card_taxable:
          description: Indicates if gift cards are taxable.
          example: false
          type: boolean
        adjustment_taxable:
          description: Indicates if adjustemnts are taxable.
          example: false
          type: boolean
        breakdown:
          description: The breakdown for this tax rule (if calculated).
          example:
            "41":
              tax_rate: 0.22
          type: object
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    taxRule_data_relationships_manual_tax_calculator:
      properties:
        type:
          default: manual_tax_calculators
          description: The resource's type
          example: manual_tax_calculators
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    taxRule_data_relationships:
      properties:
        manual_tax_calculator:
          $ref: '#/components/schemas/taxRule_data_relationships_manual_tax_calculator'
      type: object
    taxRule_data:
      properties:
        type:
          default: tax_rules
          description: The resource's type
          example: tax_rules
          type: string
        attributes:
          $ref: '#/components/schemas/taxRule_data_attributes'
        relationships:
          $ref: '#/components/schemas/taxRule_data_relationships'
      required:
      - attributes
      - type
      type: object
    taxRuleCreate_data_attributes:
      properties:
        name:
          description: The tax rule internal name.
          example: Fixed 22%
          type: string
        tax_rate:
          description: The tax rate for this ruke.
          example: 0.22
          type: number
        country_code_regex:
          description: The regex that will be evaluated to match the shipping address
            country code.
          example: AT|BE|BG|CZ|DK|EE|DE|HU|LV|LT
          type: string
        not_country_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address country code.
          example: AT|BE|BG|CZ|DK|EE|DE
          type: string
        state_code_regex:
          description: The regex that will be evaluated to match the shipping address
            state code.
          example: "A[KLRZ]|C[AOT]|D[CE]|FL"
          type: string
        not_state_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address state code.
          example: "A[KLRZ]|C[AOT]"
          type: string
        zip_code_regex:
          description: The regex that will be evaluated to match the shipping address
            zip code.
          example: (?i)(JE1|JE2|JE3|JE4|JE5)
          type: string
        not_zip_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping zip country code.
          example: (?i)(JE1|JE2|JE3)
          type: string
        freight_taxable:
          description: Indicates if the freight is taxable.
          example: false
          type: boolean
        payment_method_taxable:
          description: Indicates if the payment method is taxable.
          example: false
          type: boolean
        gift_card_taxable:
          description: Indicates if gift cards are taxable.
          example: false
          type: boolean
        adjustment_taxable:
          description: Indicates if adjustemnts are taxable.
          example: false
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - name
      type: object
    taxRuleCreate_data_relationships:
      properties:
        manual_tax_calculator:
          $ref: '#/components/schemas/taxRule_data_relationships_manual_tax_calculator'
      required:
      - manual_tax_calculator
      type: object
    taxRuleCreate_data:
      properties:
        type:
          default: tax_rules
          description: The resource's type
          example: tax_rules
          type: string
        attributes:
          $ref: '#/components/schemas/taxRuleCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/taxRuleCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    taxRuleUpdate_data_attributes:
      properties:
        name:
          description: The tax rule internal name.
          example: Fixed 22%
          type: string
        tax_rate:
          description: The tax rate for this ruke.
          example: 0.22
          type: number
        country_code_regex:
          description: The regex that will be evaluated to match the shipping address
            country code.
          example: AT|BE|BG|CZ|DK|EE|DE|HU|LV|LT
          type: string
        not_country_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address country code.
          example: AT|BE|BG|CZ|DK|EE|DE
          type: string
        state_code_regex:
          description: The regex that will be evaluated to match the shipping address
            state code.
          example: "A[KLRZ]|C[AOT]|D[CE]|FL"
          type: string
        not_state_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping address state code.
          example: "A[KLRZ]|C[AOT]"
          type: string
        zip_code_regex:
          description: The regex that will be evaluated to match the shipping address
            zip code.
          example: (?i)(JE1|JE2|JE3|JE4|JE5)
          type: string
        not_zip_code_regex:
          description: The regex that will be evaluated as negative match for the
            shipping zip country code.
          example: (?i)(JE1|JE2|JE3)
          type: string
        freight_taxable:
          description: Indicates if the freight is taxable.
          example: false
          type: boolean
        payment_method_taxable:
          description: Indicates if the payment method is taxable.
          example: false
          type: boolean
        gift_card_taxable:
          description: Indicates if gift cards are taxable.
          example: false
          type: boolean
        adjustment_taxable:
          description: Indicates if adjustemnts are taxable.
          example: false
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    taxRuleUpdate_data:
      properties:
        type:
          default: tax_rules
          description: The resource's type
          example: tax_rules
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/taxRuleUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/taxRule_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    taxjarAccount_data:
      properties:
        type:
          default: taxjar_accounts
          description: The resource's type
          example: taxjar_accounts
          type: string
        attributes:
          $ref: '#/components/schemas/manualTaxCalculator_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccount_data_relationships'
      required:
      - attributes
      - type
      type: object
    taxjarAccountCreate_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        api_key:
          description: The TaxJar account API key.
          example: TAXJAR_API_KEY
          type: string
      required:
      - api_key
      - name
      type: object
    taxjarAccountCreate_data:
      properties:
        type:
          default: taxjar_accounts
          description: The resource's type
          example: taxjar_accounts
          type: string
        attributes:
          $ref: '#/components/schemas/taxjarAccountCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccountCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    taxjarAccountUpdate_data_attributes:
      properties:
        name:
          description: The tax calculator's internal name.
          example: Personal tax calculator
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
        api_key:
          description: The TaxJar account API key.
          example: TAXJAR_API_KEY
          type: string
      type: object
    taxjarAccountUpdate_data:
      properties:
        type:
          default: taxjar_accounts
          description: The resource's type
          example: taxjar_accounts
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/taxjarAccountUpdate_data_attributes'
        relationships:
          $ref: '#/components/schemas/avalaraAccountCreate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
    transaction_data:
      properties:
        type:
          default: transactions
          description: The resource's type
          example: transactions
          type: string
        attributes:
          $ref: '#/components/schemas/refund_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - type
      type: object
    void_data_relationships:
      properties:
        order:
          $ref: '#/components/schemas/adyenPayment_data_relationships_order'
        reference_authorization:
          $ref: '#/components/schemas/capture_data_relationships_reference_authorization'
      type: object
    void_data:
      properties:
        type:
          default: voids
          description: The resource's type
          example: voids
          type: string
        attributes:
          $ref: '#/components/schemas/refund_data_attributes'
        relationships:
          $ref: '#/components/schemas/void_data_relationships'
      required:
      - attributes
      - type
      type: object
    webhook_data_attributes:
      properties:
        name:
          description: Unique name for the webhook.
          example: myorg-orders.place
          type: string
        topic:
          description: The identifier of the resource/event that will trigger the
            webhook.
          example: orders.place
          type: string
        callback_url:
          description: URI where the webhook subscription should send the POST request
            when the event occurs.
          example: https://yourapp.com/webhooks
          type: string
        include_resources:
          description: List of related resources that should be included in the webhook
            body.
          example:
          - customer
          - shipping_address
          - billing_address
          items:
            type: string
          type: array
        circuit_state:
          description: "The circuit breaker state, by default it is 'closed'. It can\
            \ become 'open' once the number of consecutive failures overlaps the specified\
            \ threshold, in such case no further calls to the failing callback are\
            \ made."
          example: closed
          type: string
        circuit_failure_count:
          description: "The number of consecutive failures recorded by the circuit\
            \ breaker associated to this webhook, will be reset on first successful\
            \ call to callback."
          example: 5
          type: integer
        id:
          description: Unique identifier for the resource (hash).
          example: XAyRWNUzyN
          type: string
        created_at:
          description: Time at which the resource was created.
          example: 2018-01-01T12:00:00.000Z
          type: string
        updated_at:
          description: Time at which the resource was last updated.
          example: 2018-01-01T12:00:00.000Z
          type: string
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    webhook_data_relationships_last_event_callbacks:
      properties:
        type:
          default: event_callbacks
          description: The resource's type
          example: event_callbacks
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
      required:
      - id
      - type
      type: object
    webhook_data_relationships:
      properties:
        last_event_callbacks:
          $ref: '#/components/schemas/webhook_data_relationships_last_event_callbacks'
      type: object
    webhook_data:
      properties:
        type:
          default: webhooks
          description: The resource's type
          example: webhooks
          type: string
        attributes:
          $ref: '#/components/schemas/webhook_data_attributes'
        relationships:
          $ref: '#/components/schemas/webhook_data_relationships'
      required:
      - attributes
      - type
      type: object
    webhookCreate_data_attributes:
      properties:
        name:
          description: Unique name for the webhook.
          example: myorg-orders.place
          type: string
        topic:
          description: The identifier of the resource/event that will trigger the
            webhook.
          example: orders.place
          type: string
        callback_url:
          description: URI where the webhook subscription should send the POST request
            when the event occurs.
          example: https://yourapp.com/webhooks
          type: string
        include_resources:
          description: List of related resources that should be included in the webhook
            body.
          example:
          - customer
          - shipping_address
          - billing_address
          items:
            type: string
          type: array
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      required:
      - callback_url
      - topic
      type: object
    webhookCreate_data:
      properties:
        type:
          default: webhooks
          description: The resource's type
          example: webhooks
          type: string
        attributes:
          $ref: '#/components/schemas/webhookCreate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    webhookUpdate_data_attributes:
      properties:
        name:
          description: Unique name for the webhook.
          example: myorg-orders.place
          type: string
        topic:
          description: The identifier of the resource/event that will trigger the
            webhook.
          example: orders.place
          type: string
        callback_url:
          description: URI where the webhook subscription should send the POST request
            when the event occurs.
          example: https://yourapp.com/webhooks
          type: string
        include_resources:
          description: List of related resources that should be included in the webhook
            body.
          example:
          - customer
          - shipping_address
          - billing_address
          items:
            type: string
          type: array
        _reset_circuit:
          description: Send this attribute if you want to reset the circuit breaker
            associated to this webhook to 'closed' state and zero failures count.
          example: true
          type: boolean
        reference:
          description: "A string that you can use to add any external identifier to\
            \ the resource. This can be useful for integrating the resource to an\
            \ external system, like an ERP, a marketing tool, a CRM, or whatever."
          example: ANY-EXTERNAL-REFEFERNCE
          type: string
        reference_origin:
          description: Any identifier of the third party system that defines the reference
            code
          example: ANY-EXTERNAL-REFEFERNCE-ORIGIN
          type: string
        metadata:
          description: Set of key-value pairs that you can attach to the resource.
            This can be useful for storing additional information about the resource
            in a structured format.
          example:
            foo: bar
          type: object
      type: object
    webhookUpdate_data:
      properties:
        type:
          default: webhooks
          description: The resource's type
          example: webhooks
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/webhookUpdate_data_attributes'
        relationships:
          properties: {}
          type: object
      required:
      - attributes
      - id
      - type
      type: object
    wireTransfer_data:
      properties:
        type:
          default: wire_transfers
          description: The resource's type
          example: wire_transfers
          type: string
        attributes:
          $ref: '#/components/schemas/billingInfoValidationRule_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - type
      type: object
    wireTransferCreate_data:
      properties:
        type:
          default: wire_transfers
          description: The resource's type
          example: wire_transfers
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentCreate_data_relationships'
      required:
      - attributes
      - type
      type: object
    wireTransferUpdate_data:
      properties:
        type:
          default: wire_transfers
          description: The resource's type
          example: wire_transfers
          type: string
        id:
          description: The resource's id
          example: XGZwpOSrWL
          type: string
        attributes:
          $ref: '#/components/schemas/adyenPaymentCreate_data_attributes'
        relationships:
          $ref: '#/components/schemas/adyenPaymentUpdate_data_relationships'
      required:
      - attributes
      - id
      - type
      type: object
