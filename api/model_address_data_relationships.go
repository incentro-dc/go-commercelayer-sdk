/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.9.4
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AddressDataRelationships struct for AddressDataRelationships
type AddressDataRelationships struct {
	Geocoder *AddressDataRelationshipsGeocoder `json:"geocoder,omitempty"`
}

// NewAddressDataRelationships instantiates a new AddressDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressDataRelationships() *AddressDataRelationships {
	this := AddressDataRelationships{}
	return &this
}

// NewAddressDataRelationshipsWithDefaults instantiates a new AddressDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressDataRelationshipsWithDefaults() *AddressDataRelationships {
	this := AddressDataRelationships{}
	return &this
}

// GetGeocoder returns the Geocoder field value if set, zero value otherwise.
func (o *AddressDataRelationships) GetGeocoder() AddressDataRelationshipsGeocoder {
	if o == nil || o.Geocoder == nil {
		var ret AddressDataRelationshipsGeocoder
		return ret
	}
	return *o.Geocoder
}

// GetGeocoderOk returns a tuple with the Geocoder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressDataRelationships) GetGeocoderOk() (*AddressDataRelationshipsGeocoder, bool) {
	if o == nil || o.Geocoder == nil {
		return nil, false
	}
	return o.Geocoder, true
}

// HasGeocoder returns a boolean if a field has been set.
func (o *AddressDataRelationships) HasGeocoder() bool {
	if o != nil && o.Geocoder != nil {
		return true
	}

	return false
}

// SetGeocoder gets a reference to the given AddressDataRelationshipsGeocoder and assigns it to the Geocoder field.
func (o *AddressDataRelationships) SetGeocoder(v AddressDataRelationshipsGeocoder) {
	o.Geocoder = &v
}

func (o AddressDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Geocoder != nil {
		toSerialize["geocoder"] = o.Geocoder
	}
	return json.Marshal(toSerialize)
}

type NullableAddressDataRelationships struct {
	value *AddressDataRelationships
	isSet bool
}

func (v NullableAddressDataRelationships) Get() *AddressDataRelationships {
	return v.value
}

func (v *NullableAddressDataRelationships) Set(val *AddressDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressDataRelationships(val *AddressDataRelationships) *NullableAddressDataRelationships {
	return &NullableAddressDataRelationships{value: val, isSet: true}
}

func (v NullableAddressDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
