/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.9.5
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AvalaraAccountDataAttributes struct for AvalaraAccountDataAttributes
type AvalaraAccountDataAttributes struct {
	// The tax calculator's internal name.
	Name *string `json:"name,omitempty"`
	// Unique identifier for the resource (hash).
	Id *string `json:"id,omitempty"`
	// Time at which the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// Time at which the resource was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// The Avalara account username.
	Username *string `json:"username,omitempty"`
	// The Avalara company code.
	CompanyCode *string `json:"company_code,omitempty"`
	// Indicates if the transaction will be recorded and visible on the Avalara website.
	CommitInvoice *string `json:"commit_invoice,omitempty"`
	// Indicates if the seller is responsible for paying/remitting the customs duty & import tax to the customs authorities.
	Ddp *string `json:"ddp,omitempty"`
}

// NewAvalaraAccountDataAttributes instantiates a new AvalaraAccountDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvalaraAccountDataAttributes() *AvalaraAccountDataAttributes {
	this := AvalaraAccountDataAttributes{}
	return &this
}

// NewAvalaraAccountDataAttributesWithDefaults instantiates a new AvalaraAccountDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvalaraAccountDataAttributesWithDefaults() *AvalaraAccountDataAttributes {
	this := AvalaraAccountDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AvalaraAccountDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AvalaraAccountDataAttributes) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *AvalaraAccountDataAttributes) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *AvalaraAccountDataAttributes) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *AvalaraAccountDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *AvalaraAccountDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *AvalaraAccountDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AvalaraAccountDataAttributes) SetUsername(v string) {
	o.Username = &v
}

// GetCompanyCode returns the CompanyCode field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetCompanyCode() string {
	if o == nil || o.CompanyCode == nil {
		var ret string
		return ret
	}
	return *o.CompanyCode
}

// GetCompanyCodeOk returns a tuple with the CompanyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetCompanyCodeOk() (*string, bool) {
	if o == nil || o.CompanyCode == nil {
		return nil, false
	}
	return o.CompanyCode, true
}

// HasCompanyCode returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasCompanyCode() bool {
	if o != nil && o.CompanyCode != nil {
		return true
	}

	return false
}

// SetCompanyCode gets a reference to the given string and assigns it to the CompanyCode field.
func (o *AvalaraAccountDataAttributes) SetCompanyCode(v string) {
	o.CompanyCode = &v
}

// GetCommitInvoice returns the CommitInvoice field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetCommitInvoice() string {
	if o == nil || o.CommitInvoice == nil {
		var ret string
		return ret
	}
	return *o.CommitInvoice
}

// GetCommitInvoiceOk returns a tuple with the CommitInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetCommitInvoiceOk() (*string, bool) {
	if o == nil || o.CommitInvoice == nil {
		return nil, false
	}
	return o.CommitInvoice, true
}

// HasCommitInvoice returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasCommitInvoice() bool {
	if o != nil && o.CommitInvoice != nil {
		return true
	}

	return false
}

// SetCommitInvoice gets a reference to the given string and assigns it to the CommitInvoice field.
func (o *AvalaraAccountDataAttributes) SetCommitInvoice(v string) {
	o.CommitInvoice = &v
}

// GetDdp returns the Ddp field value if set, zero value otherwise.
func (o *AvalaraAccountDataAttributes) GetDdp() string {
	if o == nil || o.Ddp == nil {
		var ret string
		return ret
	}
	return *o.Ddp
}

// GetDdpOk returns a tuple with the Ddp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvalaraAccountDataAttributes) GetDdpOk() (*string, bool) {
	if o == nil || o.Ddp == nil {
		return nil, false
	}
	return o.Ddp, true
}

// HasDdp returns a boolean if a field has been set.
func (o *AvalaraAccountDataAttributes) HasDdp() bool {
	if o != nil && o.Ddp != nil {
		return true
	}

	return false
}

// SetDdp gets a reference to the given string and assigns it to the Ddp field.
func (o *AvalaraAccountDataAttributes) SetDdp(v string) {
	o.Ddp = &v
}

func (o AvalaraAccountDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.CompanyCode != nil {
		toSerialize["company_code"] = o.CompanyCode
	}
	if o.CommitInvoice != nil {
		toSerialize["commit_invoice"] = o.CommitInvoice
	}
	if o.Ddp != nil {
		toSerialize["ddp"] = o.Ddp
	}
	return json.Marshal(toSerialize)
}

type NullableAvalaraAccountDataAttributes struct {
	value *AvalaraAccountDataAttributes
	isSet bool
}

func (v NullableAvalaraAccountDataAttributes) Get() *AvalaraAccountDataAttributes {
	return v.value
}

func (v *NullableAvalaraAccountDataAttributes) Set(val *AvalaraAccountDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAvalaraAccountDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAvalaraAccountDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvalaraAccountDataAttributes(val *AvalaraAccountDataAttributes) *NullableAvalaraAccountDataAttributes {
	return &NullableAvalaraAccountDataAttributes{value: val, isSet: true}
}

func (v NullableAvalaraAccountDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvalaraAccountDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
