/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.4.0
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CaptureDataRelationships struct for CaptureDataRelationships
type CaptureDataRelationships struct {
	Order                  *AdyenPaymentDataRelationshipsOrder             `json:"order,omitempty"`
	ReferenceAuthorization *CaptureDataRelationshipsReferenceAuthorization `json:"reference_authorization,omitempty"`
	Refunds                *CaptureDataRelationshipsRefunds                `json:"refunds,omitempty"`
	Events                 *AuthorizationDataRelationshipsEvents           `json:"events,omitempty"`
}

// NewCaptureDataRelationships instantiates a new CaptureDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaptureDataRelationships() *CaptureDataRelationships {
	this := CaptureDataRelationships{}
	return &this
}

// NewCaptureDataRelationshipsWithDefaults instantiates a new CaptureDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaptureDataRelationshipsWithDefaults() *CaptureDataRelationships {
	this := CaptureDataRelationships{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *CaptureDataRelationships) GetOrder() AdyenPaymentDataRelationshipsOrder {
	if o == nil || o.Order == nil {
		var ret AdyenPaymentDataRelationshipsOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDataRelationships) GetOrderOk() (*AdyenPaymentDataRelationshipsOrder, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *CaptureDataRelationships) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given AdyenPaymentDataRelationshipsOrder and assigns it to the Order field.
func (o *CaptureDataRelationships) SetOrder(v AdyenPaymentDataRelationshipsOrder) {
	o.Order = &v
}

// GetReferenceAuthorization returns the ReferenceAuthorization field value if set, zero value otherwise.
func (o *CaptureDataRelationships) GetReferenceAuthorization() CaptureDataRelationshipsReferenceAuthorization {
	if o == nil || o.ReferenceAuthorization == nil {
		var ret CaptureDataRelationshipsReferenceAuthorization
		return ret
	}
	return *o.ReferenceAuthorization
}

// GetReferenceAuthorizationOk returns a tuple with the ReferenceAuthorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDataRelationships) GetReferenceAuthorizationOk() (*CaptureDataRelationshipsReferenceAuthorization, bool) {
	if o == nil || o.ReferenceAuthorization == nil {
		return nil, false
	}
	return o.ReferenceAuthorization, true
}

// HasReferenceAuthorization returns a boolean if a field has been set.
func (o *CaptureDataRelationships) HasReferenceAuthorization() bool {
	if o != nil && o.ReferenceAuthorization != nil {
		return true
	}

	return false
}

// SetReferenceAuthorization gets a reference to the given CaptureDataRelationshipsReferenceAuthorization and assigns it to the ReferenceAuthorization field.
func (o *CaptureDataRelationships) SetReferenceAuthorization(v CaptureDataRelationshipsReferenceAuthorization) {
	o.ReferenceAuthorization = &v
}

// GetRefunds returns the Refunds field value if set, zero value otherwise.
func (o *CaptureDataRelationships) GetRefunds() CaptureDataRelationshipsRefunds {
	if o == nil || o.Refunds == nil {
		var ret CaptureDataRelationshipsRefunds
		return ret
	}
	return *o.Refunds
}

// GetRefundsOk returns a tuple with the Refunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDataRelationships) GetRefundsOk() (*CaptureDataRelationshipsRefunds, bool) {
	if o == nil || o.Refunds == nil {
		return nil, false
	}
	return o.Refunds, true
}

// HasRefunds returns a boolean if a field has been set.
func (o *CaptureDataRelationships) HasRefunds() bool {
	if o != nil && o.Refunds != nil {
		return true
	}

	return false
}

// SetRefunds gets a reference to the given CaptureDataRelationshipsRefunds and assigns it to the Refunds field.
func (o *CaptureDataRelationships) SetRefunds(v CaptureDataRelationshipsRefunds) {
	o.Refunds = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *CaptureDataRelationships) GetEvents() AuthorizationDataRelationshipsEvents {
	if o == nil || o.Events == nil {
		var ret AuthorizationDataRelationshipsEvents
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDataRelationships) GetEventsOk() (*AuthorizationDataRelationshipsEvents, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *CaptureDataRelationships) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given AuthorizationDataRelationshipsEvents and assigns it to the Events field.
func (o *CaptureDataRelationships) SetEvents(v AuthorizationDataRelationshipsEvents) {
	o.Events = &v
}

func (o CaptureDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if o.ReferenceAuthorization != nil {
		toSerialize["reference_authorization"] = o.ReferenceAuthorization
	}
	if o.Refunds != nil {
		toSerialize["refunds"] = o.Refunds
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	return json.Marshal(toSerialize)
}

type NullableCaptureDataRelationships struct {
	value *CaptureDataRelationships
	isSet bool
}

func (v NullableCaptureDataRelationships) Get() *CaptureDataRelationships {
	return v.value
}

func (v *NullableCaptureDataRelationships) Set(val *CaptureDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableCaptureDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableCaptureDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaptureDataRelationships(val *CaptureDataRelationships) *NullableCaptureDataRelationships {
	return &NullableCaptureDataRelationships{value: val, isSet: true}
}

func (v NullableCaptureDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaptureDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
