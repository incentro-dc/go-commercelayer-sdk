/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CustomerPaymentSourceResponse struct for CustomerPaymentSourceResponse
type CustomerPaymentSourceResponse struct {
	Data *CustomerPaymentSourceResponseData `json:"data,omitempty"`
}

// NewCustomerPaymentSourceResponse instantiates a new CustomerPaymentSourceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerPaymentSourceResponse() *CustomerPaymentSourceResponse {
	this := CustomerPaymentSourceResponse{}
	return &this
}

// NewCustomerPaymentSourceResponseWithDefaults instantiates a new CustomerPaymentSourceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerPaymentSourceResponseWithDefaults() *CustomerPaymentSourceResponse {
	this := CustomerPaymentSourceResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CustomerPaymentSourceResponse) GetData() CustomerPaymentSourceResponseData {
	if o == nil || o.Data == nil {
		var ret CustomerPaymentSourceResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerPaymentSourceResponse) GetDataOk() (*CustomerPaymentSourceResponseData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CustomerPaymentSourceResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given CustomerPaymentSourceResponseData and assigns it to the Data field.
func (o *CustomerPaymentSourceResponse) SetData(v CustomerPaymentSourceResponseData) {
	o.Data = &v
}

func (o CustomerPaymentSourceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerPaymentSourceResponse struct {
	value *CustomerPaymentSourceResponse
	isSet bool
}

func (v NullableCustomerPaymentSourceResponse) Get() *CustomerPaymentSourceResponse {
	return v.value
}

func (v *NullableCustomerPaymentSourceResponse) Set(val *CustomerPaymentSourceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerPaymentSourceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerPaymentSourceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerPaymentSourceResponse(val *CustomerPaymentSourceResponse) *NullableCustomerPaymentSourceResponse {
	return &NullableCustomerPaymentSourceResponse{value: val, isSet: true}
}

func (v NullableCustomerPaymentSourceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerPaymentSourceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
