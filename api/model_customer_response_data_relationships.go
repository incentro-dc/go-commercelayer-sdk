/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// CustomerResponseDataRelationships struct for CustomerResponseDataRelationships
type CustomerResponseDataRelationships struct {
	CustomerGroup          *CustomerResponseDataRelationshipsCustomerGroup          `json:"customer_group,omitempty"`
	CustomerAddresses      *CustomerResponseDataRelationshipsCustomerAddresses      `json:"customer_addresses,omitempty"`
	CustomerPaymentSources *CustomerResponseDataRelationshipsCustomerPaymentSources `json:"customer_payment_sources,omitempty"`
	CustomerSubscriptions  *CustomerResponseDataRelationshipsCustomerSubscriptions  `json:"customer_subscriptions,omitempty"`
	Orders                 *CustomerResponseDataRelationshipsOrders                 `json:"orders,omitempty"`
	OrderSubscriptions     *CustomerResponseDataRelationshipsOrderSubscriptions     `json:"order_subscriptions,omitempty"`
	Returns                *CustomerResponseDataRelationshipsReturns                `json:"returns,omitempty"`
	Attachments            *AvalaraAccountResponseDataRelationshipsAttachments      `json:"attachments,omitempty"`
	Events                 *CustomerAddressResponseDataRelationshipsEvents          `json:"events,omitempty"`
}

// NewCustomerResponseDataRelationships instantiates a new CustomerResponseDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerResponseDataRelationships() *CustomerResponseDataRelationships {
	this := CustomerResponseDataRelationships{}
	return &this
}

// NewCustomerResponseDataRelationshipsWithDefaults instantiates a new CustomerResponseDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerResponseDataRelationshipsWithDefaults() *CustomerResponseDataRelationships {
	this := CustomerResponseDataRelationships{}
	return &this
}

// GetCustomerGroup returns the CustomerGroup field value if set, zero value otherwise.
func (o *CustomerResponseDataRelationships) GetCustomerGroup() CustomerResponseDataRelationshipsCustomerGroup {
	if o == nil || o.CustomerGroup == nil {
		var ret CustomerResponseDataRelationshipsCustomerGroup
		return ret
	}
	return *o.CustomerGroup
}

// GetCustomerGroupOk returns a tuple with the CustomerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResponseDataRelationships) GetCustomerGroupOk() (*CustomerResponseDataRelationshipsCustomerGroup, bool) {
	if o == nil || o.CustomerGroup == nil {
		return nil, false
	}
	return o.CustomerGroup, true
}

// HasCustomerGroup returns a boolean if a field has been set.
func (o *CustomerResponseDataRelationships) HasCustomerGroup() bool {
	if o != nil && o.CustomerGroup != nil {
		return true
	}

	return false
}

// SetCustomerGroup gets a reference to the given CustomerResponseDataRelationshipsCustomerGroup and assigns it to the CustomerGroup field.
func (o *CustomerResponseDataRelationships) SetCustomerGroup(v CustomerResponseDataRelationshipsCustomerGroup) {
	o.CustomerGroup = &v
}

// GetCustomerAddresses returns the CustomerAddresses field value if set, zero value otherwise.
func (o *CustomerResponseDataRelationships) GetCustomerAddresses() CustomerResponseDataRelationshipsCustomerAddresses {
	if o == nil || o.CustomerAddresses == nil {
		var ret CustomerResponseDataRelationshipsCustomerAddresses
		return ret
	}
	return *o.CustomerAddresses
}

// GetCustomerAddressesOk returns a tuple with the CustomerAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResponseDataRelationships) GetCustomerAddressesOk() (*CustomerResponseDataRelationshipsCustomerAddresses, bool) {
	if o == nil || o.CustomerAddresses == nil {
		return nil, false
	}
	return o.CustomerAddresses, true
}

// HasCustomerAddresses returns a boolean if a field has been set.
func (o *CustomerResponseDataRelationships) HasCustomerAddresses() bool {
	if o != nil && o.CustomerAddresses != nil {
		return true
	}

	return false
}

// SetCustomerAddresses gets a reference to the given CustomerResponseDataRelationshipsCustomerAddresses and assigns it to the CustomerAddresses field.
func (o *CustomerResponseDataRelationships) SetCustomerAddresses(v CustomerResponseDataRelationshipsCustomerAddresses) {
	o.CustomerAddresses = &v
}

// GetCustomerPaymentSources returns the CustomerPaymentSources field value if set, zero value otherwise.
func (o *CustomerResponseDataRelationships) GetCustomerPaymentSources() CustomerResponseDataRelationshipsCustomerPaymentSources {
	if o == nil || o.CustomerPaymentSources == nil {
		var ret CustomerResponseDataRelationshipsCustomerPaymentSources
		return ret
	}
	return *o.CustomerPaymentSources
}

// GetCustomerPaymentSourcesOk returns a tuple with the CustomerPaymentSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResponseDataRelationships) GetCustomerPaymentSourcesOk() (*CustomerResponseDataRelationshipsCustomerPaymentSources, bool) {
	if o == nil || o.CustomerPaymentSources == nil {
		return nil, false
	}
	return o.CustomerPaymentSources, true
}

// HasCustomerPaymentSources returns a boolean if a field has been set.
func (o *CustomerResponseDataRelationships) HasCustomerPaymentSources() bool {
	if o != nil && o.CustomerPaymentSources != nil {
		return true
	}

	return false
}

// SetCustomerPaymentSources gets a reference to the given CustomerResponseDataRelationshipsCustomerPaymentSources and assigns it to the CustomerPaymentSources field.
func (o *CustomerResponseDataRelationships) SetCustomerPaymentSources(v CustomerResponseDataRelationshipsCustomerPaymentSources) {
	o.CustomerPaymentSources = &v
}

// GetCustomerSubscriptions returns the CustomerSubscriptions field value if set, zero value otherwise.
func (o *CustomerResponseDataRelationships) GetCustomerSubscriptions() CustomerResponseDataRelationshipsCustomerSubscriptions {
	if o == nil || o.CustomerSubscriptions == nil {
		var ret CustomerResponseDataRelationshipsCustomerSubscriptions
		return ret
	}
	return *o.CustomerSubscriptions
}

// GetCustomerSubscriptionsOk returns a tuple with the CustomerSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResponseDataRelationships) GetCustomerSubscriptionsOk() (*CustomerResponseDataRelationshipsCustomerSubscriptions, bool) {
	if o == nil || o.CustomerSubscriptions == nil {
		return nil, false
	}
	return o.CustomerSubscriptions, true
}

// HasCustomerSubscriptions returns a boolean if a field has been set.
func (o *CustomerResponseDataRelationships) HasCustomerSubscriptions() bool {
	if o != nil && o.CustomerSubscriptions != nil {
		return true
	}

	return false
}

// SetCustomerSubscriptions gets a reference to the given CustomerResponseDataRelationshipsCustomerSubscriptions and assigns it to the CustomerSubscriptions field.
func (o *CustomerResponseDataRelationships) SetCustomerSubscriptions(v CustomerResponseDataRelationshipsCustomerSubscriptions) {
	o.CustomerSubscriptions = &v
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *CustomerResponseDataRelationships) GetOrders() CustomerResponseDataRelationshipsOrders {
	if o == nil || o.Orders == nil {
		var ret CustomerResponseDataRelationshipsOrders
		return ret
	}
	return *o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResponseDataRelationships) GetOrdersOk() (*CustomerResponseDataRelationshipsOrders, bool) {
	if o == nil || o.Orders == nil {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *CustomerResponseDataRelationships) HasOrders() bool {
	if o != nil && o.Orders != nil {
		return true
	}

	return false
}

// SetOrders gets a reference to the given CustomerResponseDataRelationshipsOrders and assigns it to the Orders field.
func (o *CustomerResponseDataRelationships) SetOrders(v CustomerResponseDataRelationshipsOrders) {
	o.Orders = &v
}

// GetOrderSubscriptions returns the OrderSubscriptions field value if set, zero value otherwise.
func (o *CustomerResponseDataRelationships) GetOrderSubscriptions() CustomerResponseDataRelationshipsOrderSubscriptions {
	if o == nil || o.OrderSubscriptions == nil {
		var ret CustomerResponseDataRelationshipsOrderSubscriptions
		return ret
	}
	return *o.OrderSubscriptions
}

// GetOrderSubscriptionsOk returns a tuple with the OrderSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResponseDataRelationships) GetOrderSubscriptionsOk() (*CustomerResponseDataRelationshipsOrderSubscriptions, bool) {
	if o == nil || o.OrderSubscriptions == nil {
		return nil, false
	}
	return o.OrderSubscriptions, true
}

// HasOrderSubscriptions returns a boolean if a field has been set.
func (o *CustomerResponseDataRelationships) HasOrderSubscriptions() bool {
	if o != nil && o.OrderSubscriptions != nil {
		return true
	}

	return false
}

// SetOrderSubscriptions gets a reference to the given CustomerResponseDataRelationshipsOrderSubscriptions and assigns it to the OrderSubscriptions field.
func (o *CustomerResponseDataRelationships) SetOrderSubscriptions(v CustomerResponseDataRelationshipsOrderSubscriptions) {
	o.OrderSubscriptions = &v
}

// GetReturns returns the Returns field value if set, zero value otherwise.
func (o *CustomerResponseDataRelationships) GetReturns() CustomerResponseDataRelationshipsReturns {
	if o == nil || o.Returns == nil {
		var ret CustomerResponseDataRelationshipsReturns
		return ret
	}
	return *o.Returns
}

// GetReturnsOk returns a tuple with the Returns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResponseDataRelationships) GetReturnsOk() (*CustomerResponseDataRelationshipsReturns, bool) {
	if o == nil || o.Returns == nil {
		return nil, false
	}
	return o.Returns, true
}

// HasReturns returns a boolean if a field has been set.
func (o *CustomerResponseDataRelationships) HasReturns() bool {
	if o != nil && o.Returns != nil {
		return true
	}

	return false
}

// SetReturns gets a reference to the given CustomerResponseDataRelationshipsReturns and assigns it to the Returns field.
func (o *CustomerResponseDataRelationships) SetReturns(v CustomerResponseDataRelationshipsReturns) {
	o.Returns = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *CustomerResponseDataRelationships) GetAttachments() AvalaraAccountResponseDataRelationshipsAttachments {
	if o == nil || o.Attachments == nil {
		var ret AvalaraAccountResponseDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResponseDataRelationships) GetAttachmentsOk() (*AvalaraAccountResponseDataRelationshipsAttachments, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *CustomerResponseDataRelationships) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AvalaraAccountResponseDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *CustomerResponseDataRelationships) SetAttachments(v AvalaraAccountResponseDataRelationshipsAttachments) {
	o.Attachments = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *CustomerResponseDataRelationships) GetEvents() CustomerAddressResponseDataRelationshipsEvents {
	if o == nil || o.Events == nil {
		var ret CustomerAddressResponseDataRelationshipsEvents
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResponseDataRelationships) GetEventsOk() (*CustomerAddressResponseDataRelationshipsEvents, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *CustomerResponseDataRelationships) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given CustomerAddressResponseDataRelationshipsEvents and assigns it to the Events field.
func (o *CustomerResponseDataRelationships) SetEvents(v CustomerAddressResponseDataRelationshipsEvents) {
	o.Events = &v
}

func (o CustomerResponseDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomerGroup != nil {
		toSerialize["customer_group"] = o.CustomerGroup
	}
	if o.CustomerAddresses != nil {
		toSerialize["customer_addresses"] = o.CustomerAddresses
	}
	if o.CustomerPaymentSources != nil {
		toSerialize["customer_payment_sources"] = o.CustomerPaymentSources
	}
	if o.CustomerSubscriptions != nil {
		toSerialize["customer_subscriptions"] = o.CustomerSubscriptions
	}
	if o.Orders != nil {
		toSerialize["orders"] = o.Orders
	}
	if o.OrderSubscriptions != nil {
		toSerialize["order_subscriptions"] = o.OrderSubscriptions
	}
	if o.Returns != nil {
		toSerialize["returns"] = o.Returns
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerResponseDataRelationships struct {
	value *CustomerResponseDataRelationships
	isSet bool
}

func (v NullableCustomerResponseDataRelationships) Get() *CustomerResponseDataRelationships {
	return v.value
}

func (v *NullableCustomerResponseDataRelationships) Set(val *CustomerResponseDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerResponseDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerResponseDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerResponseDataRelationships(val *CustomerResponseDataRelationships) *NullableCustomerResponseDataRelationships {
	return &NullableCustomerResponseDataRelationships{value: val, isSet: true}
}

func (v NullableCustomerResponseDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerResponseDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
