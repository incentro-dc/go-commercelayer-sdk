/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ExternalTaxCalculatorDataRelationships struct for ExternalTaxCalculatorDataRelationships
type ExternalTaxCalculatorDataRelationships struct {
	Markets     *AvalaraAccountDataRelationshipsMarkets     `json:"markets,omitempty"`
	Attachments *AvalaraAccountDataRelationshipsAttachments `json:"attachments,omitempty"`
}

// NewExternalTaxCalculatorDataRelationships instantiates a new ExternalTaxCalculatorDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalTaxCalculatorDataRelationships() *ExternalTaxCalculatorDataRelationships {
	this := ExternalTaxCalculatorDataRelationships{}
	return &this
}

// NewExternalTaxCalculatorDataRelationshipsWithDefaults instantiates a new ExternalTaxCalculatorDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalTaxCalculatorDataRelationshipsWithDefaults() *ExternalTaxCalculatorDataRelationships {
	this := ExternalTaxCalculatorDataRelationships{}
	return &this
}

// GetMarkets returns the Markets field value if set, zero value otherwise.
func (o *ExternalTaxCalculatorDataRelationships) GetMarkets() AvalaraAccountDataRelationshipsMarkets {
	if o == nil || o.Markets == nil {
		var ret AvalaraAccountDataRelationshipsMarkets
		return ret
	}
	return *o.Markets
}

// GetMarketsOk returns a tuple with the Markets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalTaxCalculatorDataRelationships) GetMarketsOk() (*AvalaraAccountDataRelationshipsMarkets, bool) {
	if o == nil || o.Markets == nil {
		return nil, false
	}
	return o.Markets, true
}

// HasMarkets returns a boolean if a field has been set.
func (o *ExternalTaxCalculatorDataRelationships) HasMarkets() bool {
	if o != nil && o.Markets != nil {
		return true
	}

	return false
}

// SetMarkets gets a reference to the given AvalaraAccountDataRelationshipsMarkets and assigns it to the Markets field.
func (o *ExternalTaxCalculatorDataRelationships) SetMarkets(v AvalaraAccountDataRelationshipsMarkets) {
	o.Markets = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ExternalTaxCalculatorDataRelationships) GetAttachments() AvalaraAccountDataRelationshipsAttachments {
	if o == nil || o.Attachments == nil {
		var ret AvalaraAccountDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalTaxCalculatorDataRelationships) GetAttachmentsOk() (*AvalaraAccountDataRelationshipsAttachments, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ExternalTaxCalculatorDataRelationships) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AvalaraAccountDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *ExternalTaxCalculatorDataRelationships) SetAttachments(v AvalaraAccountDataRelationshipsAttachments) {
	o.Attachments = &v
}

func (o ExternalTaxCalculatorDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Markets != nil {
		toSerialize["markets"] = o.Markets
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	return json.Marshal(toSerialize)
}

type NullableExternalTaxCalculatorDataRelationships struct {
	value *ExternalTaxCalculatorDataRelationships
	isSet bool
}

func (v NullableExternalTaxCalculatorDataRelationships) Get() *ExternalTaxCalculatorDataRelationships {
	return v.value
}

func (v *NullableExternalTaxCalculatorDataRelationships) Set(val *ExternalTaxCalculatorDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalTaxCalculatorDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalTaxCalculatorDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalTaxCalculatorDataRelationships(val *ExternalTaxCalculatorDataRelationships) *NullableExternalTaxCalculatorDataRelationships {
	return &NullableExternalTaxCalculatorDataRelationships{value: val, isSet: true}
}

func (v NullableExternalTaxCalculatorDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalTaxCalculatorDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
