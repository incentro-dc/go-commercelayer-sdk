/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GETCleanups200ResponseDataInnerAttributes struct for GETCleanups200ResponseDataInnerAttributes
type GETCleanups200ResponseDataInnerAttributes struct {
	// The type of resource being cleaned.
	ResourceType interface{} `json:"resource_type,omitempty"`
	// The cleanup job status. One of 'pending' (default), 'in_progress', 'interrupted', or 'completed'.
	Status interface{} `json:"status,omitempty"`
	// Time at which the cleanup was started.
	StartedAt interface{} `json:"started_at,omitempty"`
	// Time at which the cleanup was completed.
	CompletedAt interface{} `json:"completed_at,omitempty"`
	// Time at which the cleanup was interrupted.
	InterruptedAt interface{} `json:"interrupted_at,omitempty"`
	// The filters used to select the records to be cleaned.
	Filters interface{} `json:"filters,omitempty"`
	// Indicates the number of records to be cleaned.
	RecordsCount interface{} `json:"records_count,omitempty"`
	// Indicates the number of cleanup errors, if any.
	ErrorsCount interface{} `json:"errors_count,omitempty"`
	// Indicates the number of records that have been cleaned.
	ProcessedCount interface{} `json:"processed_count,omitempty"`
	// Contains the cleanup errors, if any.
	ErrorsLog interface{} `json:"errors_log,omitempty"`
	// Time at which the resource was created.
	CreatedAt interface{} `json:"created_at,omitempty"`
	// Time at which the resource was last updated.
	UpdatedAt interface{} `json:"updated_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewGETCleanups200ResponseDataInnerAttributes instantiates a new GETCleanups200ResponseDataInnerAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGETCleanups200ResponseDataInnerAttributes() *GETCleanups200ResponseDataInnerAttributes {
	this := GETCleanups200ResponseDataInnerAttributes{}
	return &this
}

// NewGETCleanups200ResponseDataInnerAttributesWithDefaults instantiates a new GETCleanups200ResponseDataInnerAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGETCleanups200ResponseDataInnerAttributesWithDefaults() *GETCleanups200ResponseDataInnerAttributes {
	this := GETCleanups200ResponseDataInnerAttributes{}
	return &this
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetResourceType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetResourceTypeOk() (*interface{}, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given interface{} and assigns it to the ResourceType field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetResourceType(v interface{}) {
	o.ResourceType = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetStatus() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetStatusOk() (*interface{}, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given interface{} and assigns it to the Status field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetStatus(v interface{}) {
	o.Status = v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetStartedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetStartedAtOk() (*interface{}, bool) {
	if o == nil || o.StartedAt == nil {
		return nil, false
	}
	return &o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasStartedAt() bool {
	if o != nil && o.StartedAt != nil {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given interface{} and assigns it to the StartedAt field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetStartedAt(v interface{}) {
	o.StartedAt = v
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetCompletedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetCompletedAtOk() (*interface{}, bool) {
	if o == nil || o.CompletedAt == nil {
		return nil, false
	}
	return &o.CompletedAt, true
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasCompletedAt() bool {
	if o != nil && o.CompletedAt != nil {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given interface{} and assigns it to the CompletedAt field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetCompletedAt(v interface{}) {
	o.CompletedAt = v
}

// GetInterruptedAt returns the InterruptedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetInterruptedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.InterruptedAt
}

// GetInterruptedAtOk returns a tuple with the InterruptedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetInterruptedAtOk() (*interface{}, bool) {
	if o == nil || o.InterruptedAt == nil {
		return nil, false
	}
	return &o.InterruptedAt, true
}

// HasInterruptedAt returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasInterruptedAt() bool {
	if o != nil && o.InterruptedAt != nil {
		return true
	}

	return false
}

// SetInterruptedAt gets a reference to the given interface{} and assigns it to the InterruptedAt field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetInterruptedAt(v interface{}) {
	o.InterruptedAt = v
}

// GetFilters returns the Filters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetFilters() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetFiltersOk() (*interface{}, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return &o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given interface{} and assigns it to the Filters field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetFilters(v interface{}) {
	o.Filters = v
}

// GetRecordsCount returns the RecordsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetRecordsCount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RecordsCount
}

// GetRecordsCountOk returns a tuple with the RecordsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetRecordsCountOk() (*interface{}, bool) {
	if o == nil || o.RecordsCount == nil {
		return nil, false
	}
	return &o.RecordsCount, true
}

// HasRecordsCount returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasRecordsCount() bool {
	if o != nil && o.RecordsCount != nil {
		return true
	}

	return false
}

// SetRecordsCount gets a reference to the given interface{} and assigns it to the RecordsCount field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetRecordsCount(v interface{}) {
	o.RecordsCount = v
}

// GetErrorsCount returns the ErrorsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetErrorsCount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ErrorsCount
}

// GetErrorsCountOk returns a tuple with the ErrorsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetErrorsCountOk() (*interface{}, bool) {
	if o == nil || o.ErrorsCount == nil {
		return nil, false
	}
	return &o.ErrorsCount, true
}

// HasErrorsCount returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasErrorsCount() bool {
	if o != nil && o.ErrorsCount != nil {
		return true
	}

	return false
}

// SetErrorsCount gets a reference to the given interface{} and assigns it to the ErrorsCount field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetErrorsCount(v interface{}) {
	o.ErrorsCount = v
}

// GetProcessedCount returns the ProcessedCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetProcessedCount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ProcessedCount
}

// GetProcessedCountOk returns a tuple with the ProcessedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetProcessedCountOk() (*interface{}, bool) {
	if o == nil || o.ProcessedCount == nil {
		return nil, false
	}
	return &o.ProcessedCount, true
}

// HasProcessedCount returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasProcessedCount() bool {
	if o != nil && o.ProcessedCount != nil {
		return true
	}

	return false
}

// SetProcessedCount gets a reference to the given interface{} and assigns it to the ProcessedCount field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetProcessedCount(v interface{}) {
	o.ProcessedCount = v
}

// GetErrorsLog returns the ErrorsLog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetErrorsLog() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ErrorsLog
}

// GetErrorsLogOk returns a tuple with the ErrorsLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetErrorsLogOk() (*interface{}, bool) {
	if o == nil || o.ErrorsLog == nil {
		return nil, false
	}
	return &o.ErrorsLog, true
}

// HasErrorsLog returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasErrorsLog() bool {
	if o != nil && o.ErrorsLog != nil {
		return true
	}

	return false
}

// SetErrorsLog gets a reference to the given interface{} and assigns it to the ErrorsLog field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetErrorsLog(v interface{}) {
	o.ErrorsLog = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetCreatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetCreatedAtOk() (*interface{}, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given interface{} and assigns it to the CreatedAt field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetCreatedAt(v interface{}) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetUpdatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetUpdatedAtOk() (*interface{}, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given interface{} and assigns it to the UpdatedAt field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetUpdatedAt(v interface{}) {
	o.UpdatedAt = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETCleanups200ResponseDataInnerAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETCleanups200ResponseDataInnerAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GETCleanups200ResponseDataInnerAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *GETCleanups200ResponseDataInnerAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o GETCleanups200ResponseDataInnerAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceType != nil {
		toSerialize["resource_type"] = o.ResourceType
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StartedAt != nil {
		toSerialize["started_at"] = o.StartedAt
	}
	if o.CompletedAt != nil {
		toSerialize["completed_at"] = o.CompletedAt
	}
	if o.InterruptedAt != nil {
		toSerialize["interrupted_at"] = o.InterruptedAt
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	if o.RecordsCount != nil {
		toSerialize["records_count"] = o.RecordsCount
	}
	if o.ErrorsCount != nil {
		toSerialize["errors_count"] = o.ErrorsCount
	}
	if o.ProcessedCount != nil {
		toSerialize["processed_count"] = o.ProcessedCount
	}
	if o.ErrorsLog != nil {
		toSerialize["errors_log"] = o.ErrorsLog
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableGETCleanups200ResponseDataInnerAttributes struct {
	value *GETCleanups200ResponseDataInnerAttributes
	isSet bool
}

func (v NullableGETCleanups200ResponseDataInnerAttributes) Get() *GETCleanups200ResponseDataInnerAttributes {
	return v.value
}

func (v *NullableGETCleanups200ResponseDataInnerAttributes) Set(val *GETCleanups200ResponseDataInnerAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGETCleanups200ResponseDataInnerAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGETCleanups200ResponseDataInnerAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETCleanups200ResponseDataInnerAttributes(val *GETCleanups200ResponseDataInnerAttributes) *NullableGETCleanups200ResponseDataInnerAttributes {
	return &NullableGETCleanups200ResponseDataInnerAttributes{value: val, isSet: true}
}

func (v NullableGETCleanups200ResponseDataInnerAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETCleanups200ResponseDataInnerAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
