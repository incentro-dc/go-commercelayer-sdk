/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GETCustomers200Response struct for GETCustomers200Response
type GETCustomers200Response struct {
	Data []GETCustomers200ResponseDataInner `json:"data,omitempty"`
}

// NewGETCustomers200Response instantiates a new GETCustomers200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGETCustomers200Response() *GETCustomers200Response {
	this := GETCustomers200Response{}
	return &this
}

// NewGETCustomers200ResponseWithDefaults instantiates a new GETCustomers200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGETCustomers200ResponseWithDefaults() *GETCustomers200Response {
	this := GETCustomers200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GETCustomers200Response) GetData() []GETCustomers200ResponseDataInner {
	if o == nil || o.Data == nil {
		var ret []GETCustomers200ResponseDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETCustomers200Response) GetDataOk() ([]GETCustomers200ResponseDataInner, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GETCustomers200Response) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []GETCustomers200ResponseDataInner and assigns it to the Data field.
func (o *GETCustomers200Response) SetData(v []GETCustomers200ResponseDataInner) {
	o.Data = v
}

func (o GETCustomers200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGETCustomers200Response struct {
	value *GETCustomers200Response
	isSet bool
}

func (v NullableGETCustomers200Response) Get() *GETCustomers200Response {
	return v.value
}

func (v *NullableGETCustomers200Response) Set(val *GETCustomers200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGETCustomers200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGETCustomers200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETCustomers200Response(val *GETCustomers200Response) *NullableGETCustomers200Response {
	return &NullableGETCustomers200Response{value: val, isSet: true}
}

func (v NullableGETCustomers200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETCustomers200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
