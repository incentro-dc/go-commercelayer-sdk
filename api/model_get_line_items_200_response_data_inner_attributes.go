/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GETLineItems200ResponseDataInnerAttributes struct for GETLineItems200ResponseDataInnerAttributes
type GETLineItems200ResponseDataInnerAttributes struct {
	// The code of the associated SKU.
	SkuCode *string `json:"sku_code,omitempty"`
	// The code of the associated bundle.
	BundleCode *string `json:"bundle_code,omitempty"`
	// The line item quantity.
	Quantity *int32 `json:"quantity,omitempty"`
	// The international 3-letter currency code as defined by the ISO 4217 standard, automatically inherited from the order's market.
	CurrencyCode *string `json:"currency_code,omitempty"`
	// The unit amount of the line item, in cents. Can be specified without an item, otherwise is automatically populated from the price list associated to the order's market.
	UnitAmountCents *int32 `json:"unit_amount_cents,omitempty"`
	// The unit amount of the line item, float. This can be useful to track the purchase on thrid party systems, e.g Google Analyitcs Enhanced Ecommerce.
	UnitAmountFloat *float32 `json:"unit_amount_float,omitempty"`
	// The unit amount of the line item, formatted. This can be useful to display the amount with currency in you views.
	FormattedUnitAmount *string `json:"formatted_unit_amount,omitempty"`
	// The options amount of the line item, in cents.
	OptionsAmountCents *int32 `json:"options_amount_cents,omitempty"`
	// The options amount of the line item, float.
	OptionsAmountFloat *float32 `json:"options_amount_float,omitempty"`
	// The options amount of the line item, formatted.
	FormattedOptionsAmount *string `json:"formatted_options_amount,omitempty"`
	// The discount applied to the line item, in cents. When you apply a discount to an order, this is automatically calculated basing on the line item total_amount_cents value.
	DiscountCents *int32 `json:"discount_cents,omitempty"`
	// The discount applied to the line item, float. When you apply a discount to an order, this is automatically calculated basing on the line item total_amount_cents value.
	DiscountFloat *float32 `json:"discount_float,omitempty"`
	// The discount applied to the line item, fromatted. When you apply a discount to an order, this is automatically calculated basing on the line item total_amount_cents value.
	FormattedDiscount *string `json:"formatted_discount,omitempty"`
	// Calculated as unit amount x quantity + options amount, in cents.
	TotalAmountCents *int32 `json:"total_amount_cents,omitempty"`
	// Calculated as unit amount x quantity + options amount, float. This can be useful to track the purchase on thrid party systems, e.g Google Analyitcs Enhanced Ecommerce.
	TotalAmountFloat *float32 `json:"total_amount_float,omitempty"`
	// Calculated as unit amount x quantity + options amount, formatted. This can be useful to display the amount with currency in you views.
	FormattedTotalAmount *string `json:"formatted_total_amount,omitempty"`
	// The collected tax amount, otherwise calculated as total amount cents - discount cent * tax rate, in cents.
	TaxAmountCents *int32 `json:"tax_amount_cents,omitempty"`
	// The collected tax amount, otherwise calculated as total amount cents - discount cent * tax rate, float.
	TaxAmountFloat *float32 `json:"tax_amount_float,omitempty"`
	// The collected tax amount, otherwise calculated as total amount cents - discount cent * tax rate, formatted.
	FormattedTaxAmount *string `json:"formatted_tax_amount,omitempty"`
	// The name of the line item. When blank, it gets populated with the name of the associated item (if present).
	Name *string `json:"name,omitempty"`
	// The image_url of the line item. When blank, it gets populated with the image_url of the associated item (if present, SKU only).
	ImageUrl *string `json:"image_url,omitempty"`
	// The discount breakdown for this line item (if calculated).
	DiscountBreakdown map[string]interface{} `json:"discount_breakdown,omitempty"`
	// The tax rate for this line item (if calculated).
	TaxRate *float32 `json:"tax_rate,omitempty"`
	// The tax breakdown for this line item (if calculated).
	TaxBreakdown map[string]interface{} `json:"tax_breakdown,omitempty"`
	// The type of the associate item. Can be one of 'sku', 'bundle', 'shipment', 'payment_method', 'adjustment', 'gift_card', or a valid promotion type.
	ItemType *string `json:"item_type,omitempty"`
	// Unique identifier for the resource (hash).
	Id *string `json:"id,omitempty"`
	// Time at which the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// Time at which the resource was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewGETLineItems200ResponseDataInnerAttributes instantiates a new GETLineItems200ResponseDataInnerAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGETLineItems200ResponseDataInnerAttributes() *GETLineItems200ResponseDataInnerAttributes {
	this := GETLineItems200ResponseDataInnerAttributes{}
	return &this
}

// NewGETLineItems200ResponseDataInnerAttributesWithDefaults instantiates a new GETLineItems200ResponseDataInnerAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGETLineItems200ResponseDataInnerAttributesWithDefaults() *GETLineItems200ResponseDataInnerAttributes {
	this := GETLineItems200ResponseDataInnerAttributes{}
	return &this
}

// GetSkuCode returns the SkuCode field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetSkuCode() string {
	if o == nil || o.SkuCode == nil {
		var ret string
		return ret
	}
	return *o.SkuCode
}

// GetSkuCodeOk returns a tuple with the SkuCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetSkuCodeOk() (*string, bool) {
	if o == nil || o.SkuCode == nil {
		return nil, false
	}
	return o.SkuCode, true
}

// HasSkuCode returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasSkuCode() bool {
	if o != nil && o.SkuCode != nil {
		return true
	}

	return false
}

// SetSkuCode gets a reference to the given string and assigns it to the SkuCode field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetSkuCode(v string) {
	o.SkuCode = &v
}

// GetBundleCode returns the BundleCode field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetBundleCode() string {
	if o == nil || o.BundleCode == nil {
		var ret string
		return ret
	}
	return *o.BundleCode
}

// GetBundleCodeOk returns a tuple with the BundleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetBundleCodeOk() (*string, bool) {
	if o == nil || o.BundleCode == nil {
		return nil, false
	}
	return o.BundleCode, true
}

// HasBundleCode returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasBundleCode() bool {
	if o != nil && o.BundleCode != nil {
		return true
	}

	return false
}

// SetBundleCode gets a reference to the given string and assigns it to the BundleCode field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetBundleCode(v string) {
	o.BundleCode = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetQuantity() int32 {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetQuantityOk() (*int32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || o.CurrencyCode == nil {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode != nil {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetUnitAmountCents returns the UnitAmountCents field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetUnitAmountCents() int32 {
	if o == nil || o.UnitAmountCents == nil {
		var ret int32
		return ret
	}
	return *o.UnitAmountCents
}

// GetUnitAmountCentsOk returns a tuple with the UnitAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetUnitAmountCentsOk() (*int32, bool) {
	if o == nil || o.UnitAmountCents == nil {
		return nil, false
	}
	return o.UnitAmountCents, true
}

// HasUnitAmountCents returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasUnitAmountCents() bool {
	if o != nil && o.UnitAmountCents != nil {
		return true
	}

	return false
}

// SetUnitAmountCents gets a reference to the given int32 and assigns it to the UnitAmountCents field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetUnitAmountCents(v int32) {
	o.UnitAmountCents = &v
}

// GetUnitAmountFloat returns the UnitAmountFloat field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetUnitAmountFloat() float32 {
	if o == nil || o.UnitAmountFloat == nil {
		var ret float32
		return ret
	}
	return *o.UnitAmountFloat
}

// GetUnitAmountFloatOk returns a tuple with the UnitAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetUnitAmountFloatOk() (*float32, bool) {
	if o == nil || o.UnitAmountFloat == nil {
		return nil, false
	}
	return o.UnitAmountFloat, true
}

// HasUnitAmountFloat returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasUnitAmountFloat() bool {
	if o != nil && o.UnitAmountFloat != nil {
		return true
	}

	return false
}

// SetUnitAmountFloat gets a reference to the given float32 and assigns it to the UnitAmountFloat field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetUnitAmountFloat(v float32) {
	o.UnitAmountFloat = &v
}

// GetFormattedUnitAmount returns the FormattedUnitAmount field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedUnitAmount() string {
	if o == nil || o.FormattedUnitAmount == nil {
		var ret string
		return ret
	}
	return *o.FormattedUnitAmount
}

// GetFormattedUnitAmountOk returns a tuple with the FormattedUnitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedUnitAmountOk() (*string, bool) {
	if o == nil || o.FormattedUnitAmount == nil {
		return nil, false
	}
	return o.FormattedUnitAmount, true
}

// HasFormattedUnitAmount returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasFormattedUnitAmount() bool {
	if o != nil && o.FormattedUnitAmount != nil {
		return true
	}

	return false
}

// SetFormattedUnitAmount gets a reference to the given string and assigns it to the FormattedUnitAmount field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetFormattedUnitAmount(v string) {
	o.FormattedUnitAmount = &v
}

// GetOptionsAmountCents returns the OptionsAmountCents field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetOptionsAmountCents() int32 {
	if o == nil || o.OptionsAmountCents == nil {
		var ret int32
		return ret
	}
	return *o.OptionsAmountCents
}

// GetOptionsAmountCentsOk returns a tuple with the OptionsAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetOptionsAmountCentsOk() (*int32, bool) {
	if o == nil || o.OptionsAmountCents == nil {
		return nil, false
	}
	return o.OptionsAmountCents, true
}

// HasOptionsAmountCents returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasOptionsAmountCents() bool {
	if o != nil && o.OptionsAmountCents != nil {
		return true
	}

	return false
}

// SetOptionsAmountCents gets a reference to the given int32 and assigns it to the OptionsAmountCents field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetOptionsAmountCents(v int32) {
	o.OptionsAmountCents = &v
}

// GetOptionsAmountFloat returns the OptionsAmountFloat field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetOptionsAmountFloat() float32 {
	if o == nil || o.OptionsAmountFloat == nil {
		var ret float32
		return ret
	}
	return *o.OptionsAmountFloat
}

// GetOptionsAmountFloatOk returns a tuple with the OptionsAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetOptionsAmountFloatOk() (*float32, bool) {
	if o == nil || o.OptionsAmountFloat == nil {
		return nil, false
	}
	return o.OptionsAmountFloat, true
}

// HasOptionsAmountFloat returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasOptionsAmountFloat() bool {
	if o != nil && o.OptionsAmountFloat != nil {
		return true
	}

	return false
}

// SetOptionsAmountFloat gets a reference to the given float32 and assigns it to the OptionsAmountFloat field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetOptionsAmountFloat(v float32) {
	o.OptionsAmountFloat = &v
}

// GetFormattedOptionsAmount returns the FormattedOptionsAmount field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedOptionsAmount() string {
	if o == nil || o.FormattedOptionsAmount == nil {
		var ret string
		return ret
	}
	return *o.FormattedOptionsAmount
}

// GetFormattedOptionsAmountOk returns a tuple with the FormattedOptionsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedOptionsAmountOk() (*string, bool) {
	if o == nil || o.FormattedOptionsAmount == nil {
		return nil, false
	}
	return o.FormattedOptionsAmount, true
}

// HasFormattedOptionsAmount returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasFormattedOptionsAmount() bool {
	if o != nil && o.FormattedOptionsAmount != nil {
		return true
	}

	return false
}

// SetFormattedOptionsAmount gets a reference to the given string and assigns it to the FormattedOptionsAmount field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetFormattedOptionsAmount(v string) {
	o.FormattedOptionsAmount = &v
}

// GetDiscountCents returns the DiscountCents field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetDiscountCents() int32 {
	if o == nil || o.DiscountCents == nil {
		var ret int32
		return ret
	}
	return *o.DiscountCents
}

// GetDiscountCentsOk returns a tuple with the DiscountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetDiscountCentsOk() (*int32, bool) {
	if o == nil || o.DiscountCents == nil {
		return nil, false
	}
	return o.DiscountCents, true
}

// HasDiscountCents returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasDiscountCents() bool {
	if o != nil && o.DiscountCents != nil {
		return true
	}

	return false
}

// SetDiscountCents gets a reference to the given int32 and assigns it to the DiscountCents field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetDiscountCents(v int32) {
	o.DiscountCents = &v
}

// GetDiscountFloat returns the DiscountFloat field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetDiscountFloat() float32 {
	if o == nil || o.DiscountFloat == nil {
		var ret float32
		return ret
	}
	return *o.DiscountFloat
}

// GetDiscountFloatOk returns a tuple with the DiscountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetDiscountFloatOk() (*float32, bool) {
	if o == nil || o.DiscountFloat == nil {
		return nil, false
	}
	return o.DiscountFloat, true
}

// HasDiscountFloat returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasDiscountFloat() bool {
	if o != nil && o.DiscountFloat != nil {
		return true
	}

	return false
}

// SetDiscountFloat gets a reference to the given float32 and assigns it to the DiscountFloat field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetDiscountFloat(v float32) {
	o.DiscountFloat = &v
}

// GetFormattedDiscount returns the FormattedDiscount field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedDiscount() string {
	if o == nil || o.FormattedDiscount == nil {
		var ret string
		return ret
	}
	return *o.FormattedDiscount
}

// GetFormattedDiscountOk returns a tuple with the FormattedDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedDiscountOk() (*string, bool) {
	if o == nil || o.FormattedDiscount == nil {
		return nil, false
	}
	return o.FormattedDiscount, true
}

// HasFormattedDiscount returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasFormattedDiscount() bool {
	if o != nil && o.FormattedDiscount != nil {
		return true
	}

	return false
}

// SetFormattedDiscount gets a reference to the given string and assigns it to the FormattedDiscount field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetFormattedDiscount(v string) {
	o.FormattedDiscount = &v
}

// GetTotalAmountCents returns the TotalAmountCents field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTotalAmountCents() int32 {
	if o == nil || o.TotalAmountCents == nil {
		var ret int32
		return ret
	}
	return *o.TotalAmountCents
}

// GetTotalAmountCentsOk returns a tuple with the TotalAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTotalAmountCentsOk() (*int32, bool) {
	if o == nil || o.TotalAmountCents == nil {
		return nil, false
	}
	return o.TotalAmountCents, true
}

// HasTotalAmountCents returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasTotalAmountCents() bool {
	if o != nil && o.TotalAmountCents != nil {
		return true
	}

	return false
}

// SetTotalAmountCents gets a reference to the given int32 and assigns it to the TotalAmountCents field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetTotalAmountCents(v int32) {
	o.TotalAmountCents = &v
}

// GetTotalAmountFloat returns the TotalAmountFloat field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTotalAmountFloat() float32 {
	if o == nil || o.TotalAmountFloat == nil {
		var ret float32
		return ret
	}
	return *o.TotalAmountFloat
}

// GetTotalAmountFloatOk returns a tuple with the TotalAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTotalAmountFloatOk() (*float32, bool) {
	if o == nil || o.TotalAmountFloat == nil {
		return nil, false
	}
	return o.TotalAmountFloat, true
}

// HasTotalAmountFloat returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasTotalAmountFloat() bool {
	if o != nil && o.TotalAmountFloat != nil {
		return true
	}

	return false
}

// SetTotalAmountFloat gets a reference to the given float32 and assigns it to the TotalAmountFloat field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetTotalAmountFloat(v float32) {
	o.TotalAmountFloat = &v
}

// GetFormattedTotalAmount returns the FormattedTotalAmount field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedTotalAmount() string {
	if o == nil || o.FormattedTotalAmount == nil {
		var ret string
		return ret
	}
	return *o.FormattedTotalAmount
}

// GetFormattedTotalAmountOk returns a tuple with the FormattedTotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedTotalAmountOk() (*string, bool) {
	if o == nil || o.FormattedTotalAmount == nil {
		return nil, false
	}
	return o.FormattedTotalAmount, true
}

// HasFormattedTotalAmount returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasFormattedTotalAmount() bool {
	if o != nil && o.FormattedTotalAmount != nil {
		return true
	}

	return false
}

// SetFormattedTotalAmount gets a reference to the given string and assigns it to the FormattedTotalAmount field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetFormattedTotalAmount(v string) {
	o.FormattedTotalAmount = &v
}

// GetTaxAmountCents returns the TaxAmountCents field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTaxAmountCents() int32 {
	if o == nil || o.TaxAmountCents == nil {
		var ret int32
		return ret
	}
	return *o.TaxAmountCents
}

// GetTaxAmountCentsOk returns a tuple with the TaxAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTaxAmountCentsOk() (*int32, bool) {
	if o == nil || o.TaxAmountCents == nil {
		return nil, false
	}
	return o.TaxAmountCents, true
}

// HasTaxAmountCents returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasTaxAmountCents() bool {
	if o != nil && o.TaxAmountCents != nil {
		return true
	}

	return false
}

// SetTaxAmountCents gets a reference to the given int32 and assigns it to the TaxAmountCents field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetTaxAmountCents(v int32) {
	o.TaxAmountCents = &v
}

// GetTaxAmountFloat returns the TaxAmountFloat field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTaxAmountFloat() float32 {
	if o == nil || o.TaxAmountFloat == nil {
		var ret float32
		return ret
	}
	return *o.TaxAmountFloat
}

// GetTaxAmountFloatOk returns a tuple with the TaxAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTaxAmountFloatOk() (*float32, bool) {
	if o == nil || o.TaxAmountFloat == nil {
		return nil, false
	}
	return o.TaxAmountFloat, true
}

// HasTaxAmountFloat returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasTaxAmountFloat() bool {
	if o != nil && o.TaxAmountFloat != nil {
		return true
	}

	return false
}

// SetTaxAmountFloat gets a reference to the given float32 and assigns it to the TaxAmountFloat field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetTaxAmountFloat(v float32) {
	o.TaxAmountFloat = &v
}

// GetFormattedTaxAmount returns the FormattedTaxAmount field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedTaxAmount() string {
	if o == nil || o.FormattedTaxAmount == nil {
		var ret string
		return ret
	}
	return *o.FormattedTaxAmount
}

// GetFormattedTaxAmountOk returns a tuple with the FormattedTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetFormattedTaxAmountOk() (*string, bool) {
	if o == nil || o.FormattedTaxAmount == nil {
		return nil, false
	}
	return o.FormattedTaxAmount, true
}

// HasFormattedTaxAmount returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasFormattedTaxAmount() bool {
	if o != nil && o.FormattedTaxAmount != nil {
		return true
	}

	return false
}

// SetFormattedTaxAmount gets a reference to the given string and assigns it to the FormattedTaxAmount field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetFormattedTaxAmount(v string) {
	o.FormattedTaxAmount = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetName(v string) {
	o.Name = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetDiscountBreakdown returns the DiscountBreakdown field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetDiscountBreakdown() map[string]interface{} {
	if o == nil || o.DiscountBreakdown == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.DiscountBreakdown
}

// GetDiscountBreakdownOk returns a tuple with the DiscountBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetDiscountBreakdownOk() (map[string]interface{}, bool) {
	if o == nil || o.DiscountBreakdown == nil {
		return nil, false
	}
	return o.DiscountBreakdown, true
}

// HasDiscountBreakdown returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasDiscountBreakdown() bool {
	if o != nil && o.DiscountBreakdown != nil {
		return true
	}

	return false
}

// SetDiscountBreakdown gets a reference to the given map[string]interface{} and assigns it to the DiscountBreakdown field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetDiscountBreakdown(v map[string]interface{}) {
	o.DiscountBreakdown = v
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTaxRate() float32 {
	if o == nil || o.TaxRate == nil {
		var ret float32
		return ret
	}
	return *o.TaxRate
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTaxRateOk() (*float32, bool) {
	if o == nil || o.TaxRate == nil {
		return nil, false
	}
	return o.TaxRate, true
}

// HasTaxRate returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasTaxRate() bool {
	if o != nil && o.TaxRate != nil {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given float32 and assigns it to the TaxRate field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetTaxRate(v float32) {
	o.TaxRate = &v
}

// GetTaxBreakdown returns the TaxBreakdown field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTaxBreakdown() map[string]interface{} {
	if o == nil || o.TaxBreakdown == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.TaxBreakdown
}

// GetTaxBreakdownOk returns a tuple with the TaxBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetTaxBreakdownOk() (map[string]interface{}, bool) {
	if o == nil || o.TaxBreakdown == nil {
		return nil, false
	}
	return o.TaxBreakdown, true
}

// HasTaxBreakdown returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasTaxBreakdown() bool {
	if o != nil && o.TaxBreakdown != nil {
		return true
	}

	return false
}

// SetTaxBreakdown gets a reference to the given map[string]interface{} and assigns it to the TaxBreakdown field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetTaxBreakdown(v map[string]interface{}) {
	o.TaxBreakdown = v
}

// GetItemType returns the ItemType field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetItemType() string {
	if o == nil || o.ItemType == nil {
		var ret string
		return ret
	}
	return *o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetItemTypeOk() (*string, bool) {
	if o == nil || o.ItemType == nil {
		return nil, false
	}
	return o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasItemType() bool {
	if o != nil && o.ItemType != nil {
		return true
	}

	return false
}

// SetItemType gets a reference to the given string and assigns it to the ItemType field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetItemType(v string) {
	o.ItemType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GETLineItems200ResponseDataInnerAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GETLineItems200ResponseDataInnerAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *GETLineItems200ResponseDataInnerAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o GETLineItems200ResponseDataInnerAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SkuCode != nil {
		toSerialize["sku_code"] = o.SkuCode
	}
	if o.BundleCode != nil {
		toSerialize["bundle_code"] = o.BundleCode
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.CurrencyCode != nil {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if o.UnitAmountCents != nil {
		toSerialize["unit_amount_cents"] = o.UnitAmountCents
	}
	if o.UnitAmountFloat != nil {
		toSerialize["unit_amount_float"] = o.UnitAmountFloat
	}
	if o.FormattedUnitAmount != nil {
		toSerialize["formatted_unit_amount"] = o.FormattedUnitAmount
	}
	if o.OptionsAmountCents != nil {
		toSerialize["options_amount_cents"] = o.OptionsAmountCents
	}
	if o.OptionsAmountFloat != nil {
		toSerialize["options_amount_float"] = o.OptionsAmountFloat
	}
	if o.FormattedOptionsAmount != nil {
		toSerialize["formatted_options_amount"] = o.FormattedOptionsAmount
	}
	if o.DiscountCents != nil {
		toSerialize["discount_cents"] = o.DiscountCents
	}
	if o.DiscountFloat != nil {
		toSerialize["discount_float"] = o.DiscountFloat
	}
	if o.FormattedDiscount != nil {
		toSerialize["formatted_discount"] = o.FormattedDiscount
	}
	if o.TotalAmountCents != nil {
		toSerialize["total_amount_cents"] = o.TotalAmountCents
	}
	if o.TotalAmountFloat != nil {
		toSerialize["total_amount_float"] = o.TotalAmountFloat
	}
	if o.FormattedTotalAmount != nil {
		toSerialize["formatted_total_amount"] = o.FormattedTotalAmount
	}
	if o.TaxAmountCents != nil {
		toSerialize["tax_amount_cents"] = o.TaxAmountCents
	}
	if o.TaxAmountFloat != nil {
		toSerialize["tax_amount_float"] = o.TaxAmountFloat
	}
	if o.FormattedTaxAmount != nil {
		toSerialize["formatted_tax_amount"] = o.FormattedTaxAmount
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	if o.DiscountBreakdown != nil {
		toSerialize["discount_breakdown"] = o.DiscountBreakdown
	}
	if o.TaxRate != nil {
		toSerialize["tax_rate"] = o.TaxRate
	}
	if o.TaxBreakdown != nil {
		toSerialize["tax_breakdown"] = o.TaxBreakdown
	}
	if o.ItemType != nil {
		toSerialize["item_type"] = o.ItemType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableGETLineItems200ResponseDataInnerAttributes struct {
	value *GETLineItems200ResponseDataInnerAttributes
	isSet bool
}

func (v NullableGETLineItems200ResponseDataInnerAttributes) Get() *GETLineItems200ResponseDataInnerAttributes {
	return v.value
}

func (v *NullableGETLineItems200ResponseDataInnerAttributes) Set(val *GETLineItems200ResponseDataInnerAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGETLineItems200ResponseDataInnerAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGETLineItems200ResponseDataInnerAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETLineItems200ResponseDataInnerAttributes(val *GETLineItems200ResponseDataInnerAttributes) *NullableGETLineItems200ResponseDataInnerAttributes {
	return &NullableGETLineItems200ResponseDataInnerAttributes{value: val, isSet: true}
}

func (v NullableGETLineItems200ResponseDataInnerAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETLineItems200ResponseDataInnerAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
