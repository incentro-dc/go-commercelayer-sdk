/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.7.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// GETLineItems200ResponseDataInnerRelationshipsItem - struct for GETLineItems200ResponseDataInnerRelationshipsItem
type GETLineItems200ResponseDataInnerRelationshipsItem struct {
	Adjustment                  *Adjustment
	Bundle                      *Bundle
	ExternalPromotion           *ExternalPromotion
	FixedAmountPromotion        *FixedAmountPromotion
	FreeShippingPromotion       *FreeShippingPromotion
	GiftCard                    *GiftCard
	PaymentMethod               *PaymentMethod
	PercentageDiscountPromotion *PercentageDiscountPromotion
	Shipment                    *Shipment
	Sku                         *Sku
}

// AdjustmentAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns Adjustment wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func AdjustmentAsGETLineItems200ResponseDataInnerRelationshipsItem(v *Adjustment) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		Adjustment: v,
	}
}

// BundleAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns Bundle wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func BundleAsGETLineItems200ResponseDataInnerRelationshipsItem(v *Bundle) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		Bundle: v,
	}
}

// ExternalPromotionAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns ExternalPromotion wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func ExternalPromotionAsGETLineItems200ResponseDataInnerRelationshipsItem(v *ExternalPromotion) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		ExternalPromotion: v,
	}
}

// FixedAmountPromotionAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns FixedAmountPromotion wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func FixedAmountPromotionAsGETLineItems200ResponseDataInnerRelationshipsItem(v *FixedAmountPromotion) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		FixedAmountPromotion: v,
	}
}

// FreeShippingPromotionAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns FreeShippingPromotion wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func FreeShippingPromotionAsGETLineItems200ResponseDataInnerRelationshipsItem(v *FreeShippingPromotion) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		FreeShippingPromotion: v,
	}
}

// GiftCardAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns GiftCard wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func GiftCardAsGETLineItems200ResponseDataInnerRelationshipsItem(v *GiftCard) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		GiftCard: v,
	}
}

// PaymentMethodAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns PaymentMethod wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func PaymentMethodAsGETLineItems200ResponseDataInnerRelationshipsItem(v *PaymentMethod) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		PaymentMethod: v,
	}
}

// PercentageDiscountPromotionAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns PercentageDiscountPromotion wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func PercentageDiscountPromotionAsGETLineItems200ResponseDataInnerRelationshipsItem(v *PercentageDiscountPromotion) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		PercentageDiscountPromotion: v,
	}
}

// ShipmentAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns Shipment wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func ShipmentAsGETLineItems200ResponseDataInnerRelationshipsItem(v *Shipment) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		Shipment: v,
	}
}

// SkuAsGETLineItems200ResponseDataInnerRelationshipsItem is a convenience function that returns Sku wrapped in GETLineItems200ResponseDataInnerRelationshipsItem
func SkuAsGETLineItems200ResponseDataInnerRelationshipsItem(v *Sku) GETLineItems200ResponseDataInnerRelationshipsItem {
	return GETLineItems200ResponseDataInnerRelationshipsItem{
		Sku: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GETLineItems200ResponseDataInnerRelationshipsItem) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Adjustment
	err = newStrictDecoder(data).Decode(&dst.Adjustment)
	if err == nil {
		jsonAdjustment, _ := json.Marshal(dst.Adjustment)
		if string(jsonAdjustment) == "{}" { // empty struct
			dst.Adjustment = nil
		} else {
			match++
		}
	} else {
		dst.Adjustment = nil
	}

	// try to unmarshal data into Bundle
	err = newStrictDecoder(data).Decode(&dst.Bundle)
	if err == nil {
		jsonBundle, _ := json.Marshal(dst.Bundle)
		if string(jsonBundle) == "{}" { // empty struct
			dst.Bundle = nil
		} else {
			match++
		}
	} else {
		dst.Bundle = nil
	}

	// try to unmarshal data into ExternalPromotion
	err = newStrictDecoder(data).Decode(&dst.ExternalPromotion)
	if err == nil {
		jsonExternalPromotion, _ := json.Marshal(dst.ExternalPromotion)
		if string(jsonExternalPromotion) == "{}" { // empty struct
			dst.ExternalPromotion = nil
		} else {
			match++
		}
	} else {
		dst.ExternalPromotion = nil
	}

	// try to unmarshal data into FixedAmountPromotion
	err = newStrictDecoder(data).Decode(&dst.FixedAmountPromotion)
	if err == nil {
		jsonFixedAmountPromotion, _ := json.Marshal(dst.FixedAmountPromotion)
		if string(jsonFixedAmountPromotion) == "{}" { // empty struct
			dst.FixedAmountPromotion = nil
		} else {
			match++
		}
	} else {
		dst.FixedAmountPromotion = nil
	}

	// try to unmarshal data into FreeShippingPromotion
	err = newStrictDecoder(data).Decode(&dst.FreeShippingPromotion)
	if err == nil {
		jsonFreeShippingPromotion, _ := json.Marshal(dst.FreeShippingPromotion)
		if string(jsonFreeShippingPromotion) == "{}" { // empty struct
			dst.FreeShippingPromotion = nil
		} else {
			match++
		}
	} else {
		dst.FreeShippingPromotion = nil
	}

	// try to unmarshal data into GiftCard
	err = newStrictDecoder(data).Decode(&dst.GiftCard)
	if err == nil {
		jsonGiftCard, _ := json.Marshal(dst.GiftCard)
		if string(jsonGiftCard) == "{}" { // empty struct
			dst.GiftCard = nil
		} else {
			match++
		}
	} else {
		dst.GiftCard = nil
	}

	// try to unmarshal data into PaymentMethod
	err = newStrictDecoder(data).Decode(&dst.PaymentMethod)
	if err == nil {
		jsonPaymentMethod, _ := json.Marshal(dst.PaymentMethod)
		if string(jsonPaymentMethod) == "{}" { // empty struct
			dst.PaymentMethod = nil
		} else {
			match++
		}
	} else {
		dst.PaymentMethod = nil
	}

	// try to unmarshal data into PercentageDiscountPromotion
	err = newStrictDecoder(data).Decode(&dst.PercentageDiscountPromotion)
	if err == nil {
		jsonPercentageDiscountPromotion, _ := json.Marshal(dst.PercentageDiscountPromotion)
		if string(jsonPercentageDiscountPromotion) == "{}" { // empty struct
			dst.PercentageDiscountPromotion = nil
		} else {
			match++
		}
	} else {
		dst.PercentageDiscountPromotion = nil
	}

	// try to unmarshal data into Shipment
	err = newStrictDecoder(data).Decode(&dst.Shipment)
	if err == nil {
		jsonShipment, _ := json.Marshal(dst.Shipment)
		if string(jsonShipment) == "{}" { // empty struct
			dst.Shipment = nil
		} else {
			match++
		}
	} else {
		dst.Shipment = nil
	}

	// try to unmarshal data into Sku
	err = newStrictDecoder(data).Decode(&dst.Sku)
	if err == nil {
		jsonSku, _ := json.Marshal(dst.Sku)
		if string(jsonSku) == "{}" { // empty struct
			dst.Sku = nil
		} else {
			match++
		}
	} else {
		dst.Sku = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Adjustment = nil
		dst.Bundle = nil
		dst.ExternalPromotion = nil
		dst.FixedAmountPromotion = nil
		dst.FreeShippingPromotion = nil
		dst.GiftCard = nil
		dst.PaymentMethod = nil
		dst.PercentageDiscountPromotion = nil
		dst.Shipment = nil
		dst.Sku = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(GETLineItems200ResponseDataInnerRelationshipsItem)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(GETLineItems200ResponseDataInnerRelationshipsItem)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GETLineItems200ResponseDataInnerRelationshipsItem) MarshalJSON() ([]byte, error) {
	if src.Adjustment != nil {
		return json.Marshal(&src.Adjustment)
	}

	if src.Bundle != nil {
		return json.Marshal(&src.Bundle)
	}

	if src.ExternalPromotion != nil {
		return json.Marshal(&src.ExternalPromotion)
	}

	if src.FixedAmountPromotion != nil {
		return json.Marshal(&src.FixedAmountPromotion)
	}

	if src.FreeShippingPromotion != nil {
		return json.Marshal(&src.FreeShippingPromotion)
	}

	if src.GiftCard != nil {
		return json.Marshal(&src.GiftCard)
	}

	if src.PaymentMethod != nil {
		return json.Marshal(&src.PaymentMethod)
	}

	if src.PercentageDiscountPromotion != nil {
		return json.Marshal(&src.PercentageDiscountPromotion)
	}

	if src.Shipment != nil {
		return json.Marshal(&src.Shipment)
	}

	if src.Sku != nil {
		return json.Marshal(&src.Sku)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GETLineItems200ResponseDataInnerRelationshipsItem) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Adjustment != nil {
		return obj.Adjustment
	}

	if obj.Bundle != nil {
		return obj.Bundle
	}

	if obj.ExternalPromotion != nil {
		return obj.ExternalPromotion
	}

	if obj.FixedAmountPromotion != nil {
		return obj.FixedAmountPromotion
	}

	if obj.FreeShippingPromotion != nil {
		return obj.FreeShippingPromotion
	}

	if obj.GiftCard != nil {
		return obj.GiftCard
	}

	if obj.PaymentMethod != nil {
		return obj.PaymentMethod
	}

	if obj.PercentageDiscountPromotion != nil {
		return obj.PercentageDiscountPromotion
	}

	if obj.Shipment != nil {
		return obj.Shipment
	}

	if obj.Sku != nil {
		return obj.Sku
	}

	// all schemas are nil
	return nil
}

type NullableGETLineItems200ResponseDataInnerRelationshipsItem struct {
	value *GETLineItems200ResponseDataInnerRelationshipsItem
	isSet bool
}

func (v NullableGETLineItems200ResponseDataInnerRelationshipsItem) Get() *GETLineItems200ResponseDataInnerRelationshipsItem {
	return v.value
}

func (v *NullableGETLineItems200ResponseDataInnerRelationshipsItem) Set(val *GETLineItems200ResponseDataInnerRelationshipsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGETLineItems200ResponseDataInnerRelationshipsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGETLineItems200ResponseDataInnerRelationshipsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETLineItems200ResponseDataInnerRelationshipsItem(val *GETLineItems200ResponseDataInnerRelationshipsItem) *NullableGETLineItems200ResponseDataInnerRelationshipsItem {
	return &NullableGETLineItems200ResponseDataInnerRelationshipsItem{value: val, isSet: true}
}

func (v NullableGETLineItems200ResponseDataInnerRelationshipsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETLineItems200ResponseDataInnerRelationshipsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
