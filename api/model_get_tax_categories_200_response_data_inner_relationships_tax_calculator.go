/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.7.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator - struct for GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator
type GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator struct {
	AvalaraAccount        *AvalaraAccount
	ExternalTaxCalculator *ExternalTaxCalculator
	ManualTaxCalculator   *ManualTaxCalculator
	TaxjarAccount         *TaxjarAccount
}

// AvalaraAccountAsGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator is a convenience function that returns AvalaraAccount wrapped in GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator
func AvalaraAccountAsGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator(v *AvalaraAccount) GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator {
	return GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator{
		AvalaraAccount: v,
	}
}

// ExternalTaxCalculatorAsGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator is a convenience function that returns ExternalTaxCalculator wrapped in GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator
func ExternalTaxCalculatorAsGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator(v *ExternalTaxCalculator) GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator {
	return GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator{
		ExternalTaxCalculator: v,
	}
}

// ManualTaxCalculatorAsGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator is a convenience function that returns ManualTaxCalculator wrapped in GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator
func ManualTaxCalculatorAsGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator(v *ManualTaxCalculator) GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator {
	return GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator{
		ManualTaxCalculator: v,
	}
}

// TaxjarAccountAsGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator is a convenience function that returns TaxjarAccount wrapped in GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator
func TaxjarAccountAsGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator(v *TaxjarAccount) GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator {
	return GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator{
		TaxjarAccount: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AvalaraAccount
	err = newStrictDecoder(data).Decode(&dst.AvalaraAccount)
	if err == nil {
		jsonAvalaraAccount, _ := json.Marshal(dst.AvalaraAccount)
		if string(jsonAvalaraAccount) == "{}" { // empty struct
			dst.AvalaraAccount = nil
		} else {
			match++
		}
	} else {
		dst.AvalaraAccount = nil
	}

	// try to unmarshal data into ExternalTaxCalculator
	err = newStrictDecoder(data).Decode(&dst.ExternalTaxCalculator)
	if err == nil {
		jsonExternalTaxCalculator, _ := json.Marshal(dst.ExternalTaxCalculator)
		if string(jsonExternalTaxCalculator) == "{}" { // empty struct
			dst.ExternalTaxCalculator = nil
		} else {
			match++
		}
	} else {
		dst.ExternalTaxCalculator = nil
	}

	// try to unmarshal data into ManualTaxCalculator
	err = newStrictDecoder(data).Decode(&dst.ManualTaxCalculator)
	if err == nil {
		jsonManualTaxCalculator, _ := json.Marshal(dst.ManualTaxCalculator)
		if string(jsonManualTaxCalculator) == "{}" { // empty struct
			dst.ManualTaxCalculator = nil
		} else {
			match++
		}
	} else {
		dst.ManualTaxCalculator = nil
	}

	// try to unmarshal data into TaxjarAccount
	err = newStrictDecoder(data).Decode(&dst.TaxjarAccount)
	if err == nil {
		jsonTaxjarAccount, _ := json.Marshal(dst.TaxjarAccount)
		if string(jsonTaxjarAccount) == "{}" { // empty struct
			dst.TaxjarAccount = nil
		} else {
			match++
		}
	} else {
		dst.TaxjarAccount = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AvalaraAccount = nil
		dst.ExternalTaxCalculator = nil
		dst.ManualTaxCalculator = nil
		dst.TaxjarAccount = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) MarshalJSON() ([]byte, error) {
	if src.AvalaraAccount != nil {
		return json.Marshal(&src.AvalaraAccount)
	}

	if src.ExternalTaxCalculator != nil {
		return json.Marshal(&src.ExternalTaxCalculator)
	}

	if src.ManualTaxCalculator != nil {
		return json.Marshal(&src.ManualTaxCalculator)
	}

	if src.TaxjarAccount != nil {
		return json.Marshal(&src.TaxjarAccount)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AvalaraAccount != nil {
		return obj.AvalaraAccount
	}

	if obj.ExternalTaxCalculator != nil {
		return obj.ExternalTaxCalculator
	}

	if obj.ManualTaxCalculator != nil {
		return obj.ManualTaxCalculator
	}

	if obj.TaxjarAccount != nil {
		return obj.TaxjarAccount
	}

	// all schemas are nil
	return nil
}

type NullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator struct {
	value *GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator
	isSet bool
}

func (v NullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) Get() *GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator {
	return v.value
}

func (v *NullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) Set(val *GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) {
	v.value = val
	v.isSet = true
}

func (v NullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) IsSet() bool {
	return v.isSet
}

func (v *NullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator(val *GETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) *NullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator {
	return &NullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator{value: val, isSet: true}
}

func (v NullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETTaxCategories200ResponseDataInnerRelationshipsTaxCalculator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
