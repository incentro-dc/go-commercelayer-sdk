/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the InStockSubscriptionDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InStockSubscriptionDataRelationships{}

// InStockSubscriptionDataRelationships struct for InStockSubscriptionDataRelationships
type InStockSubscriptionDataRelationships struct {
	Market   *AvalaraAccountDataRelationshipsMarkets   `json:"market,omitempty"`
	Customer *CouponRecipientDataRelationshipsCustomer `json:"customer,omitempty"`
	Sku      *BundleDataRelationshipsSkus              `json:"sku,omitempty"`
	Events   *AuthorizationDataRelationshipsEvents     `json:"events,omitempty"`
}

// NewInStockSubscriptionDataRelationships instantiates a new InStockSubscriptionDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInStockSubscriptionDataRelationships() *InStockSubscriptionDataRelationships {
	this := InStockSubscriptionDataRelationships{}
	return &this
}

// NewInStockSubscriptionDataRelationshipsWithDefaults instantiates a new InStockSubscriptionDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInStockSubscriptionDataRelationshipsWithDefaults() *InStockSubscriptionDataRelationships {
	this := InStockSubscriptionDataRelationships{}
	return &this
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *InStockSubscriptionDataRelationships) GetMarket() AvalaraAccountDataRelationshipsMarkets {
	if o == nil || IsNil(o.Market) {
		var ret AvalaraAccountDataRelationshipsMarkets
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InStockSubscriptionDataRelationships) GetMarketOk() (*AvalaraAccountDataRelationshipsMarkets, bool) {
	if o == nil || IsNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *InStockSubscriptionDataRelationships) HasMarket() bool {
	if o != nil && !IsNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given AvalaraAccountDataRelationshipsMarkets and assigns it to the Market field.
func (o *InStockSubscriptionDataRelationships) SetMarket(v AvalaraAccountDataRelationshipsMarkets) {
	o.Market = &v
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *InStockSubscriptionDataRelationships) GetCustomer() CouponRecipientDataRelationshipsCustomer {
	if o == nil || IsNil(o.Customer) {
		var ret CouponRecipientDataRelationshipsCustomer
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InStockSubscriptionDataRelationships) GetCustomerOk() (*CouponRecipientDataRelationshipsCustomer, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *InStockSubscriptionDataRelationships) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given CouponRecipientDataRelationshipsCustomer and assigns it to the Customer field.
func (o *InStockSubscriptionDataRelationships) SetCustomer(v CouponRecipientDataRelationshipsCustomer) {
	o.Customer = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *InStockSubscriptionDataRelationships) GetSku() BundleDataRelationshipsSkus {
	if o == nil || IsNil(o.Sku) {
		var ret BundleDataRelationshipsSkus
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InStockSubscriptionDataRelationships) GetSkuOk() (*BundleDataRelationshipsSkus, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *InStockSubscriptionDataRelationships) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given BundleDataRelationshipsSkus and assigns it to the Sku field.
func (o *InStockSubscriptionDataRelationships) SetSku(v BundleDataRelationshipsSkus) {
	o.Sku = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *InStockSubscriptionDataRelationships) GetEvents() AuthorizationDataRelationshipsEvents {
	if o == nil || IsNil(o.Events) {
		var ret AuthorizationDataRelationshipsEvents
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InStockSubscriptionDataRelationships) GetEventsOk() (*AuthorizationDataRelationshipsEvents, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *InStockSubscriptionDataRelationships) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given AuthorizationDataRelationshipsEvents and assigns it to the Events field.
func (o *InStockSubscriptionDataRelationships) SetEvents(v AuthorizationDataRelationshipsEvents) {
	o.Events = &v
}

func (o InStockSubscriptionDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InStockSubscriptionDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	return toSerialize, nil
}

type NullableInStockSubscriptionDataRelationships struct {
	value *InStockSubscriptionDataRelationships
	isSet bool
}

func (v NullableInStockSubscriptionDataRelationships) Get() *InStockSubscriptionDataRelationships {
	return v.value
}

func (v *NullableInStockSubscriptionDataRelationships) Set(val *InStockSubscriptionDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableInStockSubscriptionDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableInStockSubscriptionDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInStockSubscriptionDataRelationships(val *InStockSubscriptionDataRelationships) *NullableInStockSubscriptionDataRelationships {
	return &NullableInStockSubscriptionDataRelationships{value: val, isSet: true}
}

func (v NullableInStockSubscriptionDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInStockSubscriptionDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
