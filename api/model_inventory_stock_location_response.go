/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// InventoryStockLocationResponse struct for InventoryStockLocationResponse
type InventoryStockLocationResponse struct {
	Data *InventoryStockLocationResponseData `json:"data,omitempty"`
}

// NewInventoryStockLocationResponse instantiates a new InventoryStockLocationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryStockLocationResponse() *InventoryStockLocationResponse {
	this := InventoryStockLocationResponse{}
	return &this
}

// NewInventoryStockLocationResponseWithDefaults instantiates a new InventoryStockLocationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryStockLocationResponseWithDefaults() *InventoryStockLocationResponse {
	this := InventoryStockLocationResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *InventoryStockLocationResponse) GetData() InventoryStockLocationResponseData {
	if o == nil || o.Data == nil {
		var ret InventoryStockLocationResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryStockLocationResponse) GetDataOk() (*InventoryStockLocationResponseData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *InventoryStockLocationResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given InventoryStockLocationResponseData and assigns it to the Data field.
func (o *InventoryStockLocationResponse) SetData(v InventoryStockLocationResponseData) {
	o.Data = &v
}

func (o InventoryStockLocationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableInventoryStockLocationResponse struct {
	value *InventoryStockLocationResponse
	isSet bool
}

func (v NullableInventoryStockLocationResponse) Get() *InventoryStockLocationResponse {
	return v.value
}

func (v *NullableInventoryStockLocationResponse) Set(val *InventoryStockLocationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryStockLocationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryStockLocationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryStockLocationResponse(val *InventoryStockLocationResponse) *NullableInventoryStockLocationResponse {
	return &NullableInventoryStockLocationResponse{value: val, isSet: true}
}

func (v NullableInventoryStockLocationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryStockLocationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
