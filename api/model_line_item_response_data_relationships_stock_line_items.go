/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// LineItemResponseDataRelationshipsStockLineItems struct for LineItemResponseDataRelationshipsStockLineItems
type LineItemResponseDataRelationshipsStockLineItems struct {
	Links *AddressResponseDataRelationshipsGeocoderLinks             `json:"links,omitempty"`
	Data  []LineItemResponseDataRelationshipsStockLineItemsDataInner `json:"data,omitempty"`
}

// NewLineItemResponseDataRelationshipsStockLineItems instantiates a new LineItemResponseDataRelationshipsStockLineItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLineItemResponseDataRelationshipsStockLineItems() *LineItemResponseDataRelationshipsStockLineItems {
	this := LineItemResponseDataRelationshipsStockLineItems{}
	return &this
}

// NewLineItemResponseDataRelationshipsStockLineItemsWithDefaults instantiates a new LineItemResponseDataRelationshipsStockLineItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineItemResponseDataRelationshipsStockLineItemsWithDefaults() *LineItemResponseDataRelationshipsStockLineItems {
	this := LineItemResponseDataRelationshipsStockLineItems{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *LineItemResponseDataRelationshipsStockLineItems) GetLinks() AddressResponseDataRelationshipsGeocoderLinks {
	if o == nil || o.Links == nil {
		var ret AddressResponseDataRelationshipsGeocoderLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemResponseDataRelationshipsStockLineItems) GetLinksOk() (*AddressResponseDataRelationshipsGeocoderLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *LineItemResponseDataRelationshipsStockLineItems) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AddressResponseDataRelationshipsGeocoderLinks and assigns it to the Links field.
func (o *LineItemResponseDataRelationshipsStockLineItems) SetLinks(v AddressResponseDataRelationshipsGeocoderLinks) {
	o.Links = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *LineItemResponseDataRelationshipsStockLineItems) GetData() []LineItemResponseDataRelationshipsStockLineItemsDataInner {
	if o == nil || o.Data == nil {
		var ret []LineItemResponseDataRelationshipsStockLineItemsDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemResponseDataRelationshipsStockLineItems) GetDataOk() ([]LineItemResponseDataRelationshipsStockLineItemsDataInner, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *LineItemResponseDataRelationshipsStockLineItems) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []LineItemResponseDataRelationshipsStockLineItemsDataInner and assigns it to the Data field.
func (o *LineItemResponseDataRelationshipsStockLineItems) SetData(v []LineItemResponseDataRelationshipsStockLineItemsDataInner) {
	o.Data = v
}

func (o LineItemResponseDataRelationshipsStockLineItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableLineItemResponseDataRelationshipsStockLineItems struct {
	value *LineItemResponseDataRelationshipsStockLineItems
	isSet bool
}

func (v NullableLineItemResponseDataRelationshipsStockLineItems) Get() *LineItemResponseDataRelationshipsStockLineItems {
	return v.value
}

func (v *NullableLineItemResponseDataRelationshipsStockLineItems) Set(val *LineItemResponseDataRelationshipsStockLineItems) {
	v.value = val
	v.isSet = true
}

func (v NullableLineItemResponseDataRelationshipsStockLineItems) IsSet() bool {
	return v.isSet
}

func (v *NullableLineItemResponseDataRelationshipsStockLineItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLineItemResponseDataRelationshipsStockLineItems(val *LineItemResponseDataRelationshipsStockLineItems) *NullableLineItemResponseDataRelationshipsStockLineItems {
	return &NullableLineItemResponseDataRelationshipsStockLineItems{value: val, isSet: true}
}

func (v NullableLineItemResponseDataRelationshipsStockLineItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLineItemResponseDataRelationshipsStockLineItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
