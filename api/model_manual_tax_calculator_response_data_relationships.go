/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ManualTaxCalculatorResponseDataRelationships struct for ManualTaxCalculatorResponseDataRelationships
type ManualTaxCalculatorResponseDataRelationships struct {
	TaxCategories *AvalaraAccountResponseDataRelationshipsTaxCategories `json:"tax_categories,omitempty"`
	Markets       *AvalaraAccountResponseDataRelationshipsMarkets       `json:"markets,omitempty"`
	Attachments   *AvalaraAccountResponseDataRelationshipsAttachments   `json:"attachments,omitempty"`
	TaxRules      *ManualTaxCalculatorResponseDataRelationshipsTaxRules `json:"tax_rules,omitempty"`
}

// NewManualTaxCalculatorResponseDataRelationships instantiates a new ManualTaxCalculatorResponseDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualTaxCalculatorResponseDataRelationships() *ManualTaxCalculatorResponseDataRelationships {
	this := ManualTaxCalculatorResponseDataRelationships{}
	return &this
}

// NewManualTaxCalculatorResponseDataRelationshipsWithDefaults instantiates a new ManualTaxCalculatorResponseDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualTaxCalculatorResponseDataRelationshipsWithDefaults() *ManualTaxCalculatorResponseDataRelationships {
	this := ManualTaxCalculatorResponseDataRelationships{}
	return &this
}

// GetTaxCategories returns the TaxCategories field value if set, zero value otherwise.
func (o *ManualTaxCalculatorResponseDataRelationships) GetTaxCategories() AvalaraAccountResponseDataRelationshipsTaxCategories {
	if o == nil || o.TaxCategories == nil {
		var ret AvalaraAccountResponseDataRelationshipsTaxCategories
		return ret
	}
	return *o.TaxCategories
}

// GetTaxCategoriesOk returns a tuple with the TaxCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualTaxCalculatorResponseDataRelationships) GetTaxCategoriesOk() (*AvalaraAccountResponseDataRelationshipsTaxCategories, bool) {
	if o == nil || o.TaxCategories == nil {
		return nil, false
	}
	return o.TaxCategories, true
}

// HasTaxCategories returns a boolean if a field has been set.
func (o *ManualTaxCalculatorResponseDataRelationships) HasTaxCategories() bool {
	if o != nil && o.TaxCategories != nil {
		return true
	}

	return false
}

// SetTaxCategories gets a reference to the given AvalaraAccountResponseDataRelationshipsTaxCategories and assigns it to the TaxCategories field.
func (o *ManualTaxCalculatorResponseDataRelationships) SetTaxCategories(v AvalaraAccountResponseDataRelationshipsTaxCategories) {
	o.TaxCategories = &v
}

// GetMarkets returns the Markets field value if set, zero value otherwise.
func (o *ManualTaxCalculatorResponseDataRelationships) GetMarkets() AvalaraAccountResponseDataRelationshipsMarkets {
	if o == nil || o.Markets == nil {
		var ret AvalaraAccountResponseDataRelationshipsMarkets
		return ret
	}
	return *o.Markets
}

// GetMarketsOk returns a tuple with the Markets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualTaxCalculatorResponseDataRelationships) GetMarketsOk() (*AvalaraAccountResponseDataRelationshipsMarkets, bool) {
	if o == nil || o.Markets == nil {
		return nil, false
	}
	return o.Markets, true
}

// HasMarkets returns a boolean if a field has been set.
func (o *ManualTaxCalculatorResponseDataRelationships) HasMarkets() bool {
	if o != nil && o.Markets != nil {
		return true
	}

	return false
}

// SetMarkets gets a reference to the given AvalaraAccountResponseDataRelationshipsMarkets and assigns it to the Markets field.
func (o *ManualTaxCalculatorResponseDataRelationships) SetMarkets(v AvalaraAccountResponseDataRelationshipsMarkets) {
	o.Markets = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ManualTaxCalculatorResponseDataRelationships) GetAttachments() AvalaraAccountResponseDataRelationshipsAttachments {
	if o == nil || o.Attachments == nil {
		var ret AvalaraAccountResponseDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualTaxCalculatorResponseDataRelationships) GetAttachmentsOk() (*AvalaraAccountResponseDataRelationshipsAttachments, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ManualTaxCalculatorResponseDataRelationships) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AvalaraAccountResponseDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *ManualTaxCalculatorResponseDataRelationships) SetAttachments(v AvalaraAccountResponseDataRelationshipsAttachments) {
	o.Attachments = &v
}

// GetTaxRules returns the TaxRules field value if set, zero value otherwise.
func (o *ManualTaxCalculatorResponseDataRelationships) GetTaxRules() ManualTaxCalculatorResponseDataRelationshipsTaxRules {
	if o == nil || o.TaxRules == nil {
		var ret ManualTaxCalculatorResponseDataRelationshipsTaxRules
		return ret
	}
	return *o.TaxRules
}

// GetTaxRulesOk returns a tuple with the TaxRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualTaxCalculatorResponseDataRelationships) GetTaxRulesOk() (*ManualTaxCalculatorResponseDataRelationshipsTaxRules, bool) {
	if o == nil || o.TaxRules == nil {
		return nil, false
	}
	return o.TaxRules, true
}

// HasTaxRules returns a boolean if a field has been set.
func (o *ManualTaxCalculatorResponseDataRelationships) HasTaxRules() bool {
	if o != nil && o.TaxRules != nil {
		return true
	}

	return false
}

// SetTaxRules gets a reference to the given ManualTaxCalculatorResponseDataRelationshipsTaxRules and assigns it to the TaxRules field.
func (o *ManualTaxCalculatorResponseDataRelationships) SetTaxRules(v ManualTaxCalculatorResponseDataRelationshipsTaxRules) {
	o.TaxRules = &v
}

func (o ManualTaxCalculatorResponseDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TaxCategories != nil {
		toSerialize["tax_categories"] = o.TaxCategories
	}
	if o.Markets != nil {
		toSerialize["markets"] = o.Markets
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.TaxRules != nil {
		toSerialize["tax_rules"] = o.TaxRules
	}
	return json.Marshal(toSerialize)
}

type NullableManualTaxCalculatorResponseDataRelationships struct {
	value *ManualTaxCalculatorResponseDataRelationships
	isSet bool
}

func (v NullableManualTaxCalculatorResponseDataRelationships) Get() *ManualTaxCalculatorResponseDataRelationships {
	return v.value
}

func (v *NullableManualTaxCalculatorResponseDataRelationships) Set(val *ManualTaxCalculatorResponseDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableManualTaxCalculatorResponseDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableManualTaxCalculatorResponseDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualTaxCalculatorResponseDataRelationships(val *ManualTaxCalculatorResponseDataRelationships) *NullableManualTaxCalculatorResponseDataRelationships {
	return &NullableManualTaxCalculatorResponseDataRelationships{value: val, isSet: true}
}

func (v NullableManualTaxCalculatorResponseDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualTaxCalculatorResponseDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
