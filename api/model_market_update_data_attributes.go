/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// MarketUpdateDataAttributes struct for MarketUpdateDataAttributes
type MarketUpdateDataAttributes struct {
	// The market's internal name
	Name *string `json:"name,omitempty"`
	// The Facebook Pixed ID
	FacebookPixelId *string `json:"facebook_pixel_id,omitempty"`
	// The checkout URL for this market
	CheckoutUrl *string `json:"checkout_url,omitempty"`
	// The URL used to fetch prices from an external source
	ExternalPricesUrl *string `json:"external_prices_url,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewMarketUpdateDataAttributes instantiates a new MarketUpdateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketUpdateDataAttributes() *MarketUpdateDataAttributes {
	this := MarketUpdateDataAttributes{}
	return &this
}

// NewMarketUpdateDataAttributesWithDefaults instantiates a new MarketUpdateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketUpdateDataAttributesWithDefaults() *MarketUpdateDataAttributes {
	this := MarketUpdateDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MarketUpdateDataAttributes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketUpdateDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MarketUpdateDataAttributes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MarketUpdateDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetFacebookPixelId returns the FacebookPixelId field value if set, zero value otherwise.
func (o *MarketUpdateDataAttributes) GetFacebookPixelId() string {
	if o == nil || o.FacebookPixelId == nil {
		var ret string
		return ret
	}
	return *o.FacebookPixelId
}

// GetFacebookPixelIdOk returns a tuple with the FacebookPixelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketUpdateDataAttributes) GetFacebookPixelIdOk() (*string, bool) {
	if o == nil || o.FacebookPixelId == nil {
		return nil, false
	}
	return o.FacebookPixelId, true
}

// HasFacebookPixelId returns a boolean if a field has been set.
func (o *MarketUpdateDataAttributes) HasFacebookPixelId() bool {
	if o != nil && o.FacebookPixelId != nil {
		return true
	}

	return false
}

// SetFacebookPixelId gets a reference to the given string and assigns it to the FacebookPixelId field.
func (o *MarketUpdateDataAttributes) SetFacebookPixelId(v string) {
	o.FacebookPixelId = &v
}

// GetCheckoutUrl returns the CheckoutUrl field value if set, zero value otherwise.
func (o *MarketUpdateDataAttributes) GetCheckoutUrl() string {
	if o == nil || o.CheckoutUrl == nil {
		var ret string
		return ret
	}
	return *o.CheckoutUrl
}

// GetCheckoutUrlOk returns a tuple with the CheckoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketUpdateDataAttributes) GetCheckoutUrlOk() (*string, bool) {
	if o == nil || o.CheckoutUrl == nil {
		return nil, false
	}
	return o.CheckoutUrl, true
}

// HasCheckoutUrl returns a boolean if a field has been set.
func (o *MarketUpdateDataAttributes) HasCheckoutUrl() bool {
	if o != nil && o.CheckoutUrl != nil {
		return true
	}

	return false
}

// SetCheckoutUrl gets a reference to the given string and assigns it to the CheckoutUrl field.
func (o *MarketUpdateDataAttributes) SetCheckoutUrl(v string) {
	o.CheckoutUrl = &v
}

// GetExternalPricesUrl returns the ExternalPricesUrl field value if set, zero value otherwise.
func (o *MarketUpdateDataAttributes) GetExternalPricesUrl() string {
	if o == nil || o.ExternalPricesUrl == nil {
		var ret string
		return ret
	}
	return *o.ExternalPricesUrl
}

// GetExternalPricesUrlOk returns a tuple with the ExternalPricesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketUpdateDataAttributes) GetExternalPricesUrlOk() (*string, bool) {
	if o == nil || o.ExternalPricesUrl == nil {
		return nil, false
	}
	return o.ExternalPricesUrl, true
}

// HasExternalPricesUrl returns a boolean if a field has been set.
func (o *MarketUpdateDataAttributes) HasExternalPricesUrl() bool {
	if o != nil && o.ExternalPricesUrl != nil {
		return true
	}

	return false
}

// SetExternalPricesUrl gets a reference to the given string and assigns it to the ExternalPricesUrl field.
func (o *MarketUpdateDataAttributes) SetExternalPricesUrl(v string) {
	o.ExternalPricesUrl = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *MarketUpdateDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketUpdateDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *MarketUpdateDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *MarketUpdateDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *MarketUpdateDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketUpdateDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *MarketUpdateDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *MarketUpdateDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *MarketUpdateDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketUpdateDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *MarketUpdateDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *MarketUpdateDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o MarketUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.FacebookPixelId != nil {
		toSerialize["facebook_pixel_id"] = o.FacebookPixelId
	}
	if o.CheckoutUrl != nil {
		toSerialize["checkout_url"] = o.CheckoutUrl
	}
	if o.ExternalPricesUrl != nil {
		toSerialize["external_prices_url"] = o.ExternalPricesUrl
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableMarketUpdateDataAttributes struct {
	value *MarketUpdateDataAttributes
	isSet bool
}

func (v NullableMarketUpdateDataAttributes) Get() *MarketUpdateDataAttributes {
	return v.value
}

func (v *NullableMarketUpdateDataAttributes) Set(val *MarketUpdateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketUpdateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketUpdateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketUpdateDataAttributes(val *MarketUpdateDataAttributes) *NullableMarketUpdateDataAttributes {
	return &NullableMarketUpdateDataAttributes{value: val, isSet: true}
}

func (v NullableMarketUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketUpdateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
