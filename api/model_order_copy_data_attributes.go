/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.9.5
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// OrderCopyDataAttributes struct for OrderCopyDataAttributes
type OrderCopyDataAttributes struct {
	// The order copy status. One of 'pending' (default), 'in_progress', 'failed', or 'completed'.
	Status *string `json:"status,omitempty"`
	// Time at which the order copy was started.
	StartedAt *string `json:"started_at,omitempty"`
	// Time at which the order copy was completed.
	CompletedAt *string `json:"completed_at,omitempty"`
	// Time at which the order copy has failed.
	FailedAt *string `json:"failed_at,omitempty"`
	// Indicates if the target order must be placed upon copy.
	PlaceTargetOrder *bool `json:"place_target_order,omitempty"`
	// Indicates if the source order must be cancelled upon copy.
	CancelSourceOrder *bool `json:"cancel_source_order,omitempty"`
	// Indicates if the payment source within the source order customer's wallet must be copied.
	ReuseWallet *bool `json:"reuse_wallet,omitempty"`
	// Contains the order copy errors, if any.
	ErrorsLog map[string]interface{} `json:"errors_log,omitempty"`
	// Indicates the number of copy errors, if any.
	ErrorsCount *int32 `json:"errors_count,omitempty"`
	// Unique identifier for the resource (hash).
	Id *string `json:"id,omitempty"`
	// Time at which the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// Time at which the resource was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewOrderCopyDataAttributes instantiates a new OrderCopyDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCopyDataAttributes() *OrderCopyDataAttributes {
	this := OrderCopyDataAttributes{}
	return &this
}

// NewOrderCopyDataAttributesWithDefaults instantiates a new OrderCopyDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCopyDataAttributesWithDefaults() *OrderCopyDataAttributes {
	this := OrderCopyDataAttributes{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OrderCopyDataAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetStartedAt() string {
	if o == nil || o.StartedAt == nil {
		var ret string
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetStartedAtOk() (*string, bool) {
	if o == nil || o.StartedAt == nil {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasStartedAt() bool {
	if o != nil && o.StartedAt != nil {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given string and assigns it to the StartedAt field.
func (o *OrderCopyDataAttributes) SetStartedAt(v string) {
	o.StartedAt = &v
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetCompletedAt() string {
	if o == nil || o.CompletedAt == nil {
		var ret string
		return ret
	}
	return *o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetCompletedAtOk() (*string, bool) {
	if o == nil || o.CompletedAt == nil {
		return nil, false
	}
	return o.CompletedAt, true
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasCompletedAt() bool {
	if o != nil && o.CompletedAt != nil {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given string and assigns it to the CompletedAt field.
func (o *OrderCopyDataAttributes) SetCompletedAt(v string) {
	o.CompletedAt = &v
}

// GetFailedAt returns the FailedAt field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetFailedAt() string {
	if o == nil || o.FailedAt == nil {
		var ret string
		return ret
	}
	return *o.FailedAt
}

// GetFailedAtOk returns a tuple with the FailedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetFailedAtOk() (*string, bool) {
	if o == nil || o.FailedAt == nil {
		return nil, false
	}
	return o.FailedAt, true
}

// HasFailedAt returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasFailedAt() bool {
	if o != nil && o.FailedAt != nil {
		return true
	}

	return false
}

// SetFailedAt gets a reference to the given string and assigns it to the FailedAt field.
func (o *OrderCopyDataAttributes) SetFailedAt(v string) {
	o.FailedAt = &v
}

// GetPlaceTargetOrder returns the PlaceTargetOrder field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetPlaceTargetOrder() bool {
	if o == nil || o.PlaceTargetOrder == nil {
		var ret bool
		return ret
	}
	return *o.PlaceTargetOrder
}

// GetPlaceTargetOrderOk returns a tuple with the PlaceTargetOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetPlaceTargetOrderOk() (*bool, bool) {
	if o == nil || o.PlaceTargetOrder == nil {
		return nil, false
	}
	return o.PlaceTargetOrder, true
}

// HasPlaceTargetOrder returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasPlaceTargetOrder() bool {
	if o != nil && o.PlaceTargetOrder != nil {
		return true
	}

	return false
}

// SetPlaceTargetOrder gets a reference to the given bool and assigns it to the PlaceTargetOrder field.
func (o *OrderCopyDataAttributes) SetPlaceTargetOrder(v bool) {
	o.PlaceTargetOrder = &v
}

// GetCancelSourceOrder returns the CancelSourceOrder field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetCancelSourceOrder() bool {
	if o == nil || o.CancelSourceOrder == nil {
		var ret bool
		return ret
	}
	return *o.CancelSourceOrder
}

// GetCancelSourceOrderOk returns a tuple with the CancelSourceOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetCancelSourceOrderOk() (*bool, bool) {
	if o == nil || o.CancelSourceOrder == nil {
		return nil, false
	}
	return o.CancelSourceOrder, true
}

// HasCancelSourceOrder returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasCancelSourceOrder() bool {
	if o != nil && o.CancelSourceOrder != nil {
		return true
	}

	return false
}

// SetCancelSourceOrder gets a reference to the given bool and assigns it to the CancelSourceOrder field.
func (o *OrderCopyDataAttributes) SetCancelSourceOrder(v bool) {
	o.CancelSourceOrder = &v
}

// GetReuseWallet returns the ReuseWallet field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetReuseWallet() bool {
	if o == nil || o.ReuseWallet == nil {
		var ret bool
		return ret
	}
	return *o.ReuseWallet
}

// GetReuseWalletOk returns a tuple with the ReuseWallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetReuseWalletOk() (*bool, bool) {
	if o == nil || o.ReuseWallet == nil {
		return nil, false
	}
	return o.ReuseWallet, true
}

// HasReuseWallet returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasReuseWallet() bool {
	if o != nil && o.ReuseWallet != nil {
		return true
	}

	return false
}

// SetReuseWallet gets a reference to the given bool and assigns it to the ReuseWallet field.
func (o *OrderCopyDataAttributes) SetReuseWallet(v bool) {
	o.ReuseWallet = &v
}

// GetErrorsLog returns the ErrorsLog field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetErrorsLog() map[string]interface{} {
	if o == nil || o.ErrorsLog == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ErrorsLog
}

// GetErrorsLogOk returns a tuple with the ErrorsLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetErrorsLogOk() (map[string]interface{}, bool) {
	if o == nil || o.ErrorsLog == nil {
		return nil, false
	}
	return o.ErrorsLog, true
}

// HasErrorsLog returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasErrorsLog() bool {
	if o != nil && o.ErrorsLog != nil {
		return true
	}

	return false
}

// SetErrorsLog gets a reference to the given map[string]interface{} and assigns it to the ErrorsLog field.
func (o *OrderCopyDataAttributes) SetErrorsLog(v map[string]interface{}) {
	o.ErrorsLog = v
}

// GetErrorsCount returns the ErrorsCount field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetErrorsCount() int32 {
	if o == nil || o.ErrorsCount == nil {
		var ret int32
		return ret
	}
	return *o.ErrorsCount
}

// GetErrorsCountOk returns a tuple with the ErrorsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetErrorsCountOk() (*int32, bool) {
	if o == nil || o.ErrorsCount == nil {
		return nil, false
	}
	return o.ErrorsCount, true
}

// HasErrorsCount returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasErrorsCount() bool {
	if o != nil && o.ErrorsCount != nil {
		return true
	}

	return false
}

// SetErrorsCount gets a reference to the given int32 and assigns it to the ErrorsCount field.
func (o *OrderCopyDataAttributes) SetErrorsCount(v int32) {
	o.ErrorsCount = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrderCopyDataAttributes) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OrderCopyDataAttributes) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *OrderCopyDataAttributes) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *OrderCopyDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *OrderCopyDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *OrderCopyDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCopyDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *OrderCopyDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *OrderCopyDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o OrderCopyDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StartedAt != nil {
		toSerialize["started_at"] = o.StartedAt
	}
	if o.CompletedAt != nil {
		toSerialize["completed_at"] = o.CompletedAt
	}
	if o.FailedAt != nil {
		toSerialize["failed_at"] = o.FailedAt
	}
	if o.PlaceTargetOrder != nil {
		toSerialize["place_target_order"] = o.PlaceTargetOrder
	}
	if o.CancelSourceOrder != nil {
		toSerialize["cancel_source_order"] = o.CancelSourceOrder
	}
	if o.ReuseWallet != nil {
		toSerialize["reuse_wallet"] = o.ReuseWallet
	}
	if o.ErrorsLog != nil {
		toSerialize["errors_log"] = o.ErrorsLog
	}
	if o.ErrorsCount != nil {
		toSerialize["errors_count"] = o.ErrorsCount
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableOrderCopyDataAttributes struct {
	value *OrderCopyDataAttributes
	isSet bool
}

func (v NullableOrderCopyDataAttributes) Get() *OrderCopyDataAttributes {
	return v.value
}

func (v *NullableOrderCopyDataAttributes) Set(val *OrderCopyDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCopyDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCopyDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCopyDataAttributes(val *OrderCopyDataAttributes) *NullableOrderCopyDataAttributes {
	return &NullableOrderCopyDataAttributes{value: val, isSet: true}
}

func (v NullableOrderCopyDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCopyDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
