/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// OrderSubscriptionUpdateDataRelationships struct for OrderSubscriptionUpdateDataRelationships
type OrderSubscriptionUpdateDataRelationships struct {
	CustomerPaymentSource *OrderSubscriptionUpdateDataRelationshipsCustomerPaymentSource `json:"customer_payment_source,omitempty"`
}

// NewOrderSubscriptionUpdateDataRelationships instantiates a new OrderSubscriptionUpdateDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderSubscriptionUpdateDataRelationships() *OrderSubscriptionUpdateDataRelationships {
	this := OrderSubscriptionUpdateDataRelationships{}
	return &this
}

// NewOrderSubscriptionUpdateDataRelationshipsWithDefaults instantiates a new OrderSubscriptionUpdateDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderSubscriptionUpdateDataRelationshipsWithDefaults() *OrderSubscriptionUpdateDataRelationships {
	this := OrderSubscriptionUpdateDataRelationships{}
	return &this
}

// GetCustomerPaymentSource returns the CustomerPaymentSource field value if set, zero value otherwise.
func (o *OrderSubscriptionUpdateDataRelationships) GetCustomerPaymentSource() OrderSubscriptionUpdateDataRelationshipsCustomerPaymentSource {
	if o == nil || o.CustomerPaymentSource == nil {
		var ret OrderSubscriptionUpdateDataRelationshipsCustomerPaymentSource
		return ret
	}
	return *o.CustomerPaymentSource
}

// GetCustomerPaymentSourceOk returns a tuple with the CustomerPaymentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSubscriptionUpdateDataRelationships) GetCustomerPaymentSourceOk() (*OrderSubscriptionUpdateDataRelationshipsCustomerPaymentSource, bool) {
	if o == nil || o.CustomerPaymentSource == nil {
		return nil, false
	}
	return o.CustomerPaymentSource, true
}

// HasCustomerPaymentSource returns a boolean if a field has been set.
func (o *OrderSubscriptionUpdateDataRelationships) HasCustomerPaymentSource() bool {
	if o != nil && o.CustomerPaymentSource != nil {
		return true
	}

	return false
}

// SetCustomerPaymentSource gets a reference to the given OrderSubscriptionUpdateDataRelationshipsCustomerPaymentSource and assigns it to the CustomerPaymentSource field.
func (o *OrderSubscriptionUpdateDataRelationships) SetCustomerPaymentSource(v OrderSubscriptionUpdateDataRelationshipsCustomerPaymentSource) {
	o.CustomerPaymentSource = &v
}

func (o OrderSubscriptionUpdateDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomerPaymentSource != nil {
		toSerialize["customer_payment_source"] = o.CustomerPaymentSource
	}
	return json.Marshal(toSerialize)
}

type NullableOrderSubscriptionUpdateDataRelationships struct {
	value *OrderSubscriptionUpdateDataRelationships
	isSet bool
}

func (v NullableOrderSubscriptionUpdateDataRelationships) Get() *OrderSubscriptionUpdateDataRelationships {
	return v.value
}

func (v *NullableOrderSubscriptionUpdateDataRelationships) Set(val *OrderSubscriptionUpdateDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderSubscriptionUpdateDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderSubscriptionUpdateDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderSubscriptionUpdateDataRelationships(val *OrderSubscriptionUpdateDataRelationships) *NullableOrderSubscriptionUpdateDataRelationships {
	return &NullableOrderSubscriptionUpdateDataRelationships{value: val, isSet: true}
}

func (v NullableOrderSubscriptionUpdateDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderSubscriptionUpdateDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
