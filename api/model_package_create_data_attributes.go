/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.9.5
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PackageCreateDataAttributes struct for PackageCreateDataAttributes
type PackageCreateDataAttributes struct {
	// Unique name for the package
	Name string `json:"name"`
	// The package identifying code
	Code *string `json:"code,omitempty"`
	// The package length, used to automatically calculate the tax rates from the available carrier accounts.
	Length float32 `json:"length"`
	// The package width, used to automatically calculate the tax rates from the available carrier accounts.
	Width float32 `json:"width"`
	// The package height, used to automatically calculate the tax rates from the available carrier accounts.
	Height float32 `json:"height"`
	// The unit of length. Can be one of 'cm', or 'in'.
	UnitOfLength string `json:"unit_of_length"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewPackageCreateDataAttributes instantiates a new PackageCreateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageCreateDataAttributes(name string, length float32, width float32, height float32, unitOfLength string) *PackageCreateDataAttributes {
	this := PackageCreateDataAttributes{}
	this.Name = name
	this.Length = length
	this.Width = width
	this.Height = height
	this.UnitOfLength = unitOfLength
	return &this
}

// NewPackageCreateDataAttributesWithDefaults instantiates a new PackageCreateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageCreateDataAttributesWithDefaults() *PackageCreateDataAttributes {
	this := PackageCreateDataAttributes{}
	return &this
}

// GetName returns the Name field value
func (o *PackageCreateDataAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PackageCreateDataAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PackageCreateDataAttributes) SetName(v string) {
	o.Name = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *PackageCreateDataAttributes) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageCreateDataAttributes) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *PackageCreateDataAttributes) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *PackageCreateDataAttributes) SetCode(v string) {
	o.Code = &v
}

// GetLength returns the Length field value
func (o *PackageCreateDataAttributes) GetLength() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Length
}

// GetLengthOk returns a tuple with the Length field value
// and a boolean to check if the value has been set.
func (o *PackageCreateDataAttributes) GetLengthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Length, true
}

// SetLength sets field value
func (o *PackageCreateDataAttributes) SetLength(v float32) {
	o.Length = v
}

// GetWidth returns the Width field value
func (o *PackageCreateDataAttributes) GetWidth() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *PackageCreateDataAttributes) GetWidthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *PackageCreateDataAttributes) SetWidth(v float32) {
	o.Width = v
}

// GetHeight returns the Height field value
func (o *PackageCreateDataAttributes) GetHeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *PackageCreateDataAttributes) GetHeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *PackageCreateDataAttributes) SetHeight(v float32) {
	o.Height = v
}

// GetUnitOfLength returns the UnitOfLength field value
func (o *PackageCreateDataAttributes) GetUnitOfLength() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnitOfLength
}

// GetUnitOfLengthOk returns a tuple with the UnitOfLength field value
// and a boolean to check if the value has been set.
func (o *PackageCreateDataAttributes) GetUnitOfLengthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitOfLength, true
}

// SetUnitOfLength sets field value
func (o *PackageCreateDataAttributes) SetUnitOfLength(v string) {
	o.UnitOfLength = v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *PackageCreateDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageCreateDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PackageCreateDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *PackageCreateDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *PackageCreateDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageCreateDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PackageCreateDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *PackageCreateDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PackageCreateDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageCreateDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PackageCreateDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *PackageCreateDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o PackageCreateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["length"] = o.Length
	}
	if true {
		toSerialize["width"] = o.Width
	}
	if true {
		toSerialize["height"] = o.Height
	}
	if true {
		toSerialize["unit_of_length"] = o.UnitOfLength
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullablePackageCreateDataAttributes struct {
	value *PackageCreateDataAttributes
	isSet bool
}

func (v NullablePackageCreateDataAttributes) Get() *PackageCreateDataAttributes {
	return v.value
}

func (v *NullablePackageCreateDataAttributes) Set(val *PackageCreateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageCreateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageCreateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageCreateDataAttributes(val *PackageCreateDataAttributes) *NullablePackageCreateDataAttributes {
	return &NullablePackageCreateDataAttributes{value: val, isSet: true}
}

func (v NullablePackageCreateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageCreateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
