/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHAuthorizationsAuthorizationIdRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHAuthorizationsAuthorizationIdRequestDataAttributes{}

// PATCHAuthorizationsAuthorizationIdRequestDataAttributes struct for PATCHAuthorizationsAuthorizationIdRequestDataAttributes
type PATCHAuthorizationsAuthorizationIdRequestDataAttributes struct {
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
	// Send this attribute if you want to create a capture for this authorization.
	Capture interface{} `json:"_capture,omitempty"`
	// The associated capture amount, in cents.
	CaptureAmountCents interface{} `json:"_capture_amount_cents,omitempty"`
	// Send this attribute if you want to create a void for this authorization.
	Void interface{} `json:"_void,omitempty"`
}

// NewPATCHAuthorizationsAuthorizationIdRequestDataAttributes instantiates a new PATCHAuthorizationsAuthorizationIdRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHAuthorizationsAuthorizationIdRequestDataAttributes() *PATCHAuthorizationsAuthorizationIdRequestDataAttributes {
	this := PATCHAuthorizationsAuthorizationIdRequestDataAttributes{}
	return &this
}

// NewPATCHAuthorizationsAuthorizationIdRequestDataAttributesWithDefaults instantiates a new PATCHAuthorizationsAuthorizationIdRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHAuthorizationsAuthorizationIdRequestDataAttributesWithDefaults() *PATCHAuthorizationsAuthorizationIdRequestDataAttributes {
	this := PATCHAuthorizationsAuthorizationIdRequestDataAttributes{}
	return &this
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

// GetCapture returns the Capture field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetCapture() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Capture
}

// GetCaptureOk returns a tuple with the Capture field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetCaptureOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Capture) {
		return nil, false
	}
	return &o.Capture, true
}

// HasCapture returns a boolean if a field has been set.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) HasCapture() bool {
	if o != nil && IsNil(o.Capture) {
		return true
	}

	return false
}

// SetCapture gets a reference to the given interface{} and assigns it to the Capture field.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) SetCapture(v interface{}) {
	o.Capture = v
}

// GetCaptureAmountCents returns the CaptureAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetCaptureAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CaptureAmountCents
}

// GetCaptureAmountCentsOk returns a tuple with the CaptureAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetCaptureAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CaptureAmountCents) {
		return nil, false
	}
	return &o.CaptureAmountCents, true
}

// HasCaptureAmountCents returns a boolean if a field has been set.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) HasCaptureAmountCents() bool {
	if o != nil && IsNil(o.CaptureAmountCents) {
		return true
	}

	return false
}

// SetCaptureAmountCents gets a reference to the given interface{} and assigns it to the CaptureAmountCents field.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) SetCaptureAmountCents(v interface{}) {
	o.CaptureAmountCents = v
}

// GetVoid returns the Void field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetVoid() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Void
}

// GetVoidOk returns a tuple with the Void field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) GetVoidOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Void) {
		return nil, false
	}
	return &o.Void, true
}

// HasVoid returns a boolean if a field has been set.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) HasVoid() bool {
	if o != nil && IsNil(o.Void) {
		return true
	}

	return false
}

// SetVoid gets a reference to the given interface{} and assigns it to the Void field.
func (o *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) SetVoid(v interface{}) {
	o.Void = v
}

func (o PATCHAuthorizationsAuthorizationIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHAuthorizationsAuthorizationIdRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Capture != nil {
		toSerialize["_capture"] = o.Capture
	}
	if o.CaptureAmountCents != nil {
		toSerialize["_capture_amount_cents"] = o.CaptureAmountCents
	}
	if o.Void != nil {
		toSerialize["_void"] = o.Void
	}
	return toSerialize, nil
}

type NullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes struct {
	value *PATCHAuthorizationsAuthorizationIdRequestDataAttributes
	isSet bool
}

func (v NullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes) Get() *PATCHAuthorizationsAuthorizationIdRequestDataAttributes {
	return v.value
}

func (v *NullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes) Set(val *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes(val *PATCHAuthorizationsAuthorizationIdRequestDataAttributes) *NullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes {
	return &NullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHAuthorizationsAuthorizationIdRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
