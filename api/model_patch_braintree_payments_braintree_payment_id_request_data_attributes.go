/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes{}

// PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes struct for PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes
type PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes struct {
	// The Braintree payment method nonce. Sent by the Braintree JS SDK.
	PaymentMethodNonce interface{} `json:"payment_method_nonce,omitempty"`
	// The Braintree payment ID used by local payment and sent by the Braintree JS SDK.
	PaymentId interface{} `json:"payment_id,omitempty"`
	// Indicates if the payment is local, in such case Braintree will trigger a webhook call passing the \"payment_id\" and \"payment_method_nonce\" in order to complete the transaction.
	Local interface{} `json:"local,omitempty"`
	// Braintree payment options: 'customer_id' and 'payment_method_token'
	Options interface{} `json:"options,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes instantiates a new PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes() *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes {
	this := PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes{}
	return &this
}

// NewPATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributesWithDefaults instantiates a new PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributesWithDefaults() *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes {
	this := PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes{}
	return &this
}

// GetPaymentMethodNonce returns the PaymentMethodNonce field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetPaymentMethodNonce() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PaymentMethodNonce
}

// GetPaymentMethodNonceOk returns a tuple with the PaymentMethodNonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetPaymentMethodNonceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PaymentMethodNonce) {
		return nil, false
	}
	return &o.PaymentMethodNonce, true
}

// HasPaymentMethodNonce returns a boolean if a field has been set.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) HasPaymentMethodNonce() bool {
	if o != nil && IsNil(o.PaymentMethodNonce) {
		return true
	}

	return false
}

// SetPaymentMethodNonce gets a reference to the given interface{} and assigns it to the PaymentMethodNonce field.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) SetPaymentMethodNonce(v interface{}) {
	o.PaymentMethodNonce = v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetPaymentId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetPaymentIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return &o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) HasPaymentId() bool {
	if o != nil && IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given interface{} and assigns it to the PaymentId field.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) SetPaymentId(v interface{}) {
	o.PaymentId = v
}

// GetLocal returns the Local field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetLocal() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetLocalOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Local) {
		return nil, false
	}
	return &o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) HasLocal() bool {
	if o != nil && IsNil(o.Local) {
		return true
	}

	return false
}

// SetLocal gets a reference to the given interface{} and assigns it to the Local field.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) SetLocal(v interface{}) {
	o.Local = v
}

// GetOptions returns the Options field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetOptions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetOptionsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return &o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) HasOptions() bool {
	if o != nil && IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given interface{} and assigns it to the Options field.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) SetOptions(v interface{}) {
	o.Options = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PaymentMethodNonce != nil {
		toSerialize["payment_method_nonce"] = o.PaymentMethodNonce
	}
	if o.PaymentId != nil {
		toSerialize["payment_id"] = o.PaymentId
	}
	if o.Local != nil {
		toSerialize["local"] = o.Local
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes struct {
	value *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes
	isSet bool
}

func (v NullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) Get() *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes {
	return v.value
}

func (v *NullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) Set(val *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes(val *PATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) *NullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes {
	return &NullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHBraintreePaymentsBraintreePaymentIdRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
