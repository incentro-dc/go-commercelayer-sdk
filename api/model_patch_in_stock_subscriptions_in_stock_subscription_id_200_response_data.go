/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData struct for PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData
type PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData struct {
	// The resource's id
	Id interface{} `json:"id,omitempty"`
	// The resource's type
	Type          interface{}                                                              `json:"type,omitempty"`
	Links         *GETAddresses200ResponseDataInnerLinks                                   `json:"links,omitempty"`
	Attributes    *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes `json:"attributes,omitempty"`
	Relationships *GETInStockSubscriptions200ResponseDataInnerRelationships                `json:"relationships,omitempty"`
}

// NewPATCHInStockSubscriptionsInStockSubscriptionId200ResponseData instantiates a new PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHInStockSubscriptionsInStockSubscriptionId200ResponseData() *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData {
	this := PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData{}
	return &this
}

// NewPATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataWithDefaults instantiates a new PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataWithDefaults() *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData {
	this := PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetIdOk() (*interface{}, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return &o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given interface{} and assigns it to the Id field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) SetId(v interface{}) {
	o.Id = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetTypeOk() (*interface{}, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given interface{} and assigns it to the Type field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) SetType(v interface{}) {
	o.Type = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetLinks() GETAddresses200ResponseDataInnerLinks {
	if o == nil || o.Links == nil {
		var ret GETAddresses200ResponseDataInnerLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetLinksOk() (*GETAddresses200ResponseDataInnerLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given GETAddresses200ResponseDataInnerLinks and assigns it to the Links field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) SetLinks(v GETAddresses200ResponseDataInnerLinks) {
	o.Links = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetAttributes() PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes {
	if o == nil || o.Attributes == nil {
		var ret PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetAttributesOk() (*PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes and assigns it to the Attributes field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) SetAttributes(v PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) {
	o.Attributes = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetRelationships() GETInStockSubscriptions200ResponseDataInnerRelationships {
	if o == nil || o.Relationships == nil {
		var ret GETInStockSubscriptions200ResponseDataInnerRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) GetRelationshipsOk() (*GETInStockSubscriptions200ResponseDataInnerRelationships, bool) {
	if o == nil || o.Relationships == nil {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) HasRelationships() bool {
	if o != nil && o.Relationships != nil {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given GETInStockSubscriptions200ResponseDataInnerRelationships and assigns it to the Relationships field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) SetRelationships(v GETInStockSubscriptions200ResponseDataInnerRelationships) {
	o.Relationships = &v
}

func (o PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.Relationships != nil {
		toSerialize["relationships"] = o.Relationships
	}
	return json.Marshal(toSerialize)
}

type NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData struct {
	value *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData
	isSet bool
}

func (v NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) Get() *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData {
	return v.value
}

func (v *NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) Set(val *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData(val *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) *NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData {
	return &NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData{value: val, isSet: true}
}

func (v NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
