/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.7.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes struct for PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes
type PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes struct {
	// The code of the associated SKU, replace the relationship
	SkuCode *string `json:"sku_code,omitempty"`
	// The threshold at which to trigger the back in stock notification, default to 1.
	StockThreshold *int32 `json:"stock_threshold,omitempty"`
	// Send this attribute if you want to activate an inactive subscription.
	Activate *bool `json:"_activate,omitempty"`
	// Send this attribute if you want to dactivate an active subscription.
	Deactivate *bool `json:"_deactivate,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewPATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes instantiates a new PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes() *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes {
	this := PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes{}
	return &this
}

// NewPATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributesWithDefaults instantiates a new PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributesWithDefaults() *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes {
	this := PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes{}
	return &this
}

// GetSkuCode returns the SkuCode field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetSkuCode() string {
	if o == nil || o.SkuCode == nil {
		var ret string
		return ret
	}
	return *o.SkuCode
}

// GetSkuCodeOk returns a tuple with the SkuCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetSkuCodeOk() (*string, bool) {
	if o == nil || o.SkuCode == nil {
		return nil, false
	}
	return o.SkuCode, true
}

// HasSkuCode returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) HasSkuCode() bool {
	if o != nil && o.SkuCode != nil {
		return true
	}

	return false
}

// SetSkuCode gets a reference to the given string and assigns it to the SkuCode field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) SetSkuCode(v string) {
	o.SkuCode = &v
}

// GetStockThreshold returns the StockThreshold field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetStockThreshold() int32 {
	if o == nil || o.StockThreshold == nil {
		var ret int32
		return ret
	}
	return *o.StockThreshold
}

// GetStockThresholdOk returns a tuple with the StockThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetStockThresholdOk() (*int32, bool) {
	if o == nil || o.StockThreshold == nil {
		return nil, false
	}
	return o.StockThreshold, true
}

// HasStockThreshold returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) HasStockThreshold() bool {
	if o != nil && o.StockThreshold != nil {
		return true
	}

	return false
}

// SetStockThreshold gets a reference to the given int32 and assigns it to the StockThreshold field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) SetStockThreshold(v int32) {
	o.StockThreshold = &v
}

// GetActivate returns the Activate field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetActivate() bool {
	if o == nil || o.Activate == nil {
		var ret bool
		return ret
	}
	return *o.Activate
}

// GetActivateOk returns a tuple with the Activate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetActivateOk() (*bool, bool) {
	if o == nil || o.Activate == nil {
		return nil, false
	}
	return o.Activate, true
}

// HasActivate returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) HasActivate() bool {
	if o != nil && o.Activate != nil {
		return true
	}

	return false
}

// SetActivate gets a reference to the given bool and assigns it to the Activate field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) SetActivate(v bool) {
	o.Activate = &v
}

// GetDeactivate returns the Deactivate field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetDeactivate() bool {
	if o == nil || o.Deactivate == nil {
		var ret bool
		return ret
	}
	return *o.Deactivate
}

// GetDeactivateOk returns a tuple with the Deactivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetDeactivateOk() (*bool, bool) {
	if o == nil || o.Deactivate == nil {
		return nil, false
	}
	return o.Deactivate, true
}

// HasDeactivate returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) HasDeactivate() bool {
	if o != nil && o.Deactivate != nil {
		return true
	}

	return false
}

// SetDeactivate gets a reference to the given bool and assigns it to the Deactivate field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) SetDeactivate(v bool) {
	o.Deactivate = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SkuCode != nil {
		toSerialize["sku_code"] = o.SkuCode
	}
	if o.StockThreshold != nil {
		toSerialize["stock_threshold"] = o.StockThreshold
	}
	if o.Activate != nil {
		toSerialize["_activate"] = o.Activate
	}
	if o.Deactivate != nil {
		toSerialize["_deactivate"] = o.Deactivate
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes struct {
	value *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes
	isSet bool
}

func (v NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) Get() *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes {
	return v.value
}

func (v *NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) Set(val *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes(val *PATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) *NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes {
	return &NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHInStockSubscriptionsInStockSubscriptionId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
