/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.0
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PATCHReturnsReturnId200ResponseDataAttributes struct for PATCHReturnsReturnId200ResponseDataAttributes
type PATCHReturnsReturnId200ResponseDataAttributes struct {
	// Send this attribute if you want to activate this return.
	Request *bool `json:"_request,omitempty"`
	// Send this attribute if you want to mark this return as approved.
	Approve *bool `json:"_approve,omitempty"`
	// Send this attribute if you want to mark this return as cancelled.
	Cancel *bool `json:"_cancel,omitempty"`
	// Send this attribute if you want to mark this return as shipped.
	Ship *bool `json:"_ship,omitempty"`
	// Send this attribute if you want to mark this return as rejected.
	Reject *bool `json:"_reject,omitempty"`
	// Send this attribute if you want to mark this return as received.
	Receive *bool `json:"_receive,omitempty"`
	// Send this attribute if you want to restock all of the return line items.
	Restock *bool `json:"_restock,omitempty"`
	// Send this attribute if you want to archive the return.
	Archive *bool `json:"_archive,omitempty"`
	// Send this attribute if you want to unarchive the return.
	Unarchive *bool `json:"_unarchive,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewPATCHReturnsReturnId200ResponseDataAttributes instantiates a new PATCHReturnsReturnId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHReturnsReturnId200ResponseDataAttributes() *PATCHReturnsReturnId200ResponseDataAttributes {
	this := PATCHReturnsReturnId200ResponseDataAttributes{}
	return &this
}

// NewPATCHReturnsReturnId200ResponseDataAttributesWithDefaults instantiates a new PATCHReturnsReturnId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHReturnsReturnId200ResponseDataAttributesWithDefaults() *PATCHReturnsReturnId200ResponseDataAttributes {
	this := PATCHReturnsReturnId200ResponseDataAttributes{}
	return &this
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRequest() bool {
	if o == nil || o.Request == nil {
		var ret bool
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRequestOk() (*bool, bool) {
	if o == nil || o.Request == nil {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasRequest() bool {
	if o != nil && o.Request != nil {
		return true
	}

	return false
}

// SetRequest gets a reference to the given bool and assigns it to the Request field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetRequest(v bool) {
	o.Request = &v
}

// GetApprove returns the Approve field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetApprove() bool {
	if o == nil || o.Approve == nil {
		var ret bool
		return ret
	}
	return *o.Approve
}

// GetApproveOk returns a tuple with the Approve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetApproveOk() (*bool, bool) {
	if o == nil || o.Approve == nil {
		return nil, false
	}
	return o.Approve, true
}

// HasApprove returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasApprove() bool {
	if o != nil && o.Approve != nil {
		return true
	}

	return false
}

// SetApprove gets a reference to the given bool and assigns it to the Approve field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetApprove(v bool) {
	o.Approve = &v
}

// GetCancel returns the Cancel field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetCancel() bool {
	if o == nil || o.Cancel == nil {
		var ret bool
		return ret
	}
	return *o.Cancel
}

// GetCancelOk returns a tuple with the Cancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetCancelOk() (*bool, bool) {
	if o == nil || o.Cancel == nil {
		return nil, false
	}
	return o.Cancel, true
}

// HasCancel returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasCancel() bool {
	if o != nil && o.Cancel != nil {
		return true
	}

	return false
}

// SetCancel gets a reference to the given bool and assigns it to the Cancel field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetCancel(v bool) {
	o.Cancel = &v
}

// GetShip returns the Ship field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetShip() bool {
	if o == nil || o.Ship == nil {
		var ret bool
		return ret
	}
	return *o.Ship
}

// GetShipOk returns a tuple with the Ship field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetShipOk() (*bool, bool) {
	if o == nil || o.Ship == nil {
		return nil, false
	}
	return o.Ship, true
}

// HasShip returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasShip() bool {
	if o != nil && o.Ship != nil {
		return true
	}

	return false
}

// SetShip gets a reference to the given bool and assigns it to the Ship field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetShip(v bool) {
	o.Ship = &v
}

// GetReject returns the Reject field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReject() bool {
	if o == nil || o.Reject == nil {
		var ret bool
		return ret
	}
	return *o.Reject
}

// GetRejectOk returns a tuple with the Reject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRejectOk() (*bool, bool) {
	if o == nil || o.Reject == nil {
		return nil, false
	}
	return o.Reject, true
}

// HasReject returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasReject() bool {
	if o != nil && o.Reject != nil {
		return true
	}

	return false
}

// SetReject gets a reference to the given bool and assigns it to the Reject field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetReject(v bool) {
	o.Reject = &v
}

// GetReceive returns the Receive field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReceive() bool {
	if o == nil || o.Receive == nil {
		var ret bool
		return ret
	}
	return *o.Receive
}

// GetReceiveOk returns a tuple with the Receive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReceiveOk() (*bool, bool) {
	if o == nil || o.Receive == nil {
		return nil, false
	}
	return o.Receive, true
}

// HasReceive returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasReceive() bool {
	if o != nil && o.Receive != nil {
		return true
	}

	return false
}

// SetReceive gets a reference to the given bool and assigns it to the Receive field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetReceive(v bool) {
	o.Receive = &v
}

// GetRestock returns the Restock field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRestock() bool {
	if o == nil || o.Restock == nil {
		var ret bool
		return ret
	}
	return *o.Restock
}

// GetRestockOk returns a tuple with the Restock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRestockOk() (*bool, bool) {
	if o == nil || o.Restock == nil {
		return nil, false
	}
	return o.Restock, true
}

// HasRestock returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasRestock() bool {
	if o != nil && o.Restock != nil {
		return true
	}

	return false
}

// SetRestock gets a reference to the given bool and assigns it to the Restock field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetRestock(v bool) {
	o.Restock = &v
}

// GetArchive returns the Archive field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetArchive() bool {
	if o == nil || o.Archive == nil {
		var ret bool
		return ret
	}
	return *o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetArchiveOk() (*bool, bool) {
	if o == nil || o.Archive == nil {
		return nil, false
	}
	return o.Archive, true
}

// HasArchive returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasArchive() bool {
	if o != nil && o.Archive != nil {
		return true
	}

	return false
}

// SetArchive gets a reference to the given bool and assigns it to the Archive field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetArchive(v bool) {
	o.Archive = &v
}

// GetUnarchive returns the Unarchive field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetUnarchive() bool {
	if o == nil || o.Unarchive == nil {
		var ret bool
		return ret
	}
	return *o.Unarchive
}

// GetUnarchiveOk returns a tuple with the Unarchive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetUnarchiveOk() (*bool, bool) {
	if o == nil || o.Unarchive == nil {
		return nil, false
	}
	return o.Unarchive, true
}

// HasUnarchive returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasUnarchive() bool {
	if o != nil && o.Unarchive != nil {
		return true
	}

	return false
}

// SetUnarchive gets a reference to the given bool and assigns it to the Unarchive field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetUnarchive(v bool) {
	o.Unarchive = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o PATCHReturnsReturnId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Request != nil {
		toSerialize["_request"] = o.Request
	}
	if o.Approve != nil {
		toSerialize["_approve"] = o.Approve
	}
	if o.Cancel != nil {
		toSerialize["_cancel"] = o.Cancel
	}
	if o.Ship != nil {
		toSerialize["_ship"] = o.Ship
	}
	if o.Reject != nil {
		toSerialize["_reject"] = o.Reject
	}
	if o.Receive != nil {
		toSerialize["_receive"] = o.Receive
	}
	if o.Restock != nil {
		toSerialize["_restock"] = o.Restock
	}
	if o.Archive != nil {
		toSerialize["_archive"] = o.Archive
	}
	if o.Unarchive != nil {
		toSerialize["_unarchive"] = o.Unarchive
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullablePATCHReturnsReturnId200ResponseDataAttributes struct {
	value *PATCHReturnsReturnId200ResponseDataAttributes
	isSet bool
}

func (v NullablePATCHReturnsReturnId200ResponseDataAttributes) Get() *PATCHReturnsReturnId200ResponseDataAttributes {
	return v.value
}

func (v *NullablePATCHReturnsReturnId200ResponseDataAttributes) Set(val *PATCHReturnsReturnId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHReturnsReturnId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHReturnsReturnId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHReturnsReturnId200ResponseDataAttributes(val *PATCHReturnsReturnId200ResponseDataAttributes) *NullablePATCHReturnsReturnId200ResponseDataAttributes {
	return &NullablePATCHReturnsReturnId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHReturnsReturnId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHReturnsReturnId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


