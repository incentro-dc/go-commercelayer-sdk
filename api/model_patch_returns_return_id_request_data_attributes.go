/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHReturnsReturnIdRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHReturnsReturnIdRequestDataAttributes{}

// PATCHReturnsReturnIdRequestDataAttributes struct for PATCHReturnsReturnIdRequestDataAttributes
type PATCHReturnsReturnIdRequestDataAttributes struct {
	// Send this attribute if you want to activate this return.
	Request interface{} `json:"_request,omitempty"`
	// Send this attribute if you want to mark this return as approved.
	Approve interface{} `json:"_approve,omitempty"`
	// Send this attribute if you want to mark this return as cancelled.
	Cancel interface{} `json:"_cancel,omitempty"`
	// Send this attribute if you want to mark this return as shipped.
	Ship interface{} `json:"_ship,omitempty"`
	// Send this attribute if you want to mark this return as rejected.
	Reject interface{} `json:"_reject,omitempty"`
	// Send this attribute if you want to mark this return as received.
	Receive interface{} `json:"_receive,omitempty"`
	// Send this attribute if you want to restock all of the return line items.
	Restock interface{} `json:"_restock,omitempty"`
	// Send this attribute if you want to archive the return.
	Archive interface{} `json:"_archive,omitempty"`
	// Send this attribute if you want to unarchive the return.
	Unarchive interface{} `json:"_unarchive,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHReturnsReturnIdRequestDataAttributes instantiates a new PATCHReturnsReturnIdRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHReturnsReturnIdRequestDataAttributes() *PATCHReturnsReturnIdRequestDataAttributes {
	this := PATCHReturnsReturnIdRequestDataAttributes{}
	return &this
}

// NewPATCHReturnsReturnIdRequestDataAttributesWithDefaults instantiates a new PATCHReturnsReturnIdRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHReturnsReturnIdRequestDataAttributesWithDefaults() *PATCHReturnsReturnIdRequestDataAttributes {
	this := PATCHReturnsReturnIdRequestDataAttributes{}
	return &this
}

// GetRequest returns the Request field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetRequest() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetRequestOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return &o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasRequest() bool {
	if o != nil && IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given interface{} and assigns it to the Request field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetRequest(v interface{}) {
	o.Request = v
}

// GetApprove returns the Approve field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetApprove() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Approve
}

// GetApproveOk returns a tuple with the Approve field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetApproveOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Approve) {
		return nil, false
	}
	return &o.Approve, true
}

// HasApprove returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasApprove() bool {
	if o != nil && IsNil(o.Approve) {
		return true
	}

	return false
}

// SetApprove gets a reference to the given interface{} and assigns it to the Approve field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetApprove(v interface{}) {
	o.Approve = v
}

// GetCancel returns the Cancel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetCancel() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Cancel
}

// GetCancelOk returns a tuple with the Cancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetCancelOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Cancel) {
		return nil, false
	}
	return &o.Cancel, true
}

// HasCancel returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasCancel() bool {
	if o != nil && IsNil(o.Cancel) {
		return true
	}

	return false
}

// SetCancel gets a reference to the given interface{} and assigns it to the Cancel field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetCancel(v interface{}) {
	o.Cancel = v
}

// GetShip returns the Ship field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetShip() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Ship
}

// GetShipOk returns a tuple with the Ship field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetShipOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Ship) {
		return nil, false
	}
	return &o.Ship, true
}

// HasShip returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasShip() bool {
	if o != nil && IsNil(o.Ship) {
		return true
	}

	return false
}

// SetShip gets a reference to the given interface{} and assigns it to the Ship field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetShip(v interface{}) {
	o.Ship = v
}

// GetReject returns the Reject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetReject() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reject
}

// GetRejectOk returns a tuple with the Reject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetRejectOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reject) {
		return nil, false
	}
	return &o.Reject, true
}

// HasReject returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasReject() bool {
	if o != nil && IsNil(o.Reject) {
		return true
	}

	return false
}

// SetReject gets a reference to the given interface{} and assigns it to the Reject field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetReject(v interface{}) {
	o.Reject = v
}

// GetReceive returns the Receive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetReceive() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Receive
}

// GetReceiveOk returns a tuple with the Receive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetReceiveOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Receive) {
		return nil, false
	}
	return &o.Receive, true
}

// HasReceive returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasReceive() bool {
	if o != nil && IsNil(o.Receive) {
		return true
	}

	return false
}

// SetReceive gets a reference to the given interface{} and assigns it to the Receive field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetReceive(v interface{}) {
	o.Receive = v
}

// GetRestock returns the Restock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetRestock() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Restock
}

// GetRestockOk returns a tuple with the Restock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetRestockOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Restock) {
		return nil, false
	}
	return &o.Restock, true
}

// HasRestock returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasRestock() bool {
	if o != nil && IsNil(o.Restock) {
		return true
	}

	return false
}

// SetRestock gets a reference to the given interface{} and assigns it to the Restock field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetRestock(v interface{}) {
	o.Restock = v
}

// GetArchive returns the Archive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetArchive() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetArchiveOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Archive) {
		return nil, false
	}
	return &o.Archive, true
}

// HasArchive returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasArchive() bool {
	if o != nil && IsNil(o.Archive) {
		return true
	}

	return false
}

// SetArchive gets a reference to the given interface{} and assigns it to the Archive field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetArchive(v interface{}) {
	o.Archive = v
}

// GetUnarchive returns the Unarchive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetUnarchive() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Unarchive
}

// GetUnarchiveOk returns a tuple with the Unarchive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetUnarchiveOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Unarchive) {
		return nil, false
	}
	return &o.Unarchive, true
}

// HasUnarchive returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasUnarchive() bool {
	if o != nil && IsNil(o.Unarchive) {
		return true
	}

	return false
}

// SetUnarchive gets a reference to the given interface{} and assigns it to the Unarchive field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetUnarchive(v interface{}) {
	o.Unarchive = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnIdRequestDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHReturnsReturnIdRequestDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHReturnsReturnIdRequestDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHReturnsReturnIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHReturnsReturnIdRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Request != nil {
		toSerialize["_request"] = o.Request
	}
	if o.Approve != nil {
		toSerialize["_approve"] = o.Approve
	}
	if o.Cancel != nil {
		toSerialize["_cancel"] = o.Cancel
	}
	if o.Ship != nil {
		toSerialize["_ship"] = o.Ship
	}
	if o.Reject != nil {
		toSerialize["_reject"] = o.Reject
	}
	if o.Receive != nil {
		toSerialize["_receive"] = o.Receive
	}
	if o.Restock != nil {
		toSerialize["_restock"] = o.Restock
	}
	if o.Archive != nil {
		toSerialize["_archive"] = o.Archive
	}
	if o.Unarchive != nil {
		toSerialize["_unarchive"] = o.Unarchive
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHReturnsReturnIdRequestDataAttributes struct {
	value *PATCHReturnsReturnIdRequestDataAttributes
	isSet bool
}

func (v NullablePATCHReturnsReturnIdRequestDataAttributes) Get() *PATCHReturnsReturnIdRequestDataAttributes {
	return v.value
}

func (v *NullablePATCHReturnsReturnIdRequestDataAttributes) Set(val *PATCHReturnsReturnIdRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHReturnsReturnIdRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHReturnsReturnIdRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHReturnsReturnIdRequestDataAttributes(val *PATCHReturnsReturnIdRequestDataAttributes) *NullablePATCHReturnsReturnIdRequestDataAttributes {
	return &NullablePATCHReturnsReturnIdRequestDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHReturnsReturnIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHReturnsReturnIdRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
