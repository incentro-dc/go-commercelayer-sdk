/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHShipmentsShipmentIdRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHShipmentsShipmentIdRequestDataAttributes{}

// PATCHShipmentsShipmentIdRequestDataAttributes struct for PATCHShipmentsShipmentIdRequestDataAttributes
type PATCHShipmentsShipmentIdRequestDataAttributes struct {
	// Send this attribute if you want to put this shipment on hold.
	OnHold interface{} `json:"_on_hold,omitempty"`
	// Send this attribute if you want to start picking this shipment.
	Picking interface{} `json:"_picking,omitempty"`
	// Send this attribute if you want to start packing this shipment.
	Packing interface{} `json:"_packing,omitempty"`
	// Send this attribute if you want to mark this shipment as ready to ship.
	ReadyToShip interface{} `json:"_ready_to_ship,omitempty"`
	// Send this attribute if you want to mark this shipment as shipped.
	Ship interface{} `json:"_ship,omitempty"`
	// Send this attribute if you want get the shipping rates from the associated carrier accounts.
	GetRates interface{} `json:"_get_rates,omitempty"`
	// The selected purchase rate from the available shipping rates.
	SelectedRateId interface{} `json:"selected_rate_id,omitempty"`
	// Send this attribute if you want to purchase this shipment with the selected rate.
	Purchase interface{} `json:"_purchase,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHShipmentsShipmentIdRequestDataAttributes instantiates a new PATCHShipmentsShipmentIdRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHShipmentsShipmentIdRequestDataAttributes() *PATCHShipmentsShipmentIdRequestDataAttributes {
	this := PATCHShipmentsShipmentIdRequestDataAttributes{}
	return &this
}

// NewPATCHShipmentsShipmentIdRequestDataAttributesWithDefaults instantiates a new PATCHShipmentsShipmentIdRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHShipmentsShipmentIdRequestDataAttributesWithDefaults() *PATCHShipmentsShipmentIdRequestDataAttributes {
	this := PATCHShipmentsShipmentIdRequestDataAttributes{}
	return &this
}

// GetOnHold returns the OnHold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetOnHold() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OnHold
}

// GetOnHoldOk returns a tuple with the OnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetOnHoldOk() (*interface{}, bool) {
	if o == nil || IsNil(o.OnHold) {
		return nil, false
	}
	return &o.OnHold, true
}

// HasOnHold returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasOnHold() bool {
	if o != nil && IsNil(o.OnHold) {
		return true
	}

	return false
}

// SetOnHold gets a reference to the given interface{} and assigns it to the OnHold field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetOnHold(v interface{}) {
	o.OnHold = v
}

// GetPicking returns the Picking field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetPicking() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Picking
}

// GetPickingOk returns a tuple with the Picking field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetPickingOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Picking) {
		return nil, false
	}
	return &o.Picking, true
}

// HasPicking returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasPicking() bool {
	if o != nil && IsNil(o.Picking) {
		return true
	}

	return false
}

// SetPicking gets a reference to the given interface{} and assigns it to the Picking field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetPicking(v interface{}) {
	o.Picking = v
}

// GetPacking returns the Packing field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetPacking() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Packing
}

// GetPackingOk returns a tuple with the Packing field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetPackingOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Packing) {
		return nil, false
	}
	return &o.Packing, true
}

// HasPacking returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasPacking() bool {
	if o != nil && IsNil(o.Packing) {
		return true
	}

	return false
}

// SetPacking gets a reference to the given interface{} and assigns it to the Packing field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetPacking(v interface{}) {
	o.Packing = v
}

// GetReadyToShip returns the ReadyToShip field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetReadyToShip() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReadyToShip
}

// GetReadyToShipOk returns a tuple with the ReadyToShip field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetReadyToShipOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReadyToShip) {
		return nil, false
	}
	return &o.ReadyToShip, true
}

// HasReadyToShip returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasReadyToShip() bool {
	if o != nil && IsNil(o.ReadyToShip) {
		return true
	}

	return false
}

// SetReadyToShip gets a reference to the given interface{} and assigns it to the ReadyToShip field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetReadyToShip(v interface{}) {
	o.ReadyToShip = v
}

// GetShip returns the Ship field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetShip() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Ship
}

// GetShipOk returns a tuple with the Ship field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetShipOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Ship) {
		return nil, false
	}
	return &o.Ship, true
}

// HasShip returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasShip() bool {
	if o != nil && IsNil(o.Ship) {
		return true
	}

	return false
}

// SetShip gets a reference to the given interface{} and assigns it to the Ship field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetShip(v interface{}) {
	o.Ship = v
}

// GetGetRates returns the GetRates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetGetRates() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.GetRates
}

// GetGetRatesOk returns a tuple with the GetRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetGetRatesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.GetRates) {
		return nil, false
	}
	return &o.GetRates, true
}

// HasGetRates returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasGetRates() bool {
	if o != nil && IsNil(o.GetRates) {
		return true
	}

	return false
}

// SetGetRates gets a reference to the given interface{} and assigns it to the GetRates field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetGetRates(v interface{}) {
	o.GetRates = v
}

// GetSelectedRateId returns the SelectedRateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetSelectedRateId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SelectedRateId
}

// GetSelectedRateIdOk returns a tuple with the SelectedRateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetSelectedRateIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SelectedRateId) {
		return nil, false
	}
	return &o.SelectedRateId, true
}

// HasSelectedRateId returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasSelectedRateId() bool {
	if o != nil && IsNil(o.SelectedRateId) {
		return true
	}

	return false
}

// SetSelectedRateId gets a reference to the given interface{} and assigns it to the SelectedRateId field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetSelectedRateId(v interface{}) {
	o.SelectedRateId = v
}

// GetPurchase returns the Purchase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetPurchase() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Purchase
}

// GetPurchaseOk returns a tuple with the Purchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetPurchaseOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Purchase) {
		return nil, false
	}
	return &o.Purchase, true
}

// HasPurchase returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasPurchase() bool {
	if o != nil && IsNil(o.Purchase) {
		return true
	}

	return false
}

// SetPurchase gets a reference to the given interface{} and assigns it to the Purchase field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetPurchase(v interface{}) {
	o.Purchase = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHShipmentsShipmentIdRequestDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHShipmentsShipmentIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHShipmentsShipmentIdRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OnHold != nil {
		toSerialize["_on_hold"] = o.OnHold
	}
	if o.Picking != nil {
		toSerialize["_picking"] = o.Picking
	}
	if o.Packing != nil {
		toSerialize["_packing"] = o.Packing
	}
	if o.ReadyToShip != nil {
		toSerialize["_ready_to_ship"] = o.ReadyToShip
	}
	if o.Ship != nil {
		toSerialize["_ship"] = o.Ship
	}
	if o.GetRates != nil {
		toSerialize["_get_rates"] = o.GetRates
	}
	if o.SelectedRateId != nil {
		toSerialize["selected_rate_id"] = o.SelectedRateId
	}
	if o.Purchase != nil {
		toSerialize["_purchase"] = o.Purchase
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHShipmentsShipmentIdRequestDataAttributes struct {
	value *PATCHShipmentsShipmentIdRequestDataAttributes
	isSet bool
}

func (v NullablePATCHShipmentsShipmentIdRequestDataAttributes) Get() *PATCHShipmentsShipmentIdRequestDataAttributes {
	return v.value
}

func (v *NullablePATCHShipmentsShipmentIdRequestDataAttributes) Set(val *PATCHShipmentsShipmentIdRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHShipmentsShipmentIdRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHShipmentsShipmentIdRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHShipmentsShipmentIdRequestDataAttributes(val *PATCHShipmentsShipmentIdRequestDataAttributes) *NullablePATCHShipmentsShipmentIdRequestDataAttributes {
	return &NullablePATCHShipmentsShipmentIdRequestDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHShipmentsShipmentIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHShipmentsShipmentIdRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
