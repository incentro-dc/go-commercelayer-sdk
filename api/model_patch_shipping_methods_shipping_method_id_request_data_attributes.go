/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHShippingMethodsShippingMethodIdRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHShippingMethodsShippingMethodIdRequestDataAttributes{}

// PATCHShippingMethodsShippingMethodIdRequestDataAttributes struct for PATCHShippingMethodsShippingMethodIdRequestDataAttributes
type PATCHShippingMethodsShippingMethodIdRequestDataAttributes struct {
	// The shipping method's name
	Name interface{} `json:"name,omitempty"`
	// The shipping method's scheme, one of 'flat' or 'weight_tiered'.
	Scheme interface{} `json:"scheme,omitempty"`
	// The international 3-letter currency code as defined by the ISO 4217 standard.
	CurrencyCode interface{} `json:"currency_code,omitempty"`
	// Send this attribute if you want to mark the shipping method as disabled.
	Disable interface{} `json:"_disable,omitempty"`
	// Send this attribute if you want to mark the shipping method as enabled.
	Enable interface{} `json:"_enable,omitempty"`
	// The price of this shipping method, in cents.
	PriceAmountCents interface{} `json:"price_amount_cents,omitempty"`
	// Apply free shipping if the order amount is over this value, in cents.
	FreeOverAmountCents interface{} `json:"free_over_amount_cents,omitempty"`
	// The minimum weight for which this shipping method is available.
	MinWeight interface{} `json:"min_weight,omitempty"`
	// The maximum weight for which this shipping method is available.
	MaxWeight interface{} `json:"max_weight,omitempty"`
	// Can be one of 'gr', 'lb', or 'oz'
	UnitOfWeight interface{} `json:"unit_of_weight,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHShippingMethodsShippingMethodIdRequestDataAttributes instantiates a new PATCHShippingMethodsShippingMethodIdRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHShippingMethodsShippingMethodIdRequestDataAttributes() *PATCHShippingMethodsShippingMethodIdRequestDataAttributes {
	this := PATCHShippingMethodsShippingMethodIdRequestDataAttributes{}
	return &this
}

// NewPATCHShippingMethodsShippingMethodIdRequestDataAttributesWithDefaults instantiates a new PATCHShippingMethodsShippingMethodIdRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHShippingMethodsShippingMethodIdRequestDataAttributesWithDefaults() *PATCHShippingMethodsShippingMethodIdRequestDataAttributes {
	this := PATCHShippingMethodsShippingMethodIdRequestDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasName() bool {
	if o != nil && IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetName(v interface{}) {
	o.Name = v
}

// GetScheme returns the Scheme field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetScheme() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Scheme
}

// GetSchemeOk returns a tuple with the Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetSchemeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Scheme) {
		return nil, false
	}
	return &o.Scheme, true
}

// HasScheme returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasScheme() bool {
	if o != nil && IsNil(o.Scheme) {
		return true
	}

	return false
}

// SetScheme gets a reference to the given interface{} and assigns it to the Scheme field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetScheme(v interface{}) {
	o.Scheme = v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetCurrencyCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetCurrencyCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasCurrencyCode() bool {
	if o != nil && IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given interface{} and assigns it to the CurrencyCode field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetCurrencyCode(v interface{}) {
	o.CurrencyCode = v
}

// GetDisable returns the Disable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetDisable() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetDisableOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return &o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasDisable() bool {
	if o != nil && IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given interface{} and assigns it to the Disable field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetDisable(v interface{}) {
	o.Disable = v
}

// GetEnable returns the Enable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetEnable() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetEnableOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return &o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasEnable() bool {
	if o != nil && IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given interface{} and assigns it to the Enable field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetEnable(v interface{}) {
	o.Enable = v
}

// GetPriceAmountCents returns the PriceAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetPriceAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PriceAmountCents
}

// GetPriceAmountCentsOk returns a tuple with the PriceAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetPriceAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PriceAmountCents) {
		return nil, false
	}
	return &o.PriceAmountCents, true
}

// HasPriceAmountCents returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasPriceAmountCents() bool {
	if o != nil && IsNil(o.PriceAmountCents) {
		return true
	}

	return false
}

// SetPriceAmountCents gets a reference to the given interface{} and assigns it to the PriceAmountCents field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetPriceAmountCents(v interface{}) {
	o.PriceAmountCents = v
}

// GetFreeOverAmountCents returns the FreeOverAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetFreeOverAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FreeOverAmountCents
}

// GetFreeOverAmountCentsOk returns a tuple with the FreeOverAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetFreeOverAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FreeOverAmountCents) {
		return nil, false
	}
	return &o.FreeOverAmountCents, true
}

// HasFreeOverAmountCents returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasFreeOverAmountCents() bool {
	if o != nil && IsNil(o.FreeOverAmountCents) {
		return true
	}

	return false
}

// SetFreeOverAmountCents gets a reference to the given interface{} and assigns it to the FreeOverAmountCents field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetFreeOverAmountCents(v interface{}) {
	o.FreeOverAmountCents = v
}

// GetMinWeight returns the MinWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetMinWeight() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MinWeight
}

// GetMinWeightOk returns a tuple with the MinWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetMinWeightOk() (*interface{}, bool) {
	if o == nil || IsNil(o.MinWeight) {
		return nil, false
	}
	return &o.MinWeight, true
}

// HasMinWeight returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasMinWeight() bool {
	if o != nil && IsNil(o.MinWeight) {
		return true
	}

	return false
}

// SetMinWeight gets a reference to the given interface{} and assigns it to the MinWeight field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetMinWeight(v interface{}) {
	o.MinWeight = v
}

// GetMaxWeight returns the MaxWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetMaxWeight() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MaxWeight
}

// GetMaxWeightOk returns a tuple with the MaxWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetMaxWeightOk() (*interface{}, bool) {
	if o == nil || IsNil(o.MaxWeight) {
		return nil, false
	}
	return &o.MaxWeight, true
}

// HasMaxWeight returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasMaxWeight() bool {
	if o != nil && IsNil(o.MaxWeight) {
		return true
	}

	return false
}

// SetMaxWeight gets a reference to the given interface{} and assigns it to the MaxWeight field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetMaxWeight(v interface{}) {
	o.MaxWeight = v
}

// GetUnitOfWeight returns the UnitOfWeight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetUnitOfWeight() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UnitOfWeight
}

// GetUnitOfWeightOk returns a tuple with the UnitOfWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetUnitOfWeightOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UnitOfWeight) {
		return nil, false
	}
	return &o.UnitOfWeight, true
}

// HasUnitOfWeight returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasUnitOfWeight() bool {
	if o != nil && IsNil(o.UnitOfWeight) {
		return true
	}

	return false
}

// SetUnitOfWeight gets a reference to the given interface{} and assigns it to the UnitOfWeight field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetUnitOfWeight(v interface{}) {
	o.UnitOfWeight = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHShippingMethodsShippingMethodIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHShippingMethodsShippingMethodIdRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Scheme != nil {
		toSerialize["scheme"] = o.Scheme
	}
	if o.CurrencyCode != nil {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if o.Disable != nil {
		toSerialize["_disable"] = o.Disable
	}
	if o.Enable != nil {
		toSerialize["_enable"] = o.Enable
	}
	if o.PriceAmountCents != nil {
		toSerialize["price_amount_cents"] = o.PriceAmountCents
	}
	if o.FreeOverAmountCents != nil {
		toSerialize["free_over_amount_cents"] = o.FreeOverAmountCents
	}
	if o.MinWeight != nil {
		toSerialize["min_weight"] = o.MinWeight
	}
	if o.MaxWeight != nil {
		toSerialize["max_weight"] = o.MaxWeight
	}
	if o.UnitOfWeight != nil {
		toSerialize["unit_of_weight"] = o.UnitOfWeight
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes struct {
	value *PATCHShippingMethodsShippingMethodIdRequestDataAttributes
	isSet bool
}

func (v NullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes) Get() *PATCHShippingMethodsShippingMethodIdRequestDataAttributes {
	return v.value
}

func (v *NullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes) Set(val *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes(val *PATCHShippingMethodsShippingMethodIdRequestDataAttributes) *NullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes {
	return &NullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHShippingMethodsShippingMethodIdRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
