/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHStockTransfersStockTransferIdRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHStockTransfersStockTransferIdRequestDataAttributes{}

// PATCHStockTransfersStockTransferIdRequestDataAttributes struct for PATCHStockTransfersStockTransferIdRequestDataAttributes
type PATCHStockTransfersStockTransferIdRequestDataAttributes struct {
	// The code of the associated SKU.
	SkuCode interface{} `json:"sku_code,omitempty"`
	// Send this attribute if you want to mark this stock transfer as upcoming.
	Upcoming interface{} `json:"_upcoming,omitempty"`
	// Send this attribute if you want to start picking this stock transfer.
	Picking interface{} `json:"_picking,omitempty"`
	// Send this attribute if you want to mark this stock transfer as in transit.
	InTransit interface{} `json:"_in_transit,omitempty"`
	// Send this attribute if you want to complete this stock transfer.
	Complete interface{} `json:"_complete,omitempty"`
	// Send this attribute if you want to cancel this stock transfer.
	Cancel interface{} `json:"_cancel,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHStockTransfersStockTransferIdRequestDataAttributes instantiates a new PATCHStockTransfersStockTransferIdRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHStockTransfersStockTransferIdRequestDataAttributes() *PATCHStockTransfersStockTransferIdRequestDataAttributes {
	this := PATCHStockTransfersStockTransferIdRequestDataAttributes{}
	return &this
}

// NewPATCHStockTransfersStockTransferIdRequestDataAttributesWithDefaults instantiates a new PATCHStockTransfersStockTransferIdRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHStockTransfersStockTransferIdRequestDataAttributesWithDefaults() *PATCHStockTransfersStockTransferIdRequestDataAttributes {
	this := PATCHStockTransfersStockTransferIdRequestDataAttributes{}
	return &this
}

// GetSkuCode returns the SkuCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetSkuCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SkuCode
}

// GetSkuCodeOk returns a tuple with the SkuCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetSkuCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SkuCode) {
		return nil, false
	}
	return &o.SkuCode, true
}

// HasSkuCode returns a boolean if a field has been set.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) HasSkuCode() bool {
	if o != nil && IsNil(o.SkuCode) {
		return true
	}

	return false
}

// SetSkuCode gets a reference to the given interface{} and assigns it to the SkuCode field.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) SetSkuCode(v interface{}) {
	o.SkuCode = v
}

// GetUpcoming returns the Upcoming field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetUpcoming() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Upcoming
}

// GetUpcomingOk returns a tuple with the Upcoming field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetUpcomingOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Upcoming) {
		return nil, false
	}
	return &o.Upcoming, true
}

// HasUpcoming returns a boolean if a field has been set.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) HasUpcoming() bool {
	if o != nil && IsNil(o.Upcoming) {
		return true
	}

	return false
}

// SetUpcoming gets a reference to the given interface{} and assigns it to the Upcoming field.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) SetUpcoming(v interface{}) {
	o.Upcoming = v
}

// GetPicking returns the Picking field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetPicking() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Picking
}

// GetPickingOk returns a tuple with the Picking field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetPickingOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Picking) {
		return nil, false
	}
	return &o.Picking, true
}

// HasPicking returns a boolean if a field has been set.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) HasPicking() bool {
	if o != nil && IsNil(o.Picking) {
		return true
	}

	return false
}

// SetPicking gets a reference to the given interface{} and assigns it to the Picking field.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) SetPicking(v interface{}) {
	o.Picking = v
}

// GetInTransit returns the InTransit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetInTransit() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.InTransit
}

// GetInTransitOk returns a tuple with the InTransit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetInTransitOk() (*interface{}, bool) {
	if o == nil || IsNil(o.InTransit) {
		return nil, false
	}
	return &o.InTransit, true
}

// HasInTransit returns a boolean if a field has been set.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) HasInTransit() bool {
	if o != nil && IsNil(o.InTransit) {
		return true
	}

	return false
}

// SetInTransit gets a reference to the given interface{} and assigns it to the InTransit field.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) SetInTransit(v interface{}) {
	o.InTransit = v
}

// GetComplete returns the Complete field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetComplete() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetCompleteOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Complete) {
		return nil, false
	}
	return &o.Complete, true
}

// HasComplete returns a boolean if a field has been set.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) HasComplete() bool {
	if o != nil && IsNil(o.Complete) {
		return true
	}

	return false
}

// SetComplete gets a reference to the given interface{} and assigns it to the Complete field.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) SetComplete(v interface{}) {
	o.Complete = v
}

// GetCancel returns the Cancel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetCancel() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Cancel
}

// GetCancelOk returns a tuple with the Cancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetCancelOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Cancel) {
		return nil, false
	}
	return &o.Cancel, true
}

// HasCancel returns a boolean if a field has been set.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) HasCancel() bool {
	if o != nil && IsNil(o.Cancel) {
		return true
	}

	return false
}

// SetCancel gets a reference to the given interface{} and assigns it to the Cancel field.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) SetCancel(v interface{}) {
	o.Cancel = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHStockTransfersStockTransferIdRequestDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHStockTransfersStockTransferIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHStockTransfersStockTransferIdRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SkuCode != nil {
		toSerialize["sku_code"] = o.SkuCode
	}
	if o.Upcoming != nil {
		toSerialize["_upcoming"] = o.Upcoming
	}
	if o.Picking != nil {
		toSerialize["_picking"] = o.Picking
	}
	if o.InTransit != nil {
		toSerialize["_in_transit"] = o.InTransit
	}
	if o.Complete != nil {
		toSerialize["_complete"] = o.Complete
	}
	if o.Cancel != nil {
		toSerialize["_cancel"] = o.Cancel
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHStockTransfersStockTransferIdRequestDataAttributes struct {
	value *PATCHStockTransfersStockTransferIdRequestDataAttributes
	isSet bool
}

func (v NullablePATCHStockTransfersStockTransferIdRequestDataAttributes) Get() *PATCHStockTransfersStockTransferIdRequestDataAttributes {
	return v.value
}

func (v *NullablePATCHStockTransfersStockTransferIdRequestDataAttributes) Set(val *PATCHStockTransfersStockTransferIdRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHStockTransfersStockTransferIdRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHStockTransfersStockTransferIdRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHStockTransfersStockTransferIdRequestDataAttributes(val *PATCHStockTransfersStockTransferIdRequestDataAttributes) *NullablePATCHStockTransfersStockTransferIdRequestDataAttributes {
	return &NullablePATCHStockTransfersStockTransferIdRequestDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHStockTransfersStockTransferIdRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHStockTransfersStockTransferIdRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
