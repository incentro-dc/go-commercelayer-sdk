/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.9.5
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PaypalPaymentDataAttributes struct for PaypalPaymentDataAttributes
type PaypalPaymentDataAttributes struct {
	// The URL where the payer is redirected after they approve the payment.
	ReturnUrl *string `json:"return_url,omitempty"`
	// The URL where the payer is redirected after they cancel the payment.
	CancelUrl *string `json:"cancel_url,omitempty"`
	// A free-form field that you can use to send a note to the payer on PayPal.
	NoteToPayer *string `json:"note_to_payer,omitempty"`
	// The id of the payer that PayPal passes in the return_url.
	PaypalPayerId *string `json:"paypal_payer_id,omitempty"`
	// The PayPal payer id (if present)
	Name *string `json:"name,omitempty"`
	// The id of the PayPal payment object.
	PaypalId *string `json:"paypal_id,omitempty"`
	// The PayPal payment status. One of 'created' (default) or 'approved'.
	Status *string `json:"status,omitempty"`
	// The URL the customer should be redirected to approve the payment.
	ApprovalUrl *string `json:"approval_url,omitempty"`
	// Indicates if the order current amount differs form the one of the created payment intent.
	MismatchedAmounts *bool `json:"mismatched_amounts,omitempty"`
	// The amount of the associated payment intent, in cents.
	IntentAmountCents *int32 `json:"intent_amount_cents,omitempty"`
	// The amount of the associated payment intent, float.
	IntentAmountFloat *float32 `json:"intent_amount_float,omitempty"`
	// The amount of the associated payment intent, formatted.
	FormattedIntentAmount *string `json:"formatted_intent_amount,omitempty"`
	// Unique identifier for the resource (hash).
	Id *string `json:"id,omitempty"`
	// Time at which the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// Time at which the resource was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewPaypalPaymentDataAttributes instantiates a new PaypalPaymentDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaypalPaymentDataAttributes() *PaypalPaymentDataAttributes {
	this := PaypalPaymentDataAttributes{}
	return &this
}

// NewPaypalPaymentDataAttributesWithDefaults instantiates a new PaypalPaymentDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaypalPaymentDataAttributesWithDefaults() *PaypalPaymentDataAttributes {
	this := PaypalPaymentDataAttributes{}
	return &this
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetReturnUrl() string {
	if o == nil || o.ReturnUrl == nil {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetReturnUrlOk() (*string, bool) {
	if o == nil || o.ReturnUrl == nil {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasReturnUrl() bool {
	if o != nil && o.ReturnUrl != nil {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *PaypalPaymentDataAttributes) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

// GetCancelUrl returns the CancelUrl field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetCancelUrl() string {
	if o == nil || o.CancelUrl == nil {
		var ret string
		return ret
	}
	return *o.CancelUrl
}

// GetCancelUrlOk returns a tuple with the CancelUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetCancelUrlOk() (*string, bool) {
	if o == nil || o.CancelUrl == nil {
		return nil, false
	}
	return o.CancelUrl, true
}

// HasCancelUrl returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasCancelUrl() bool {
	if o != nil && o.CancelUrl != nil {
		return true
	}

	return false
}

// SetCancelUrl gets a reference to the given string and assigns it to the CancelUrl field.
func (o *PaypalPaymentDataAttributes) SetCancelUrl(v string) {
	o.CancelUrl = &v
}

// GetNoteToPayer returns the NoteToPayer field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetNoteToPayer() string {
	if o == nil || o.NoteToPayer == nil {
		var ret string
		return ret
	}
	return *o.NoteToPayer
}

// GetNoteToPayerOk returns a tuple with the NoteToPayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetNoteToPayerOk() (*string, bool) {
	if o == nil || o.NoteToPayer == nil {
		return nil, false
	}
	return o.NoteToPayer, true
}

// HasNoteToPayer returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasNoteToPayer() bool {
	if o != nil && o.NoteToPayer != nil {
		return true
	}

	return false
}

// SetNoteToPayer gets a reference to the given string and assigns it to the NoteToPayer field.
func (o *PaypalPaymentDataAttributes) SetNoteToPayer(v string) {
	o.NoteToPayer = &v
}

// GetPaypalPayerId returns the PaypalPayerId field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetPaypalPayerId() string {
	if o == nil || o.PaypalPayerId == nil {
		var ret string
		return ret
	}
	return *o.PaypalPayerId
}

// GetPaypalPayerIdOk returns a tuple with the PaypalPayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetPaypalPayerIdOk() (*string, bool) {
	if o == nil || o.PaypalPayerId == nil {
		return nil, false
	}
	return o.PaypalPayerId, true
}

// HasPaypalPayerId returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasPaypalPayerId() bool {
	if o != nil && o.PaypalPayerId != nil {
		return true
	}

	return false
}

// SetPaypalPayerId gets a reference to the given string and assigns it to the PaypalPayerId field.
func (o *PaypalPaymentDataAttributes) SetPaypalPayerId(v string) {
	o.PaypalPayerId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PaypalPaymentDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetPaypalId returns the PaypalId field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetPaypalId() string {
	if o == nil || o.PaypalId == nil {
		var ret string
		return ret
	}
	return *o.PaypalId
}

// GetPaypalIdOk returns a tuple with the PaypalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetPaypalIdOk() (*string, bool) {
	if o == nil || o.PaypalId == nil {
		return nil, false
	}
	return o.PaypalId, true
}

// HasPaypalId returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasPaypalId() bool {
	if o != nil && o.PaypalId != nil {
		return true
	}

	return false
}

// SetPaypalId gets a reference to the given string and assigns it to the PaypalId field.
func (o *PaypalPaymentDataAttributes) SetPaypalId(v string) {
	o.PaypalId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaypalPaymentDataAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetApprovalUrl returns the ApprovalUrl field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetApprovalUrl() string {
	if o == nil || o.ApprovalUrl == nil {
		var ret string
		return ret
	}
	return *o.ApprovalUrl
}

// GetApprovalUrlOk returns a tuple with the ApprovalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetApprovalUrlOk() (*string, bool) {
	if o == nil || o.ApprovalUrl == nil {
		return nil, false
	}
	return o.ApprovalUrl, true
}

// HasApprovalUrl returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasApprovalUrl() bool {
	if o != nil && o.ApprovalUrl != nil {
		return true
	}

	return false
}

// SetApprovalUrl gets a reference to the given string and assigns it to the ApprovalUrl field.
func (o *PaypalPaymentDataAttributes) SetApprovalUrl(v string) {
	o.ApprovalUrl = &v
}

// GetMismatchedAmounts returns the MismatchedAmounts field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetMismatchedAmounts() bool {
	if o == nil || o.MismatchedAmounts == nil {
		var ret bool
		return ret
	}
	return *o.MismatchedAmounts
}

// GetMismatchedAmountsOk returns a tuple with the MismatchedAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetMismatchedAmountsOk() (*bool, bool) {
	if o == nil || o.MismatchedAmounts == nil {
		return nil, false
	}
	return o.MismatchedAmounts, true
}

// HasMismatchedAmounts returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasMismatchedAmounts() bool {
	if o != nil && o.MismatchedAmounts != nil {
		return true
	}

	return false
}

// SetMismatchedAmounts gets a reference to the given bool and assigns it to the MismatchedAmounts field.
func (o *PaypalPaymentDataAttributes) SetMismatchedAmounts(v bool) {
	o.MismatchedAmounts = &v
}

// GetIntentAmountCents returns the IntentAmountCents field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetIntentAmountCents() int32 {
	if o == nil || o.IntentAmountCents == nil {
		var ret int32
		return ret
	}
	return *o.IntentAmountCents
}

// GetIntentAmountCentsOk returns a tuple with the IntentAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetIntentAmountCentsOk() (*int32, bool) {
	if o == nil || o.IntentAmountCents == nil {
		return nil, false
	}
	return o.IntentAmountCents, true
}

// HasIntentAmountCents returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasIntentAmountCents() bool {
	if o != nil && o.IntentAmountCents != nil {
		return true
	}

	return false
}

// SetIntentAmountCents gets a reference to the given int32 and assigns it to the IntentAmountCents field.
func (o *PaypalPaymentDataAttributes) SetIntentAmountCents(v int32) {
	o.IntentAmountCents = &v
}

// GetIntentAmountFloat returns the IntentAmountFloat field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetIntentAmountFloat() float32 {
	if o == nil || o.IntentAmountFloat == nil {
		var ret float32
		return ret
	}
	return *o.IntentAmountFloat
}

// GetIntentAmountFloatOk returns a tuple with the IntentAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetIntentAmountFloatOk() (*float32, bool) {
	if o == nil || o.IntentAmountFloat == nil {
		return nil, false
	}
	return o.IntentAmountFloat, true
}

// HasIntentAmountFloat returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasIntentAmountFloat() bool {
	if o != nil && o.IntentAmountFloat != nil {
		return true
	}

	return false
}

// SetIntentAmountFloat gets a reference to the given float32 and assigns it to the IntentAmountFloat field.
func (o *PaypalPaymentDataAttributes) SetIntentAmountFloat(v float32) {
	o.IntentAmountFloat = &v
}

// GetFormattedIntentAmount returns the FormattedIntentAmount field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetFormattedIntentAmount() string {
	if o == nil || o.FormattedIntentAmount == nil {
		var ret string
		return ret
	}
	return *o.FormattedIntentAmount
}

// GetFormattedIntentAmountOk returns a tuple with the FormattedIntentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetFormattedIntentAmountOk() (*string, bool) {
	if o == nil || o.FormattedIntentAmount == nil {
		return nil, false
	}
	return o.FormattedIntentAmount, true
}

// HasFormattedIntentAmount returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasFormattedIntentAmount() bool {
	if o != nil && o.FormattedIntentAmount != nil {
		return true
	}

	return false
}

// SetFormattedIntentAmount gets a reference to the given string and assigns it to the FormattedIntentAmount field.
func (o *PaypalPaymentDataAttributes) SetFormattedIntentAmount(v string) {
	o.FormattedIntentAmount = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PaypalPaymentDataAttributes) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *PaypalPaymentDataAttributes) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *PaypalPaymentDataAttributes) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *PaypalPaymentDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *PaypalPaymentDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PaypalPaymentDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaypalPaymentDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PaypalPaymentDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *PaypalPaymentDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o PaypalPaymentDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ReturnUrl != nil {
		toSerialize["return_url"] = o.ReturnUrl
	}
	if o.CancelUrl != nil {
		toSerialize["cancel_url"] = o.CancelUrl
	}
	if o.NoteToPayer != nil {
		toSerialize["note_to_payer"] = o.NoteToPayer
	}
	if o.PaypalPayerId != nil {
		toSerialize["paypal_payer_id"] = o.PaypalPayerId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PaypalId != nil {
		toSerialize["paypal_id"] = o.PaypalId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.ApprovalUrl != nil {
		toSerialize["approval_url"] = o.ApprovalUrl
	}
	if o.MismatchedAmounts != nil {
		toSerialize["mismatched_amounts"] = o.MismatchedAmounts
	}
	if o.IntentAmountCents != nil {
		toSerialize["intent_amount_cents"] = o.IntentAmountCents
	}
	if o.IntentAmountFloat != nil {
		toSerialize["intent_amount_float"] = o.IntentAmountFloat
	}
	if o.FormattedIntentAmount != nil {
		toSerialize["formatted_intent_amount"] = o.FormattedIntentAmount
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullablePaypalPaymentDataAttributes struct {
	value *PaypalPaymentDataAttributes
	isSet bool
}

func (v NullablePaypalPaymentDataAttributes) Get() *PaypalPaymentDataAttributes {
	return v.value
}

func (v *NullablePaypalPaymentDataAttributes) Set(val *PaypalPaymentDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePaypalPaymentDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePaypalPaymentDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaypalPaymentDataAttributes(val *PaypalPaymentDataAttributes) *NullablePaypalPaymentDataAttributes {
	return &NullablePaypalPaymentDataAttributes{value: val, isSet: true}
}

func (v NullablePaypalPaymentDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaypalPaymentDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
