/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the POSTAddressesRequestDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &POSTAddressesRequestDataRelationships{}

// POSTAddressesRequestDataRelationships struct for POSTAddressesRequestDataRelationships
type POSTAddressesRequestDataRelationships struct {
	Geocoder *POSTAddressesRequestDataRelationshipsGeocoder `json:"geocoder,omitempty"`
}

// NewPOSTAddressesRequestDataRelationships instantiates a new POSTAddressesRequestDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOSTAddressesRequestDataRelationships() *POSTAddressesRequestDataRelationships {
	this := POSTAddressesRequestDataRelationships{}
	return &this
}

// NewPOSTAddressesRequestDataRelationshipsWithDefaults instantiates a new POSTAddressesRequestDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOSTAddressesRequestDataRelationshipsWithDefaults() *POSTAddressesRequestDataRelationships {
	this := POSTAddressesRequestDataRelationships{}
	return &this
}

// GetGeocoder returns the Geocoder field value if set, zero value otherwise.
func (o *POSTAddressesRequestDataRelationships) GetGeocoder() POSTAddressesRequestDataRelationshipsGeocoder {
	if o == nil || IsNil(o.Geocoder) {
		var ret POSTAddressesRequestDataRelationshipsGeocoder
		return ret
	}
	return *o.Geocoder
}

// GetGeocoderOk returns a tuple with the Geocoder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTAddressesRequestDataRelationships) GetGeocoderOk() (*POSTAddressesRequestDataRelationshipsGeocoder, bool) {
	if o == nil || IsNil(o.Geocoder) {
		return nil, false
	}
	return o.Geocoder, true
}

// HasGeocoder returns a boolean if a field has been set.
func (o *POSTAddressesRequestDataRelationships) HasGeocoder() bool {
	if o != nil && !IsNil(o.Geocoder) {
		return true
	}

	return false
}

// SetGeocoder gets a reference to the given POSTAddressesRequestDataRelationshipsGeocoder and assigns it to the Geocoder field.
func (o *POSTAddressesRequestDataRelationships) SetGeocoder(v POSTAddressesRequestDataRelationshipsGeocoder) {
	o.Geocoder = &v
}

func (o POSTAddressesRequestDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o POSTAddressesRequestDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Geocoder) {
		toSerialize["geocoder"] = o.Geocoder
	}
	return toSerialize, nil
}

type NullablePOSTAddressesRequestDataRelationships struct {
	value *POSTAddressesRequestDataRelationships
	isSet bool
}

func (v NullablePOSTAddressesRequestDataRelationships) Get() *POSTAddressesRequestDataRelationships {
	return v.value
}

func (v *NullablePOSTAddressesRequestDataRelationships) Set(val *POSTAddressesRequestDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullablePOSTAddressesRequestDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullablePOSTAddressesRequestDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOSTAddressesRequestDataRelationships(val *POSTAddressesRequestDataRelationships) *NullablePOSTAddressesRequestDataRelationships {
	return &NullablePOSTAddressesRequestDataRelationships{value: val, isSet: true}
}

func (v NullablePOSTAddressesRequestDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOSTAddressesRequestDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
