/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData{}

// POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData struct for POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData
type POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData struct {
	// The resource's type
	Type interface{} `json:"type,omitempty"`
	// The resource's id
	Id interface{} `json:"id,omitempty"`
}

// NewPOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData instantiates a new POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData() *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData {
	this := POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData{}
	return &this
}

// NewPOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsDataWithDefaults instantiates a new POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsDataWithDefaults() *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData {
	this := POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) GetType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) GetTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) HasType() bool {
	if o != nil && IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given interface{} and assigns it to the Type field.
func (o *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) SetType(v interface{}) {
	o.Type = v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) GetId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) GetIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return &o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) HasId() bool {
	if o != nil && IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given interface{} and assigns it to the Id field.
func (o *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) SetId(v interface{}) {
	o.Id = v
}

func (o POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData struct {
	value *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData
	isSet bool
}

func (v NullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) Get() *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData {
	return v.value
}

func (v *NullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) Set(val *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) {
	v.value = val
	v.isSet = true
}

func (v NullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) IsSet() bool {
	return v.isSet
}

func (v *NullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData(val *POSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) *NullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData {
	return &NullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData{value: val, isSet: true}
}

func (v NullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOSTBraintreeGatewaysRequestDataRelationshipsBraintreePaymentsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
