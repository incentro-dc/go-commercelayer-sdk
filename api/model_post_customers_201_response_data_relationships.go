/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.7.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// POSTCustomers201ResponseDataRelationships struct for POSTCustomers201ResponseDataRelationships
type POSTCustomers201ResponseDataRelationships struct {
	CustomerGroup *GETCustomers200ResponseDataInnerRelationshipsCustomerGroup `json:"customer_group,omitempty"`
}

// NewPOSTCustomers201ResponseDataRelationships instantiates a new POSTCustomers201ResponseDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOSTCustomers201ResponseDataRelationships() *POSTCustomers201ResponseDataRelationships {
	this := POSTCustomers201ResponseDataRelationships{}
	return &this
}

// NewPOSTCustomers201ResponseDataRelationshipsWithDefaults instantiates a new POSTCustomers201ResponseDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOSTCustomers201ResponseDataRelationshipsWithDefaults() *POSTCustomers201ResponseDataRelationships {
	this := POSTCustomers201ResponseDataRelationships{}
	return &this
}

// GetCustomerGroup returns the CustomerGroup field value if set, zero value otherwise.
func (o *POSTCustomers201ResponseDataRelationships) GetCustomerGroup() GETCustomers200ResponseDataInnerRelationshipsCustomerGroup {
	if o == nil || o.CustomerGroup == nil {
		var ret GETCustomers200ResponseDataInnerRelationshipsCustomerGroup
		return ret
	}
	return *o.CustomerGroup
}

// GetCustomerGroupOk returns a tuple with the CustomerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTCustomers201ResponseDataRelationships) GetCustomerGroupOk() (*GETCustomers200ResponseDataInnerRelationshipsCustomerGroup, bool) {
	if o == nil || o.CustomerGroup == nil {
		return nil, false
	}
	return o.CustomerGroup, true
}

// HasCustomerGroup returns a boolean if a field has been set.
func (o *POSTCustomers201ResponseDataRelationships) HasCustomerGroup() bool {
	if o != nil && o.CustomerGroup != nil {
		return true
	}

	return false
}

// SetCustomerGroup gets a reference to the given GETCustomers200ResponseDataInnerRelationshipsCustomerGroup and assigns it to the CustomerGroup field.
func (o *POSTCustomers201ResponseDataRelationships) SetCustomerGroup(v GETCustomers200ResponseDataInnerRelationshipsCustomerGroup) {
	o.CustomerGroup = &v
}

func (o POSTCustomers201ResponseDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomerGroup != nil {
		toSerialize["customer_group"] = o.CustomerGroup
	}
	return json.Marshal(toSerialize)
}

type NullablePOSTCustomers201ResponseDataRelationships struct {
	value *POSTCustomers201ResponseDataRelationships
	isSet bool
}

func (v NullablePOSTCustomers201ResponseDataRelationships) Get() *POSTCustomers201ResponseDataRelationships {
	return v.value
}

func (v *NullablePOSTCustomers201ResponseDataRelationships) Set(val *POSTCustomers201ResponseDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullablePOSTCustomers201ResponseDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullablePOSTCustomers201ResponseDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOSTCustomers201ResponseDataRelationships(val *POSTCustomers201ResponseDataRelationships) *NullablePOSTCustomers201ResponseDataRelationships {
	return &NullablePOSTCustomers201ResponseDataRelationships{value: val, isSet: true}
}

func (v NullablePOSTCustomers201ResponseDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOSTCustomers201ResponseDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
