/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.2.0
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// POSTExports201ResponseDataAttributes struct for POSTExports201ResponseDataAttributes
type POSTExports201ResponseDataAttributes struct {
	// The type of resource being exported.
	ResourceType string `json:"resource_type"`
	// The format of the export one of 'json' (default) or 'csv'.
	Format *string `json:"format,omitempty"`
	// List of related resources that should be included in the export.
	Includes []string `json:"includes,omitempty"`
	// The filters used to select the records to be exported.
	Filters map[string]interface{} `json:"filters,omitempty"`
	// Send this attribute if you want to skip exporting redundant attributes (IDs, timestamps, blanks, etc.), useful when combining export and import to duplicate your dataset.
	DryData *bool `json:"dry_data,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewPOSTExports201ResponseDataAttributes instantiates a new POSTExports201ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOSTExports201ResponseDataAttributes(resourceType string) *POSTExports201ResponseDataAttributes {
	this := POSTExports201ResponseDataAttributes{}
	this.ResourceType = resourceType
	return &this
}

// NewPOSTExports201ResponseDataAttributesWithDefaults instantiates a new POSTExports201ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOSTExports201ResponseDataAttributesWithDefaults() *POSTExports201ResponseDataAttributes {
	this := POSTExports201ResponseDataAttributes{}
	return &this
}

// GetResourceType returns the ResourceType field value
func (o *POSTExports201ResponseDataAttributes) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *POSTExports201ResponseDataAttributes) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *POSTExports201ResponseDataAttributes) SetResourceType(v string) {
	o.ResourceType = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *POSTExports201ResponseDataAttributes) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTExports201ResponseDataAttributes) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *POSTExports201ResponseDataAttributes) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *POSTExports201ResponseDataAttributes) SetFormat(v string) {
	o.Format = &v
}

// GetIncludes returns the Includes field value if set, zero value otherwise.
func (o *POSTExports201ResponseDataAttributes) GetIncludes() []string {
	if o == nil || o.Includes == nil {
		var ret []string
		return ret
	}
	return o.Includes
}

// GetIncludesOk returns a tuple with the Includes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTExports201ResponseDataAttributes) GetIncludesOk() ([]string, bool) {
	if o == nil || o.Includes == nil {
		return nil, false
	}
	return o.Includes, true
}

// HasIncludes returns a boolean if a field has been set.
func (o *POSTExports201ResponseDataAttributes) HasIncludes() bool {
	if o != nil && o.Includes != nil {
		return true
	}

	return false
}

// SetIncludes gets a reference to the given []string and assigns it to the Includes field.
func (o *POSTExports201ResponseDataAttributes) SetIncludes(v []string) {
	o.Includes = v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *POSTExports201ResponseDataAttributes) GetFilters() map[string]interface{} {
	if o == nil || o.Filters == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTExports201ResponseDataAttributes) GetFiltersOk() (map[string]interface{}, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *POSTExports201ResponseDataAttributes) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given map[string]interface{} and assigns it to the Filters field.
func (o *POSTExports201ResponseDataAttributes) SetFilters(v map[string]interface{}) {
	o.Filters = v
}

// GetDryData returns the DryData field value if set, zero value otherwise.
func (o *POSTExports201ResponseDataAttributes) GetDryData() bool {
	if o == nil || o.DryData == nil {
		var ret bool
		return ret
	}
	return *o.DryData
}

// GetDryDataOk returns a tuple with the DryData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTExports201ResponseDataAttributes) GetDryDataOk() (*bool, bool) {
	if o == nil || o.DryData == nil {
		return nil, false
	}
	return o.DryData, true
}

// HasDryData returns a boolean if a field has been set.
func (o *POSTExports201ResponseDataAttributes) HasDryData() bool {
	if o != nil && o.DryData != nil {
		return true
	}

	return false
}

// SetDryData gets a reference to the given bool and assigns it to the DryData field.
func (o *POSTExports201ResponseDataAttributes) SetDryData(v bool) {
	o.DryData = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *POSTExports201ResponseDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTExports201ResponseDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *POSTExports201ResponseDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *POSTExports201ResponseDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *POSTExports201ResponseDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTExports201ResponseDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *POSTExports201ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *POSTExports201ResponseDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *POSTExports201ResponseDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTExports201ResponseDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *POSTExports201ResponseDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *POSTExports201ResponseDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o POSTExports201ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resource_type"] = o.ResourceType
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Includes != nil {
		toSerialize["includes"] = o.Includes
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	if o.DryData != nil {
		toSerialize["dry_data"] = o.DryData
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullablePOSTExports201ResponseDataAttributes struct {
	value *POSTExports201ResponseDataAttributes
	isSet bool
}

func (v NullablePOSTExports201ResponseDataAttributes) Get() *POSTExports201ResponseDataAttributes {
	return v.value
}

func (v *NullablePOSTExports201ResponseDataAttributes) Set(val *POSTExports201ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePOSTExports201ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePOSTExports201ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOSTExports201ResponseDataAttributes(val *POSTExports201ResponseDataAttributes) *NullablePOSTExports201ResponseDataAttributes {
	return &NullablePOSTExports201ResponseDataAttributes{value: val, isSet: true}
}

func (v NullablePOSTExports201ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOSTExports201ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
