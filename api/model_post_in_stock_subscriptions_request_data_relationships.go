/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the POSTInStockSubscriptionsRequestDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &POSTInStockSubscriptionsRequestDataRelationships{}

// POSTInStockSubscriptionsRequestDataRelationships struct for POSTInStockSubscriptionsRequestDataRelationships
type POSTInStockSubscriptionsRequestDataRelationships struct {
	Market   POSTBillingInfoValidationRulesRequestDataRelationshipsMarket `json:"market"`
	Customer POSTCouponRecipientsRequestDataRelationshipsCustomer         `json:"customer"`
	Sku      POSTInStockSubscriptionsRequestDataRelationshipsSku          `json:"sku"`
}

// NewPOSTInStockSubscriptionsRequestDataRelationships instantiates a new POSTInStockSubscriptionsRequestDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOSTInStockSubscriptionsRequestDataRelationships(market POSTBillingInfoValidationRulesRequestDataRelationshipsMarket, customer POSTCouponRecipientsRequestDataRelationshipsCustomer, sku POSTInStockSubscriptionsRequestDataRelationshipsSku) *POSTInStockSubscriptionsRequestDataRelationships {
	this := POSTInStockSubscriptionsRequestDataRelationships{}
	this.Market = market
	this.Customer = customer
	this.Sku = sku
	return &this
}

// NewPOSTInStockSubscriptionsRequestDataRelationshipsWithDefaults instantiates a new POSTInStockSubscriptionsRequestDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOSTInStockSubscriptionsRequestDataRelationshipsWithDefaults() *POSTInStockSubscriptionsRequestDataRelationships {
	this := POSTInStockSubscriptionsRequestDataRelationships{}
	return &this
}

// GetMarket returns the Market field value
func (o *POSTInStockSubscriptionsRequestDataRelationships) GetMarket() POSTBillingInfoValidationRulesRequestDataRelationshipsMarket {
	if o == nil {
		var ret POSTBillingInfoValidationRulesRequestDataRelationshipsMarket
		return ret
	}

	return o.Market
}

// GetMarketOk returns a tuple with the Market field value
// and a boolean to check if the value has been set.
func (o *POSTInStockSubscriptionsRequestDataRelationships) GetMarketOk() (*POSTBillingInfoValidationRulesRequestDataRelationshipsMarket, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Market, true
}

// SetMarket sets field value
func (o *POSTInStockSubscriptionsRequestDataRelationships) SetMarket(v POSTBillingInfoValidationRulesRequestDataRelationshipsMarket) {
	o.Market = v
}

// GetCustomer returns the Customer field value
func (o *POSTInStockSubscriptionsRequestDataRelationships) GetCustomer() POSTCouponRecipientsRequestDataRelationshipsCustomer {
	if o == nil {
		var ret POSTCouponRecipientsRequestDataRelationshipsCustomer
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *POSTInStockSubscriptionsRequestDataRelationships) GetCustomerOk() (*POSTCouponRecipientsRequestDataRelationshipsCustomer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *POSTInStockSubscriptionsRequestDataRelationships) SetCustomer(v POSTCouponRecipientsRequestDataRelationshipsCustomer) {
	o.Customer = v
}

// GetSku returns the Sku field value
func (o *POSTInStockSubscriptionsRequestDataRelationships) GetSku() POSTInStockSubscriptionsRequestDataRelationshipsSku {
	if o == nil {
		var ret POSTInStockSubscriptionsRequestDataRelationshipsSku
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *POSTInStockSubscriptionsRequestDataRelationships) GetSkuOk() (*POSTInStockSubscriptionsRequestDataRelationshipsSku, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *POSTInStockSubscriptionsRequestDataRelationships) SetSku(v POSTInStockSubscriptionsRequestDataRelationshipsSku) {
	o.Sku = v
}

func (o POSTInStockSubscriptionsRequestDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o POSTInStockSubscriptionsRequestDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["market"] = o.Market
	toSerialize["customer"] = o.Customer
	toSerialize["sku"] = o.Sku
	return toSerialize, nil
}

type NullablePOSTInStockSubscriptionsRequestDataRelationships struct {
	value *POSTInStockSubscriptionsRequestDataRelationships
	isSet bool
}

func (v NullablePOSTInStockSubscriptionsRequestDataRelationships) Get() *POSTInStockSubscriptionsRequestDataRelationships {
	return v.value
}

func (v *NullablePOSTInStockSubscriptionsRequestDataRelationships) Set(val *POSTInStockSubscriptionsRequestDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullablePOSTInStockSubscriptionsRequestDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullablePOSTInStockSubscriptionsRequestDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOSTInStockSubscriptionsRequestDataRelationships(val *POSTInStockSubscriptionsRequestDataRelationships) *NullablePOSTInStockSubscriptionsRequestDataRelationships {
	return &NullablePOSTInStockSubscriptionsRequestDataRelationships{value: val, isSet: true}
}

func (v NullablePOSTInStockSubscriptionsRequestDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOSTInStockSubscriptionsRequestDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
