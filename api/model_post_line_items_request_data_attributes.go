/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the POSTLineItemsRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &POSTLineItemsRequestDataAttributes{}

// POSTLineItemsRequestDataAttributes struct for POSTLineItemsRequestDataAttributes
type POSTLineItemsRequestDataAttributes struct {
	// The code of the associated SKU.
	SkuCode interface{} `json:"sku_code,omitempty"`
	// The code of the associated bundle.
	BundleCode interface{} `json:"bundle_code,omitempty"`
	// The line item quantity.
	Quantity interface{} `json:"quantity"`
	// When creating or updating a new line item, set this attribute to '1' if you want to inject the unit_amount_cents price from an external source.
	ExternalPrice interface{} `json:"_external_price,omitempty"`
	// When creating a new line item, set this attribute to '1' if you want to update the line item quantity (if present) instead of creating a new line item for the same SKU.
	UpdateQuantity interface{} `json:"_update_quantity,omitempty"`
	// The unit amount of the line item, in cents. Can be specified without an item, otherwise is automatically populated from the price list associated to the order's market.
	UnitAmountCents interface{} `json:"unit_amount_cents,omitempty"`
	// The name of the line item. When blank, it gets populated with the name of the associated item (if present).
	Name interface{} `json:"name,omitempty"`
	// The image_url of the line item. When blank, it gets populated with the image_url of the associated item (if present, SKU only).
	ImageUrl interface{} `json:"image_url,omitempty"`
	// The type of the associate item. Can be one of 'skus', 'bundles', 'shipments', 'payment_methods', 'adjustments', 'gift_cards', or a valid promotion type.
	ItemType interface{} `json:"item_type,omitempty"`
	// The frequency which generates a subscription. Must be supported by existing associated subscription_model.
	Frequency interface{} `json:"frequency,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPOSTLineItemsRequestDataAttributes instantiates a new POSTLineItemsRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOSTLineItemsRequestDataAttributes(quantity interface{}) *POSTLineItemsRequestDataAttributes {
	this := POSTLineItemsRequestDataAttributes{}
	this.Quantity = quantity
	return &this
}

// NewPOSTLineItemsRequestDataAttributesWithDefaults instantiates a new POSTLineItemsRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOSTLineItemsRequestDataAttributesWithDefaults() *POSTLineItemsRequestDataAttributes {
	this := POSTLineItemsRequestDataAttributes{}
	return &this
}

// GetSkuCode returns the SkuCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetSkuCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SkuCode
}

// GetSkuCodeOk returns a tuple with the SkuCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetSkuCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SkuCode) {
		return nil, false
	}
	return &o.SkuCode, true
}

// HasSkuCode returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasSkuCode() bool {
	if o != nil && IsNil(o.SkuCode) {
		return true
	}

	return false
}

// SetSkuCode gets a reference to the given interface{} and assigns it to the SkuCode field.
func (o *POSTLineItemsRequestDataAttributes) SetSkuCode(v interface{}) {
	o.SkuCode = v
}

// GetBundleCode returns the BundleCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetBundleCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.BundleCode
}

// GetBundleCodeOk returns a tuple with the BundleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetBundleCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.BundleCode) {
		return nil, false
	}
	return &o.BundleCode, true
}

// HasBundleCode returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasBundleCode() bool {
	if o != nil && IsNil(o.BundleCode) {
		return true
	}

	return false
}

// SetBundleCode gets a reference to the given interface{} and assigns it to the BundleCode field.
func (o *POSTLineItemsRequestDataAttributes) SetBundleCode(v interface{}) {
	o.BundleCode = v
}

// GetQuantity returns the Quantity field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *POSTLineItemsRequestDataAttributes) GetQuantity() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetQuantityOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *POSTLineItemsRequestDataAttributes) SetQuantity(v interface{}) {
	o.Quantity = v
}

// GetExternalPrice returns the ExternalPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetExternalPrice() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ExternalPrice
}

// GetExternalPriceOk returns a tuple with the ExternalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetExternalPriceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ExternalPrice) {
		return nil, false
	}
	return &o.ExternalPrice, true
}

// HasExternalPrice returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasExternalPrice() bool {
	if o != nil && IsNil(o.ExternalPrice) {
		return true
	}

	return false
}

// SetExternalPrice gets a reference to the given interface{} and assigns it to the ExternalPrice field.
func (o *POSTLineItemsRequestDataAttributes) SetExternalPrice(v interface{}) {
	o.ExternalPrice = v
}

// GetUpdateQuantity returns the UpdateQuantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetUpdateQuantity() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UpdateQuantity
}

// GetUpdateQuantityOk returns a tuple with the UpdateQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetUpdateQuantityOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UpdateQuantity) {
		return nil, false
	}
	return &o.UpdateQuantity, true
}

// HasUpdateQuantity returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasUpdateQuantity() bool {
	if o != nil && IsNil(o.UpdateQuantity) {
		return true
	}

	return false
}

// SetUpdateQuantity gets a reference to the given interface{} and assigns it to the UpdateQuantity field.
func (o *POSTLineItemsRequestDataAttributes) SetUpdateQuantity(v interface{}) {
	o.UpdateQuantity = v
}

// GetUnitAmountCents returns the UnitAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetUnitAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UnitAmountCents
}

// GetUnitAmountCentsOk returns a tuple with the UnitAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetUnitAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UnitAmountCents) {
		return nil, false
	}
	return &o.UnitAmountCents, true
}

// HasUnitAmountCents returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasUnitAmountCents() bool {
	if o != nil && IsNil(o.UnitAmountCents) {
		return true
	}

	return false
}

// SetUnitAmountCents gets a reference to the given interface{} and assigns it to the UnitAmountCents field.
func (o *POSTLineItemsRequestDataAttributes) SetUnitAmountCents(v interface{}) {
	o.UnitAmountCents = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasName() bool {
	if o != nil && IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *POSTLineItemsRequestDataAttributes) SetName(v interface{}) {
	o.Name = v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetImageUrl() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetImageUrlOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return &o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasImageUrl() bool {
	if o != nil && IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given interface{} and assigns it to the ImageUrl field.
func (o *POSTLineItemsRequestDataAttributes) SetImageUrl(v interface{}) {
	o.ImageUrl = v
}

// GetItemType returns the ItemType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetItemType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetItemTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ItemType) {
		return nil, false
	}
	return &o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasItemType() bool {
	if o != nil && IsNil(o.ItemType) {
		return true
	}

	return false
}

// SetItemType gets a reference to the given interface{} and assigns it to the ItemType field.
func (o *POSTLineItemsRequestDataAttributes) SetItemType(v interface{}) {
	o.ItemType = v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetFrequency() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetFrequencyOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return &o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasFrequency() bool {
	if o != nil && IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given interface{} and assigns it to the Frequency field.
func (o *POSTLineItemsRequestDataAttributes) SetFrequency(v interface{}) {
	o.Frequency = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *POSTLineItemsRequestDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *POSTLineItemsRequestDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTLineItemsRequestDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTLineItemsRequestDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *POSTLineItemsRequestDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *POSTLineItemsRequestDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o POSTLineItemsRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o POSTLineItemsRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SkuCode != nil {
		toSerialize["sku_code"] = o.SkuCode
	}
	if o.BundleCode != nil {
		toSerialize["bundle_code"] = o.BundleCode
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.ExternalPrice != nil {
		toSerialize["_external_price"] = o.ExternalPrice
	}
	if o.UpdateQuantity != nil {
		toSerialize["_update_quantity"] = o.UpdateQuantity
	}
	if o.UnitAmountCents != nil {
		toSerialize["unit_amount_cents"] = o.UnitAmountCents
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	if o.ItemType != nil {
		toSerialize["item_type"] = o.ItemType
	}
	if o.Frequency != nil {
		toSerialize["frequency"] = o.Frequency
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePOSTLineItemsRequestDataAttributes struct {
	value *POSTLineItemsRequestDataAttributes
	isSet bool
}

func (v NullablePOSTLineItemsRequestDataAttributes) Get() *POSTLineItemsRequestDataAttributes {
	return v.value
}

func (v *NullablePOSTLineItemsRequestDataAttributes) Set(val *POSTLineItemsRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePOSTLineItemsRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePOSTLineItemsRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOSTLineItemsRequestDataAttributes(val *POSTLineItemsRequestDataAttributes) *NullablePOSTLineItemsRequestDataAttributes {
	return &NullablePOSTLineItemsRequestDataAttributes{value: val, isSet: true}
}

func (v NullablePOSTLineItemsRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOSTLineItemsRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
