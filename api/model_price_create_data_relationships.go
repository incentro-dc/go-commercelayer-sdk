/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.9.5
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PriceCreateDataRelationships struct for PriceCreateDataRelationships
type PriceCreateDataRelationships struct {
	PriceList  MarketDataRelationshipsPriceList  `json:"price_list"`
	Sku        *BundleDataRelationshipsSkus      `json:"sku,omitempty"`
	PriceTiers *PriceDataRelationshipsPriceTiers `json:"price_tiers,omitempty"`
}

// NewPriceCreateDataRelationships instantiates a new PriceCreateDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceCreateDataRelationships(priceList MarketDataRelationshipsPriceList) *PriceCreateDataRelationships {
	this := PriceCreateDataRelationships{}
	this.PriceList = priceList
	return &this
}

// NewPriceCreateDataRelationshipsWithDefaults instantiates a new PriceCreateDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceCreateDataRelationshipsWithDefaults() *PriceCreateDataRelationships {
	this := PriceCreateDataRelationships{}
	return &this
}

// GetPriceList returns the PriceList field value
func (o *PriceCreateDataRelationships) GetPriceList() MarketDataRelationshipsPriceList {
	if o == nil {
		var ret MarketDataRelationshipsPriceList
		return ret
	}

	return o.PriceList
}

// GetPriceListOk returns a tuple with the PriceList field value
// and a boolean to check if the value has been set.
func (o *PriceCreateDataRelationships) GetPriceListOk() (*MarketDataRelationshipsPriceList, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceList, true
}

// SetPriceList sets field value
func (o *PriceCreateDataRelationships) SetPriceList(v MarketDataRelationshipsPriceList) {
	o.PriceList = v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *PriceCreateDataRelationships) GetSku() BundleDataRelationshipsSkus {
	if o == nil || o.Sku == nil {
		var ret BundleDataRelationshipsSkus
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceCreateDataRelationships) GetSkuOk() (*BundleDataRelationshipsSkus, bool) {
	if o == nil || o.Sku == nil {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *PriceCreateDataRelationships) HasSku() bool {
	if o != nil && o.Sku != nil {
		return true
	}

	return false
}

// SetSku gets a reference to the given BundleDataRelationshipsSkus and assigns it to the Sku field.
func (o *PriceCreateDataRelationships) SetSku(v BundleDataRelationshipsSkus) {
	o.Sku = &v
}

// GetPriceTiers returns the PriceTiers field value if set, zero value otherwise.
func (o *PriceCreateDataRelationships) GetPriceTiers() PriceDataRelationshipsPriceTiers {
	if o == nil || o.PriceTiers == nil {
		var ret PriceDataRelationshipsPriceTiers
		return ret
	}
	return *o.PriceTiers
}

// GetPriceTiersOk returns a tuple with the PriceTiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceCreateDataRelationships) GetPriceTiersOk() (*PriceDataRelationshipsPriceTiers, bool) {
	if o == nil || o.PriceTiers == nil {
		return nil, false
	}
	return o.PriceTiers, true
}

// HasPriceTiers returns a boolean if a field has been set.
func (o *PriceCreateDataRelationships) HasPriceTiers() bool {
	if o != nil && o.PriceTiers != nil {
		return true
	}

	return false
}

// SetPriceTiers gets a reference to the given PriceDataRelationshipsPriceTiers and assigns it to the PriceTiers field.
func (o *PriceCreateDataRelationships) SetPriceTiers(v PriceDataRelationshipsPriceTiers) {
	o.PriceTiers = &v
}

func (o PriceCreateDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["price_list"] = o.PriceList
	}
	if o.Sku != nil {
		toSerialize["sku"] = o.Sku
	}
	if o.PriceTiers != nil {
		toSerialize["price_tiers"] = o.PriceTiers
	}
	return json.Marshal(toSerialize)
}

type NullablePriceCreateDataRelationships struct {
	value *PriceCreateDataRelationships
	isSet bool
}

func (v NullablePriceCreateDataRelationships) Get() *PriceCreateDataRelationships {
	return v.value
}

func (v *NullablePriceCreateDataRelationships) Set(val *PriceCreateDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceCreateDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceCreateDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceCreateDataRelationships(val *PriceCreateDataRelationships) *NullablePriceCreateDataRelationships {
	return &NullablePriceCreateDataRelationships{value: val, isSet: true}
}

func (v NullablePriceCreateDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceCreateDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
