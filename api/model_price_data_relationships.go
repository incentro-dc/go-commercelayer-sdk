/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PriceDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceDataRelationships{}

// PriceDataRelationships struct for PriceDataRelationships
type PriceDataRelationships struct {
	PriceList           *MarketDataRelationshipsPriceList           `json:"price_list,omitempty"`
	Sku                 *BundleDataRelationshipsSkus                `json:"sku,omitempty"`
	PriceTiers          *PriceDataRelationshipsPriceTiers           `json:"price_tiers,omitempty"`
	PriceVolumeTiers    *PriceDataRelationshipsPriceVolumeTiers     `json:"price_volume_tiers,omitempty"`
	PriceFrequencyTiers *PriceDataRelationshipsPriceFrequencyTiers  `json:"price_frequency_tiers,omitempty"`
	Attachments         *AvalaraAccountDataRelationshipsAttachments `json:"attachments,omitempty"`
}

// NewPriceDataRelationships instantiates a new PriceDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceDataRelationships() *PriceDataRelationships {
	this := PriceDataRelationships{}
	return &this
}

// NewPriceDataRelationshipsWithDefaults instantiates a new PriceDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceDataRelationshipsWithDefaults() *PriceDataRelationships {
	this := PriceDataRelationships{}
	return &this
}

// GetPriceList returns the PriceList field value if set, zero value otherwise.
func (o *PriceDataRelationships) GetPriceList() MarketDataRelationshipsPriceList {
	if o == nil || IsNil(o.PriceList) {
		var ret MarketDataRelationshipsPriceList
		return ret
	}
	return *o.PriceList
}

// GetPriceListOk returns a tuple with the PriceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceDataRelationships) GetPriceListOk() (*MarketDataRelationshipsPriceList, bool) {
	if o == nil || IsNil(o.PriceList) {
		return nil, false
	}
	return o.PriceList, true
}

// HasPriceList returns a boolean if a field has been set.
func (o *PriceDataRelationships) HasPriceList() bool {
	if o != nil && !IsNil(o.PriceList) {
		return true
	}

	return false
}

// SetPriceList gets a reference to the given MarketDataRelationshipsPriceList and assigns it to the PriceList field.
func (o *PriceDataRelationships) SetPriceList(v MarketDataRelationshipsPriceList) {
	o.PriceList = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *PriceDataRelationships) GetSku() BundleDataRelationshipsSkus {
	if o == nil || IsNil(o.Sku) {
		var ret BundleDataRelationshipsSkus
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceDataRelationships) GetSkuOk() (*BundleDataRelationshipsSkus, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *PriceDataRelationships) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given BundleDataRelationshipsSkus and assigns it to the Sku field.
func (o *PriceDataRelationships) SetSku(v BundleDataRelationshipsSkus) {
	o.Sku = &v
}

// GetPriceTiers returns the PriceTiers field value if set, zero value otherwise.
func (o *PriceDataRelationships) GetPriceTiers() PriceDataRelationshipsPriceTiers {
	if o == nil || IsNil(o.PriceTiers) {
		var ret PriceDataRelationshipsPriceTiers
		return ret
	}
	return *o.PriceTiers
}

// GetPriceTiersOk returns a tuple with the PriceTiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceDataRelationships) GetPriceTiersOk() (*PriceDataRelationshipsPriceTiers, bool) {
	if o == nil || IsNil(o.PriceTiers) {
		return nil, false
	}
	return o.PriceTiers, true
}

// HasPriceTiers returns a boolean if a field has been set.
func (o *PriceDataRelationships) HasPriceTiers() bool {
	if o != nil && !IsNil(o.PriceTiers) {
		return true
	}

	return false
}

// SetPriceTiers gets a reference to the given PriceDataRelationshipsPriceTiers and assigns it to the PriceTiers field.
func (o *PriceDataRelationships) SetPriceTiers(v PriceDataRelationshipsPriceTiers) {
	o.PriceTiers = &v
}

// GetPriceVolumeTiers returns the PriceVolumeTiers field value if set, zero value otherwise.
func (o *PriceDataRelationships) GetPriceVolumeTiers() PriceDataRelationshipsPriceVolumeTiers {
	if o == nil || IsNil(o.PriceVolumeTiers) {
		var ret PriceDataRelationshipsPriceVolumeTiers
		return ret
	}
	return *o.PriceVolumeTiers
}

// GetPriceVolumeTiersOk returns a tuple with the PriceVolumeTiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceDataRelationships) GetPriceVolumeTiersOk() (*PriceDataRelationshipsPriceVolumeTiers, bool) {
	if o == nil || IsNil(o.PriceVolumeTiers) {
		return nil, false
	}
	return o.PriceVolumeTiers, true
}

// HasPriceVolumeTiers returns a boolean if a field has been set.
func (o *PriceDataRelationships) HasPriceVolumeTiers() bool {
	if o != nil && !IsNil(o.PriceVolumeTiers) {
		return true
	}

	return false
}

// SetPriceVolumeTiers gets a reference to the given PriceDataRelationshipsPriceVolumeTiers and assigns it to the PriceVolumeTiers field.
func (o *PriceDataRelationships) SetPriceVolumeTiers(v PriceDataRelationshipsPriceVolumeTiers) {
	o.PriceVolumeTiers = &v
}

// GetPriceFrequencyTiers returns the PriceFrequencyTiers field value if set, zero value otherwise.
func (o *PriceDataRelationships) GetPriceFrequencyTiers() PriceDataRelationshipsPriceFrequencyTiers {
	if o == nil || IsNil(o.PriceFrequencyTiers) {
		var ret PriceDataRelationshipsPriceFrequencyTiers
		return ret
	}
	return *o.PriceFrequencyTiers
}

// GetPriceFrequencyTiersOk returns a tuple with the PriceFrequencyTiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceDataRelationships) GetPriceFrequencyTiersOk() (*PriceDataRelationshipsPriceFrequencyTiers, bool) {
	if o == nil || IsNil(o.PriceFrequencyTiers) {
		return nil, false
	}
	return o.PriceFrequencyTiers, true
}

// HasPriceFrequencyTiers returns a boolean if a field has been set.
func (o *PriceDataRelationships) HasPriceFrequencyTiers() bool {
	if o != nil && !IsNil(o.PriceFrequencyTiers) {
		return true
	}

	return false
}

// SetPriceFrequencyTiers gets a reference to the given PriceDataRelationshipsPriceFrequencyTiers and assigns it to the PriceFrequencyTiers field.
func (o *PriceDataRelationships) SetPriceFrequencyTiers(v PriceDataRelationshipsPriceFrequencyTiers) {
	o.PriceFrequencyTiers = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *PriceDataRelationships) GetAttachments() AvalaraAccountDataRelationshipsAttachments {
	if o == nil || IsNil(o.Attachments) {
		var ret AvalaraAccountDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceDataRelationships) GetAttachmentsOk() (*AvalaraAccountDataRelationshipsAttachments, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *PriceDataRelationships) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AvalaraAccountDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *PriceDataRelationships) SetAttachments(v AvalaraAccountDataRelationshipsAttachments) {
	o.Attachments = &v
}

func (o PriceDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PriceList) {
		toSerialize["price_list"] = o.PriceList
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.PriceTiers) {
		toSerialize["price_tiers"] = o.PriceTiers
	}
	if !IsNil(o.PriceVolumeTiers) {
		toSerialize["price_volume_tiers"] = o.PriceVolumeTiers
	}
	if !IsNil(o.PriceFrequencyTiers) {
		toSerialize["price_frequency_tiers"] = o.PriceFrequencyTiers
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	return toSerialize, nil
}

type NullablePriceDataRelationships struct {
	value *PriceDataRelationships
	isSet bool
}

func (v NullablePriceDataRelationships) Get() *PriceDataRelationships {
	return v.value
}

func (v *NullablePriceDataRelationships) Set(val *PriceDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceDataRelationships(val *PriceDataRelationships) *NullablePriceDataRelationships {
	return &NullablePriceDataRelationships{value: val, isSet: true}
}

func (v NullablePriceDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
