/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 4.1.3
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PriceFrequencyTierDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceFrequencyTierDataRelationships{}

// PriceFrequencyTierDataRelationships struct for PriceFrequencyTierDataRelationships
type PriceFrequencyTierDataRelationships struct {
	Price       *PriceFrequencyTierDataRelationshipsPrice   `json:"price,omitempty"`
	Attachments *AvalaraAccountDataRelationshipsAttachments `json:"attachments,omitempty"`
	Events      *AuthorizationDataRelationshipsEvents       `json:"events,omitempty"`
}

// NewPriceFrequencyTierDataRelationships instantiates a new PriceFrequencyTierDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceFrequencyTierDataRelationships() *PriceFrequencyTierDataRelationships {
	this := PriceFrequencyTierDataRelationships{}
	return &this
}

// NewPriceFrequencyTierDataRelationshipsWithDefaults instantiates a new PriceFrequencyTierDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceFrequencyTierDataRelationshipsWithDefaults() *PriceFrequencyTierDataRelationships {
	this := PriceFrequencyTierDataRelationships{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *PriceFrequencyTierDataRelationships) GetPrice() PriceFrequencyTierDataRelationshipsPrice {
	if o == nil || IsNil(o.Price) {
		var ret PriceFrequencyTierDataRelationshipsPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceFrequencyTierDataRelationships) GetPriceOk() (*PriceFrequencyTierDataRelationshipsPrice, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *PriceFrequencyTierDataRelationships) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given PriceFrequencyTierDataRelationshipsPrice and assigns it to the Price field.
func (o *PriceFrequencyTierDataRelationships) SetPrice(v PriceFrequencyTierDataRelationshipsPrice) {
	o.Price = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *PriceFrequencyTierDataRelationships) GetAttachments() AvalaraAccountDataRelationshipsAttachments {
	if o == nil || IsNil(o.Attachments) {
		var ret AvalaraAccountDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceFrequencyTierDataRelationships) GetAttachmentsOk() (*AvalaraAccountDataRelationshipsAttachments, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *PriceFrequencyTierDataRelationships) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AvalaraAccountDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *PriceFrequencyTierDataRelationships) SetAttachments(v AvalaraAccountDataRelationshipsAttachments) {
	o.Attachments = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *PriceFrequencyTierDataRelationships) GetEvents() AuthorizationDataRelationshipsEvents {
	if o == nil || IsNil(o.Events) {
		var ret AuthorizationDataRelationshipsEvents
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceFrequencyTierDataRelationships) GetEventsOk() (*AuthorizationDataRelationshipsEvents, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *PriceFrequencyTierDataRelationships) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given AuthorizationDataRelationshipsEvents and assigns it to the Events field.
func (o *PriceFrequencyTierDataRelationships) SetEvents(v AuthorizationDataRelationshipsEvents) {
	o.Events = &v
}

func (o PriceFrequencyTierDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceFrequencyTierDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	return toSerialize, nil
}

type NullablePriceFrequencyTierDataRelationships struct {
	value *PriceFrequencyTierDataRelationships
	isSet bool
}

func (v NullablePriceFrequencyTierDataRelationships) Get() *PriceFrequencyTierDataRelationships {
	return v.value
}

func (v *NullablePriceFrequencyTierDataRelationships) Set(val *PriceFrequencyTierDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceFrequencyTierDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceFrequencyTierDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceFrequencyTierDataRelationships(val *PriceFrequencyTierDataRelationships) *NullablePriceFrequencyTierDataRelationships {
	return &NullablePriceFrequencyTierDataRelationships{value: val, isSet: true}
}

func (v NullablePriceFrequencyTierDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceFrequencyTierDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
