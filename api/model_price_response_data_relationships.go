/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PriceResponseDataRelationships struct for PriceResponseDataRelationships
type PriceResponseDataRelationships struct {
	PriceList        *MarketResponseDataRelationshipsPriceList           `json:"price_list,omitempty"`
	Sku              *InStockSubscriptionResponseDataRelationshipsSku    `json:"sku,omitempty"`
	PriceTiers       *PriceResponseDataRelationshipsPriceTiers           `json:"price_tiers,omitempty"`
	PriceVolumeTiers *PriceResponseDataRelationshipsPriceVolumeTiers     `json:"price_volume_tiers,omitempty"`
	Attachments      *AvalaraAccountResponseDataRelationshipsAttachments `json:"attachments,omitempty"`
}

// NewPriceResponseDataRelationships instantiates a new PriceResponseDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceResponseDataRelationships() *PriceResponseDataRelationships {
	this := PriceResponseDataRelationships{}
	return &this
}

// NewPriceResponseDataRelationshipsWithDefaults instantiates a new PriceResponseDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceResponseDataRelationshipsWithDefaults() *PriceResponseDataRelationships {
	this := PriceResponseDataRelationships{}
	return &this
}

// GetPriceList returns the PriceList field value if set, zero value otherwise.
func (o *PriceResponseDataRelationships) GetPriceList() MarketResponseDataRelationshipsPriceList {
	if o == nil || o.PriceList == nil {
		var ret MarketResponseDataRelationshipsPriceList
		return ret
	}
	return *o.PriceList
}

// GetPriceListOk returns a tuple with the PriceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceResponseDataRelationships) GetPriceListOk() (*MarketResponseDataRelationshipsPriceList, bool) {
	if o == nil || o.PriceList == nil {
		return nil, false
	}
	return o.PriceList, true
}

// HasPriceList returns a boolean if a field has been set.
func (o *PriceResponseDataRelationships) HasPriceList() bool {
	if o != nil && o.PriceList != nil {
		return true
	}

	return false
}

// SetPriceList gets a reference to the given MarketResponseDataRelationshipsPriceList and assigns it to the PriceList field.
func (o *PriceResponseDataRelationships) SetPriceList(v MarketResponseDataRelationshipsPriceList) {
	o.PriceList = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *PriceResponseDataRelationships) GetSku() InStockSubscriptionResponseDataRelationshipsSku {
	if o == nil || o.Sku == nil {
		var ret InStockSubscriptionResponseDataRelationshipsSku
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceResponseDataRelationships) GetSkuOk() (*InStockSubscriptionResponseDataRelationshipsSku, bool) {
	if o == nil || o.Sku == nil {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *PriceResponseDataRelationships) HasSku() bool {
	if o != nil && o.Sku != nil {
		return true
	}

	return false
}

// SetSku gets a reference to the given InStockSubscriptionResponseDataRelationshipsSku and assigns it to the Sku field.
func (o *PriceResponseDataRelationships) SetSku(v InStockSubscriptionResponseDataRelationshipsSku) {
	o.Sku = &v
}

// GetPriceTiers returns the PriceTiers field value if set, zero value otherwise.
func (o *PriceResponseDataRelationships) GetPriceTiers() PriceResponseDataRelationshipsPriceTiers {
	if o == nil || o.PriceTiers == nil {
		var ret PriceResponseDataRelationshipsPriceTiers
		return ret
	}
	return *o.PriceTiers
}

// GetPriceTiersOk returns a tuple with the PriceTiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceResponseDataRelationships) GetPriceTiersOk() (*PriceResponseDataRelationshipsPriceTiers, bool) {
	if o == nil || o.PriceTiers == nil {
		return nil, false
	}
	return o.PriceTiers, true
}

// HasPriceTiers returns a boolean if a field has been set.
func (o *PriceResponseDataRelationships) HasPriceTiers() bool {
	if o != nil && o.PriceTiers != nil {
		return true
	}

	return false
}

// SetPriceTiers gets a reference to the given PriceResponseDataRelationshipsPriceTiers and assigns it to the PriceTiers field.
func (o *PriceResponseDataRelationships) SetPriceTiers(v PriceResponseDataRelationshipsPriceTiers) {
	o.PriceTiers = &v
}

// GetPriceVolumeTiers returns the PriceVolumeTiers field value if set, zero value otherwise.
func (o *PriceResponseDataRelationships) GetPriceVolumeTiers() PriceResponseDataRelationshipsPriceVolumeTiers {
	if o == nil || o.PriceVolumeTiers == nil {
		var ret PriceResponseDataRelationshipsPriceVolumeTiers
		return ret
	}
	return *o.PriceVolumeTiers
}

// GetPriceVolumeTiersOk returns a tuple with the PriceVolumeTiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceResponseDataRelationships) GetPriceVolumeTiersOk() (*PriceResponseDataRelationshipsPriceVolumeTiers, bool) {
	if o == nil || o.PriceVolumeTiers == nil {
		return nil, false
	}
	return o.PriceVolumeTiers, true
}

// HasPriceVolumeTiers returns a boolean if a field has been set.
func (o *PriceResponseDataRelationships) HasPriceVolumeTiers() bool {
	if o != nil && o.PriceVolumeTiers != nil {
		return true
	}

	return false
}

// SetPriceVolumeTiers gets a reference to the given PriceResponseDataRelationshipsPriceVolumeTiers and assigns it to the PriceVolumeTiers field.
func (o *PriceResponseDataRelationships) SetPriceVolumeTiers(v PriceResponseDataRelationshipsPriceVolumeTiers) {
	o.PriceVolumeTiers = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *PriceResponseDataRelationships) GetAttachments() AvalaraAccountResponseDataRelationshipsAttachments {
	if o == nil || o.Attachments == nil {
		var ret AvalaraAccountResponseDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceResponseDataRelationships) GetAttachmentsOk() (*AvalaraAccountResponseDataRelationshipsAttachments, bool) {
	if o == nil || o.Attachments == nil {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *PriceResponseDataRelationships) HasAttachments() bool {
	if o != nil && o.Attachments != nil {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AvalaraAccountResponseDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *PriceResponseDataRelationships) SetAttachments(v AvalaraAccountResponseDataRelationshipsAttachments) {
	o.Attachments = &v
}

func (o PriceResponseDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PriceList != nil {
		toSerialize["price_list"] = o.PriceList
	}
	if o.Sku != nil {
		toSerialize["sku"] = o.Sku
	}
	if o.PriceTiers != nil {
		toSerialize["price_tiers"] = o.PriceTiers
	}
	if o.PriceVolumeTiers != nil {
		toSerialize["price_volume_tiers"] = o.PriceVolumeTiers
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	return json.Marshal(toSerialize)
}

type NullablePriceResponseDataRelationships struct {
	value *PriceResponseDataRelationships
	isSet bool
}

func (v NullablePriceResponseDataRelationships) Get() *PriceResponseDataRelationships {
	return v.value
}

func (v *NullablePriceResponseDataRelationships) Set(val *PriceResponseDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceResponseDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceResponseDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceResponseDataRelationships(val *PriceResponseDataRelationships) *NullablePriceResponseDataRelationships {
	return &NullablePriceResponseDataRelationships{value: val, isSet: true}
}

func (v NullablePriceResponseDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceResponseDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
