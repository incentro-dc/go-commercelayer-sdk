/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.9.4
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ShippingMethodCreateDataRelationships struct for ShippingMethodCreateDataRelationships
type ShippingMethodCreateDataRelationships struct {
	Market           *AvalaraAccountDataRelationshipsMarkets     `json:"market,omitempty"`
	ShippingZone     ShippingMethodDataRelationshipsShippingZone `json:"shipping_zone"`
	ShippingCategory ShipmentDataRelationshipsShippingCategory   `json:"shipping_category"`
}

// NewShippingMethodCreateDataRelationships instantiates a new ShippingMethodCreateDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShippingMethodCreateDataRelationships(shippingZone ShippingMethodDataRelationshipsShippingZone, shippingCategory ShipmentDataRelationshipsShippingCategory) *ShippingMethodCreateDataRelationships {
	this := ShippingMethodCreateDataRelationships{}
	this.ShippingZone = shippingZone
	this.ShippingCategory = shippingCategory
	return &this
}

// NewShippingMethodCreateDataRelationshipsWithDefaults instantiates a new ShippingMethodCreateDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShippingMethodCreateDataRelationshipsWithDefaults() *ShippingMethodCreateDataRelationships {
	this := ShippingMethodCreateDataRelationships{}
	return &this
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *ShippingMethodCreateDataRelationships) GetMarket() AvalaraAccountDataRelationshipsMarkets {
	if o == nil || o.Market == nil {
		var ret AvalaraAccountDataRelationshipsMarkets
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShippingMethodCreateDataRelationships) GetMarketOk() (*AvalaraAccountDataRelationshipsMarkets, bool) {
	if o == nil || o.Market == nil {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *ShippingMethodCreateDataRelationships) HasMarket() bool {
	if o != nil && o.Market != nil {
		return true
	}

	return false
}

// SetMarket gets a reference to the given AvalaraAccountDataRelationshipsMarkets and assigns it to the Market field.
func (o *ShippingMethodCreateDataRelationships) SetMarket(v AvalaraAccountDataRelationshipsMarkets) {
	o.Market = &v
}

// GetShippingZone returns the ShippingZone field value
func (o *ShippingMethodCreateDataRelationships) GetShippingZone() ShippingMethodDataRelationshipsShippingZone {
	if o == nil {
		var ret ShippingMethodDataRelationshipsShippingZone
		return ret
	}

	return o.ShippingZone
}

// GetShippingZoneOk returns a tuple with the ShippingZone field value
// and a boolean to check if the value has been set.
func (o *ShippingMethodCreateDataRelationships) GetShippingZoneOk() (*ShippingMethodDataRelationshipsShippingZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippingZone, true
}

// SetShippingZone sets field value
func (o *ShippingMethodCreateDataRelationships) SetShippingZone(v ShippingMethodDataRelationshipsShippingZone) {
	o.ShippingZone = v
}

// GetShippingCategory returns the ShippingCategory field value
func (o *ShippingMethodCreateDataRelationships) GetShippingCategory() ShipmentDataRelationshipsShippingCategory {
	if o == nil {
		var ret ShipmentDataRelationshipsShippingCategory
		return ret
	}

	return o.ShippingCategory
}

// GetShippingCategoryOk returns a tuple with the ShippingCategory field value
// and a boolean to check if the value has been set.
func (o *ShippingMethodCreateDataRelationships) GetShippingCategoryOk() (*ShipmentDataRelationshipsShippingCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippingCategory, true
}

// SetShippingCategory sets field value
func (o *ShippingMethodCreateDataRelationships) SetShippingCategory(v ShipmentDataRelationshipsShippingCategory) {
	o.ShippingCategory = v
}

func (o ShippingMethodCreateDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Market != nil {
		toSerialize["market"] = o.Market
	}
	if true {
		toSerialize["shipping_zone"] = o.ShippingZone
	}
	if true {
		toSerialize["shipping_category"] = o.ShippingCategory
	}
	return json.Marshal(toSerialize)
}

type NullableShippingMethodCreateDataRelationships struct {
	value *ShippingMethodCreateDataRelationships
	isSet bool
}

func (v NullableShippingMethodCreateDataRelationships) Get() *ShippingMethodCreateDataRelationships {
	return v.value
}

func (v *NullableShippingMethodCreateDataRelationships) Set(val *ShippingMethodCreateDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableShippingMethodCreateDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableShippingMethodCreateDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShippingMethodCreateDataRelationships(val *ShippingMethodCreateDataRelationships) *NullableShippingMethodCreateDataRelationships {
	return &NullableShippingMethodCreateDataRelationships{value: val, isSet: true}
}

func (v NullableShippingMethodCreateDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShippingMethodCreateDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
