/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SkuCreateDataAttributes struct for SkuCreateDataAttributes
type SkuCreateDataAttributes struct {
	// The SKU code, that uniquely identifies the SKU within the organization.
	Code string `json:"code"`
	// The internal name of the SKU.
	Name string `json:"name"`
	// An internal description of the SKU.
	Description *string `json:"description,omitempty"`
	// The URL of an image that represents the SKU.
	ImageUrl *string `json:"image_url,omitempty"`
	// The number of pieces that compose the SKU. This is useful to describe sets and bundles.
	PiecesPerPack *int32 `json:"pieces_per_pack,omitempty"`
	// The weight of the SKU. If present, it will be used to calculate the shipping rates.
	Weight *float32 `json:"weight,omitempty"`
	// Can be one of 'gr', 'lb', or 'oz'
	UnitOfWeight *string `json:"unit_of_weight,omitempty"`
	// The Harmonized System Code used by customs to identify the products shipped across international borders.
	HsTariffNumber *string `json:"hs_tariff_number,omitempty"`
	// Indicates if the SKU doesn't generate shipments.
	DoNotShip *bool `json:"do_not_ship,omitempty"`
	// Indicates if the SKU doesn't track the stock inventory.
	DoNotTrack *bool `json:"do_not_track,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewSkuCreateDataAttributes instantiates a new SkuCreateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkuCreateDataAttributes(code string, name string) *SkuCreateDataAttributes {
	this := SkuCreateDataAttributes{}
	this.Code = code
	this.Name = name
	return &this
}

// NewSkuCreateDataAttributesWithDefaults instantiates a new SkuCreateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkuCreateDataAttributesWithDefaults() *SkuCreateDataAttributes {
	this := SkuCreateDataAttributes{}
	return &this
}

// GetCode returns the Code field value
func (o *SkuCreateDataAttributes) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *SkuCreateDataAttributes) SetCode(v string) {
	o.Code = v
}

// GetName returns the Name field value
func (o *SkuCreateDataAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SkuCreateDataAttributes) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SkuCreateDataAttributes) SetDescription(v string) {
	o.Description = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *SkuCreateDataAttributes) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetPiecesPerPack returns the PiecesPerPack field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetPiecesPerPack() int32 {
	if o == nil || o.PiecesPerPack == nil {
		var ret int32
		return ret
	}
	return *o.PiecesPerPack
}

// GetPiecesPerPackOk returns a tuple with the PiecesPerPack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetPiecesPerPackOk() (*int32, bool) {
	if o == nil || o.PiecesPerPack == nil {
		return nil, false
	}
	return o.PiecesPerPack, true
}

// HasPiecesPerPack returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasPiecesPerPack() bool {
	if o != nil && o.PiecesPerPack != nil {
		return true
	}

	return false
}

// SetPiecesPerPack gets a reference to the given int32 and assigns it to the PiecesPerPack field.
func (o *SkuCreateDataAttributes) SetPiecesPerPack(v int32) {
	o.PiecesPerPack = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetWeight() float32 {
	if o == nil || o.Weight == nil {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetWeightOk() (*float32, bool) {
	if o == nil || o.Weight == nil {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasWeight() bool {
	if o != nil && o.Weight != nil {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *SkuCreateDataAttributes) SetWeight(v float32) {
	o.Weight = &v
}

// GetUnitOfWeight returns the UnitOfWeight field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetUnitOfWeight() string {
	if o == nil || o.UnitOfWeight == nil {
		var ret string
		return ret
	}
	return *o.UnitOfWeight
}

// GetUnitOfWeightOk returns a tuple with the UnitOfWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetUnitOfWeightOk() (*string, bool) {
	if o == nil || o.UnitOfWeight == nil {
		return nil, false
	}
	return o.UnitOfWeight, true
}

// HasUnitOfWeight returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasUnitOfWeight() bool {
	if o != nil && o.UnitOfWeight != nil {
		return true
	}

	return false
}

// SetUnitOfWeight gets a reference to the given string and assigns it to the UnitOfWeight field.
func (o *SkuCreateDataAttributes) SetUnitOfWeight(v string) {
	o.UnitOfWeight = &v
}

// GetHsTariffNumber returns the HsTariffNumber field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetHsTariffNumber() string {
	if o == nil || o.HsTariffNumber == nil {
		var ret string
		return ret
	}
	return *o.HsTariffNumber
}

// GetHsTariffNumberOk returns a tuple with the HsTariffNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetHsTariffNumberOk() (*string, bool) {
	if o == nil || o.HsTariffNumber == nil {
		return nil, false
	}
	return o.HsTariffNumber, true
}

// HasHsTariffNumber returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasHsTariffNumber() bool {
	if o != nil && o.HsTariffNumber != nil {
		return true
	}

	return false
}

// SetHsTariffNumber gets a reference to the given string and assigns it to the HsTariffNumber field.
func (o *SkuCreateDataAttributes) SetHsTariffNumber(v string) {
	o.HsTariffNumber = &v
}

// GetDoNotShip returns the DoNotShip field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetDoNotShip() bool {
	if o == nil || o.DoNotShip == nil {
		var ret bool
		return ret
	}
	return *o.DoNotShip
}

// GetDoNotShipOk returns a tuple with the DoNotShip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetDoNotShipOk() (*bool, bool) {
	if o == nil || o.DoNotShip == nil {
		return nil, false
	}
	return o.DoNotShip, true
}

// HasDoNotShip returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasDoNotShip() bool {
	if o != nil && o.DoNotShip != nil {
		return true
	}

	return false
}

// SetDoNotShip gets a reference to the given bool and assigns it to the DoNotShip field.
func (o *SkuCreateDataAttributes) SetDoNotShip(v bool) {
	o.DoNotShip = &v
}

// GetDoNotTrack returns the DoNotTrack field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetDoNotTrack() bool {
	if o == nil || o.DoNotTrack == nil {
		var ret bool
		return ret
	}
	return *o.DoNotTrack
}

// GetDoNotTrackOk returns a tuple with the DoNotTrack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetDoNotTrackOk() (*bool, bool) {
	if o == nil || o.DoNotTrack == nil {
		return nil, false
	}
	return o.DoNotTrack, true
}

// HasDoNotTrack returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasDoNotTrack() bool {
	if o != nil && o.DoNotTrack != nil {
		return true
	}

	return false
}

// SetDoNotTrack gets a reference to the given bool and assigns it to the DoNotTrack field.
func (o *SkuCreateDataAttributes) SetDoNotTrack(v bool) {
	o.DoNotTrack = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *SkuCreateDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *SkuCreateDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SkuCreateDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuCreateDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SkuCreateDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *SkuCreateDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o SkuCreateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	if o.PiecesPerPack != nil {
		toSerialize["pieces_per_pack"] = o.PiecesPerPack
	}
	if o.Weight != nil {
		toSerialize["weight"] = o.Weight
	}
	if o.UnitOfWeight != nil {
		toSerialize["unit_of_weight"] = o.UnitOfWeight
	}
	if o.HsTariffNumber != nil {
		toSerialize["hs_tariff_number"] = o.HsTariffNumber
	}
	if o.DoNotShip != nil {
		toSerialize["do_not_ship"] = o.DoNotShip
	}
	if o.DoNotTrack != nil {
		toSerialize["do_not_track"] = o.DoNotTrack
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableSkuCreateDataAttributes struct {
	value *SkuCreateDataAttributes
	isSet bool
}

func (v NullableSkuCreateDataAttributes) Get() *SkuCreateDataAttributes {
	return v.value
}

func (v *NullableSkuCreateDataAttributes) Set(val *SkuCreateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSkuCreateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSkuCreateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkuCreateDataAttributes(val *SkuCreateDataAttributes) *NullableSkuCreateDataAttributes {
	return &NullableSkuCreateDataAttributes{value: val, isSet: true}
}

func (v NullableSkuCreateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkuCreateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
