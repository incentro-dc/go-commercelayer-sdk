/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.4.0
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SkuDataRelationshipsStockItems struct for SkuDataRelationshipsStockItems
type SkuDataRelationshipsStockItems struct {
	Data *SkuDataRelationshipsStockItemsData `json:"data,omitempty"`
}

// NewSkuDataRelationshipsStockItems instantiates a new SkuDataRelationshipsStockItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkuDataRelationshipsStockItems() *SkuDataRelationshipsStockItems {
	this := SkuDataRelationshipsStockItems{}
	return &this
}

// NewSkuDataRelationshipsStockItemsWithDefaults instantiates a new SkuDataRelationshipsStockItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkuDataRelationshipsStockItemsWithDefaults() *SkuDataRelationshipsStockItems {
	this := SkuDataRelationshipsStockItems{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SkuDataRelationshipsStockItems) GetData() SkuDataRelationshipsStockItemsData {
	if o == nil || o.Data == nil {
		var ret SkuDataRelationshipsStockItemsData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuDataRelationshipsStockItems) GetDataOk() (*SkuDataRelationshipsStockItemsData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SkuDataRelationshipsStockItems) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given SkuDataRelationshipsStockItemsData and assigns it to the Data field.
func (o *SkuDataRelationshipsStockItems) SetData(v SkuDataRelationshipsStockItemsData) {
	o.Data = &v
}

func (o SkuDataRelationshipsStockItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableSkuDataRelationshipsStockItems struct {
	value *SkuDataRelationshipsStockItems
	isSet bool
}

func (v NullableSkuDataRelationshipsStockItems) Get() *SkuDataRelationshipsStockItems {
	return v.value
}

func (v *NullableSkuDataRelationshipsStockItems) Set(val *SkuDataRelationshipsStockItems) {
	v.value = val
	v.isSet = true
}

func (v NullableSkuDataRelationshipsStockItems) IsSet() bool {
	return v.isSet
}

func (v *NullableSkuDataRelationshipsStockItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkuDataRelationshipsStockItems(val *SkuDataRelationshipsStockItems) *NullableSkuDataRelationshipsStockItems {
	return &NullableSkuDataRelationshipsStockItems{value: val, isSet: true}
}

func (v NullableSkuDataRelationshipsStockItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkuDataRelationshipsStockItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
