/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SkuListResponse struct for SkuListResponse
type SkuListResponse struct {
	Data *SkuListResponseData `json:"data,omitempty"`
}

// NewSkuListResponse instantiates a new SkuListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSkuListResponse() *SkuListResponse {
	this := SkuListResponse{}
	return &this
}

// NewSkuListResponseWithDefaults instantiates a new SkuListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSkuListResponseWithDefaults() *SkuListResponse {
	this := SkuListResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SkuListResponse) GetData() SkuListResponseData {
	if o == nil || o.Data == nil {
		var ret SkuListResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SkuListResponse) GetDataOk() (*SkuListResponseData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SkuListResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given SkuListResponseData and assigns it to the Data field.
func (o *SkuListResponse) SetData(v SkuListResponseData) {
	o.Data = &v
}

func (o SkuListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableSkuListResponse struct {
	value *SkuListResponse
	isSet bool
}

func (v NullableSkuListResponse) Get() *SkuListResponse {
	return v.value
}

func (v *NullableSkuListResponse) Set(val *SkuListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSkuListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSkuListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSkuListResponse(val *SkuListResponse) *NullableSkuListResponse {
	return &NullableSkuListResponse{value: val, isSet: true}
}

func (v NullableSkuListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSkuListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
