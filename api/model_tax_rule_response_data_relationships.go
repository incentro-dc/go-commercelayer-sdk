/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TaxRuleResponseDataRelationships struct for TaxRuleResponseDataRelationships
type TaxRuleResponseDataRelationships struct {
	ManualTaxCalculator *TaxRuleResponseDataRelationshipsManualTaxCalculator `json:"manual_tax_calculator,omitempty"`
}

// NewTaxRuleResponseDataRelationships instantiates a new TaxRuleResponseDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaxRuleResponseDataRelationships() *TaxRuleResponseDataRelationships {
	this := TaxRuleResponseDataRelationships{}
	return &this
}

// NewTaxRuleResponseDataRelationshipsWithDefaults instantiates a new TaxRuleResponseDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaxRuleResponseDataRelationshipsWithDefaults() *TaxRuleResponseDataRelationships {
	this := TaxRuleResponseDataRelationships{}
	return &this
}

// GetManualTaxCalculator returns the ManualTaxCalculator field value if set, zero value otherwise.
func (o *TaxRuleResponseDataRelationships) GetManualTaxCalculator() TaxRuleResponseDataRelationshipsManualTaxCalculator {
	if o == nil || o.ManualTaxCalculator == nil {
		var ret TaxRuleResponseDataRelationshipsManualTaxCalculator
		return ret
	}
	return *o.ManualTaxCalculator
}

// GetManualTaxCalculatorOk returns a tuple with the ManualTaxCalculator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleResponseDataRelationships) GetManualTaxCalculatorOk() (*TaxRuleResponseDataRelationshipsManualTaxCalculator, bool) {
	if o == nil || o.ManualTaxCalculator == nil {
		return nil, false
	}
	return o.ManualTaxCalculator, true
}

// HasManualTaxCalculator returns a boolean if a field has been set.
func (o *TaxRuleResponseDataRelationships) HasManualTaxCalculator() bool {
	if o != nil && o.ManualTaxCalculator != nil {
		return true
	}

	return false
}

// SetManualTaxCalculator gets a reference to the given TaxRuleResponseDataRelationshipsManualTaxCalculator and assigns it to the ManualTaxCalculator field.
func (o *TaxRuleResponseDataRelationships) SetManualTaxCalculator(v TaxRuleResponseDataRelationshipsManualTaxCalculator) {
	o.ManualTaxCalculator = &v
}

func (o TaxRuleResponseDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ManualTaxCalculator != nil {
		toSerialize["manual_tax_calculator"] = o.ManualTaxCalculator
	}
	return json.Marshal(toSerialize)
}

type NullableTaxRuleResponseDataRelationships struct {
	value *TaxRuleResponseDataRelationships
	isSet bool
}

func (v NullableTaxRuleResponseDataRelationships) Get() *TaxRuleResponseDataRelationships {
	return v.value
}

func (v *NullableTaxRuleResponseDataRelationships) Set(val *TaxRuleResponseDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableTaxRuleResponseDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableTaxRuleResponseDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaxRuleResponseDataRelationships(val *TaxRuleResponseDataRelationships) *NullableTaxRuleResponseDataRelationships {
	return &NullableTaxRuleResponseDataRelationships{value: val, isSet: true}
}

func (v NullableTaxRuleResponseDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaxRuleResponseDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
