/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 3.0.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TaxRuleResponseDataRelationshipsManualTaxCalculator struct for TaxRuleResponseDataRelationshipsManualTaxCalculator
type TaxRuleResponseDataRelationshipsManualTaxCalculator struct {
	Links *AddressResponseDataRelationshipsGeocoderLinks           `json:"links,omitempty"`
	Data  *TaxRuleResponseDataRelationshipsManualTaxCalculatorData `json:"data,omitempty"`
}

// NewTaxRuleResponseDataRelationshipsManualTaxCalculator instantiates a new TaxRuleResponseDataRelationshipsManualTaxCalculator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaxRuleResponseDataRelationshipsManualTaxCalculator() *TaxRuleResponseDataRelationshipsManualTaxCalculator {
	this := TaxRuleResponseDataRelationshipsManualTaxCalculator{}
	return &this
}

// NewTaxRuleResponseDataRelationshipsManualTaxCalculatorWithDefaults instantiates a new TaxRuleResponseDataRelationshipsManualTaxCalculator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaxRuleResponseDataRelationshipsManualTaxCalculatorWithDefaults() *TaxRuleResponseDataRelationshipsManualTaxCalculator {
	this := TaxRuleResponseDataRelationshipsManualTaxCalculator{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *TaxRuleResponseDataRelationshipsManualTaxCalculator) GetLinks() AddressResponseDataRelationshipsGeocoderLinks {
	if o == nil || o.Links == nil {
		var ret AddressResponseDataRelationshipsGeocoderLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleResponseDataRelationshipsManualTaxCalculator) GetLinksOk() (*AddressResponseDataRelationshipsGeocoderLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *TaxRuleResponseDataRelationshipsManualTaxCalculator) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AddressResponseDataRelationshipsGeocoderLinks and assigns it to the Links field.
func (o *TaxRuleResponseDataRelationshipsManualTaxCalculator) SetLinks(v AddressResponseDataRelationshipsGeocoderLinks) {
	o.Links = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *TaxRuleResponseDataRelationshipsManualTaxCalculator) GetData() TaxRuleResponseDataRelationshipsManualTaxCalculatorData {
	if o == nil || o.Data == nil {
		var ret TaxRuleResponseDataRelationshipsManualTaxCalculatorData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxRuleResponseDataRelationshipsManualTaxCalculator) GetDataOk() (*TaxRuleResponseDataRelationshipsManualTaxCalculatorData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *TaxRuleResponseDataRelationshipsManualTaxCalculator) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given TaxRuleResponseDataRelationshipsManualTaxCalculatorData and assigns it to the Data field.
func (o *TaxRuleResponseDataRelationshipsManualTaxCalculator) SetData(v TaxRuleResponseDataRelationshipsManualTaxCalculatorData) {
	o.Data = &v
}

func (o TaxRuleResponseDataRelationshipsManualTaxCalculator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableTaxRuleResponseDataRelationshipsManualTaxCalculator struct {
	value *TaxRuleResponseDataRelationshipsManualTaxCalculator
	isSet bool
}

func (v NullableTaxRuleResponseDataRelationshipsManualTaxCalculator) Get() *TaxRuleResponseDataRelationshipsManualTaxCalculator {
	return v.value
}

func (v *NullableTaxRuleResponseDataRelationshipsManualTaxCalculator) Set(val *TaxRuleResponseDataRelationshipsManualTaxCalculator) {
	v.value = val
	v.isSet = true
}

func (v NullableTaxRuleResponseDataRelationshipsManualTaxCalculator) IsSet() bool {
	return v.isSet
}

func (v *NullableTaxRuleResponseDataRelationshipsManualTaxCalculator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaxRuleResponseDataRelationshipsManualTaxCalculator(val *TaxRuleResponseDataRelationshipsManualTaxCalculator) *NullableTaxRuleResponseDataRelationshipsManualTaxCalculator {
	return &NullableTaxRuleResponseDataRelationshipsManualTaxCalculator{value: val, isSet: true}
}

func (v NullableTaxRuleResponseDataRelationshipsManualTaxCalculator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaxRuleResponseDataRelationshipsManualTaxCalculator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
