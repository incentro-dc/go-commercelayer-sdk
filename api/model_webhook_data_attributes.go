/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 2.9.4
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// WebhookDataAttributes struct for WebhookDataAttributes
type WebhookDataAttributes struct {
	// Unique name for the webhook.
	Name *string `json:"name,omitempty"`
	// The identifier of the resource/event that will trigger the webhook.
	Topic *string `json:"topic,omitempty"`
	// URI where the webhook subscription should send the POST request when the event occurs.
	CallbackUrl *string `json:"callback_url,omitempty"`
	// List of related resources that should be included in the webhook body.
	IncludeResources []string `json:"include_resources,omitempty"`
	// The circuit breaker state, by default it is 'closed'. It can become 'open' once the number of consecutive failures overlaps the specified threshold, in such case no further calls to the failing callback are made.
	CircuitState *string `json:"circuit_state,omitempty"`
	// The number of consecutive failures recorded by the circuit breaker associated to this webhook, will be reset on first successful call to callback.
	CircuitFailureCount *int32 `json:"circuit_failure_count,omitempty"`
	// Unique identifier for the resource (hash).
	Id *string `json:"id,omitempty"`
	// Time at which the resource was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// Time at which the resource was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference *string `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code
	ReferenceOrigin *string `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewWebhookDataAttributes instantiates a new WebhookDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookDataAttributes() *WebhookDataAttributes {
	this := WebhookDataAttributes{}
	return &this
}

// NewWebhookDataAttributesWithDefaults instantiates a new WebhookDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookDataAttributesWithDefaults() *WebhookDataAttributes {
	this := WebhookDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WebhookDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetTopic() string {
	if o == nil || o.Topic == nil {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetTopicOk() (*string, bool) {
	if o == nil || o.Topic == nil {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasTopic() bool {
	if o != nil && o.Topic != nil {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *WebhookDataAttributes) SetTopic(v string) {
	o.Topic = &v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetCallbackUrl() string {
	if o == nil || o.CallbackUrl == nil {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetCallbackUrlOk() (*string, bool) {
	if o == nil || o.CallbackUrl == nil {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl != nil {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *WebhookDataAttributes) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetIncludeResources returns the IncludeResources field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetIncludeResources() []string {
	if o == nil || o.IncludeResources == nil {
		var ret []string
		return ret
	}
	return o.IncludeResources
}

// GetIncludeResourcesOk returns a tuple with the IncludeResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetIncludeResourcesOk() ([]string, bool) {
	if o == nil || o.IncludeResources == nil {
		return nil, false
	}
	return o.IncludeResources, true
}

// HasIncludeResources returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasIncludeResources() bool {
	if o != nil && o.IncludeResources != nil {
		return true
	}

	return false
}

// SetIncludeResources gets a reference to the given []string and assigns it to the IncludeResources field.
func (o *WebhookDataAttributes) SetIncludeResources(v []string) {
	o.IncludeResources = v
}

// GetCircuitState returns the CircuitState field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetCircuitState() string {
	if o == nil || o.CircuitState == nil {
		var ret string
		return ret
	}
	return *o.CircuitState
}

// GetCircuitStateOk returns a tuple with the CircuitState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetCircuitStateOk() (*string, bool) {
	if o == nil || o.CircuitState == nil {
		return nil, false
	}
	return o.CircuitState, true
}

// HasCircuitState returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasCircuitState() bool {
	if o != nil && o.CircuitState != nil {
		return true
	}

	return false
}

// SetCircuitState gets a reference to the given string and assigns it to the CircuitState field.
func (o *WebhookDataAttributes) SetCircuitState(v string) {
	o.CircuitState = &v
}

// GetCircuitFailureCount returns the CircuitFailureCount field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetCircuitFailureCount() int32 {
	if o == nil || o.CircuitFailureCount == nil {
		var ret int32
		return ret
	}
	return *o.CircuitFailureCount
}

// GetCircuitFailureCountOk returns a tuple with the CircuitFailureCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetCircuitFailureCountOk() (*int32, bool) {
	if o == nil || o.CircuitFailureCount == nil {
		return nil, false
	}
	return o.CircuitFailureCount, true
}

// HasCircuitFailureCount returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasCircuitFailureCount() bool {
	if o != nil && o.CircuitFailureCount != nil {
		return true
	}

	return false
}

// SetCircuitFailureCount gets a reference to the given int32 and assigns it to the CircuitFailureCount field.
func (o *WebhookDataAttributes) SetCircuitFailureCount(v int32) {
	o.CircuitFailureCount = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebhookDataAttributes) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *WebhookDataAttributes) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *WebhookDataAttributes) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *WebhookDataAttributes) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetReferenceOrigin() string {
	if o == nil || o.ReferenceOrigin == nil {
		var ret string
		return ret
	}
	return *o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetReferenceOriginOk() (*string, bool) {
	if o == nil || o.ReferenceOrigin == nil {
		return nil, false
	}
	return o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasReferenceOrigin() bool {
	if o != nil && o.ReferenceOrigin != nil {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given string and assigns it to the ReferenceOrigin field.
func (o *WebhookDataAttributes) SetReferenceOrigin(v string) {
	o.ReferenceOrigin = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *WebhookDataAttributes) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookDataAttributes) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *WebhookDataAttributes) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *WebhookDataAttributes) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o WebhookDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Topic != nil {
		toSerialize["topic"] = o.Topic
	}
	if o.CallbackUrl != nil {
		toSerialize["callback_url"] = o.CallbackUrl
	}
	if o.IncludeResources != nil {
		toSerialize["include_resources"] = o.IncludeResources
	}
	if o.CircuitState != nil {
		toSerialize["circuit_state"] = o.CircuitState
	}
	if o.CircuitFailureCount != nil {
		toSerialize["circuit_failure_count"] = o.CircuitFailureCount
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookDataAttributes struct {
	value *WebhookDataAttributes
	isSet bool
}

func (v NullableWebhookDataAttributes) Get() *WebhookDataAttributes {
	return v.value
}

func (v *NullableWebhookDataAttributes) Set(val *WebhookDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookDataAttributes(val *WebhookDataAttributes) *NullableWebhookDataAttributes {
	return &NullableWebhookDataAttributes{value: val, isSet: true}
}

func (v NullableWebhookDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
