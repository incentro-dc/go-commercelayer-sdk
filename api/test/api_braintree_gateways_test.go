/*
Commerce Layer API

Testing BraintreeGatewaysApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package api

import (
	"context"
	openapiclient "github.com/incentro-dc/go-commercelayer-sdk/api"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_api_BraintreeGatewaysApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BraintreeGatewaysApiService DELETEBraintreeGatewaysBraintreeGatewayId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var braintreeGatewayId interface{}

		httpRes, err := apiClient.BraintreeGatewaysApi.DELETEBraintreeGatewaysBraintreeGatewayId(context.Background(), braintreeGatewayId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BraintreeGatewaysApiService GETBraintreeGateways", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.BraintreeGatewaysApi.GETBraintreeGateways(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BraintreeGatewaysApiService GETBraintreeGatewaysBraintreeGatewayId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var braintreeGatewayId interface{}

		resp, httpRes, err := apiClient.BraintreeGatewaysApi.GETBraintreeGatewaysBraintreeGatewayId(context.Background(), braintreeGatewayId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BraintreeGatewaysApiService PATCHBraintreeGatewaysBraintreeGatewayId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var braintreeGatewayId interface{}

		resp, httpRes, err := apiClient.BraintreeGatewaysApi.PATCHBraintreeGatewaysBraintreeGatewayId(context.Background(), braintreeGatewayId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BraintreeGatewaysApiService POSTBraintreeGateways", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.BraintreeGatewaysApi.POSTBraintreeGateways(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
