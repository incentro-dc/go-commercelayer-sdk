/*
Commerce Layer API

Testing CheckoutComGatewaysApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package api

import (
	"context"
	openapiclient "github.com/incentro-dc/go-commercelayer-sdk/api"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_api_CheckoutComGatewaysApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CheckoutComGatewaysApiService DELETECheckoutComGatewaysCheckoutComGatewayId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var checkoutComGatewayId interface{}

		httpRes, err := apiClient.CheckoutComGatewaysApi.DELETECheckoutComGatewaysCheckoutComGatewayId(context.Background(), checkoutComGatewayId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CheckoutComGatewaysApiService GETCheckoutComGateways", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CheckoutComGatewaysApi.GETCheckoutComGateways(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CheckoutComGatewaysApiService GETCheckoutComGatewaysCheckoutComGatewayId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var checkoutComGatewayId interface{}

		resp, httpRes, err := apiClient.CheckoutComGatewaysApi.GETCheckoutComGatewaysCheckoutComGatewayId(context.Background(), checkoutComGatewayId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CheckoutComGatewaysApiService PATCHCheckoutComGatewaysCheckoutComGatewayId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var checkoutComGatewayId interface{}

		resp, httpRes, err := apiClient.CheckoutComGatewaysApi.PATCHCheckoutComGatewaysCheckoutComGatewayId(context.Background(), checkoutComGatewayId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CheckoutComGatewaysApiService POSTCheckoutComGateways", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CheckoutComGatewaysApi.POSTCheckoutComGateways(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
