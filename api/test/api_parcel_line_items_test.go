/*
Commerce Layer API

Testing ParcelLineItemsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package api

import (
	"context"
	openapiclient "github.com/incentro-dc/go-commercelayer-sdk/api"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_api_ParcelLineItemsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ParcelLineItemsApiService DELETEParcelLineItemsParcelLineItemId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parcelLineItemId interface{}

		httpRes, err := apiClient.ParcelLineItemsApi.DELETEParcelLineItemsParcelLineItemId(context.Background(), parcelLineItemId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ParcelLineItemsApiService GETParcelIdParcelLineItems", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parcelId interface{}

		httpRes, err := apiClient.ParcelLineItemsApi.GETParcelIdParcelLineItems(context.Background(), parcelId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ParcelLineItemsApiService GETParcelLineItems", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ParcelLineItemsApi.GETParcelLineItems(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ParcelLineItemsApiService GETParcelLineItemsParcelLineItemId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parcelLineItemId interface{}

		resp, httpRes, err := apiClient.ParcelLineItemsApi.GETParcelLineItemsParcelLineItemId(context.Background(), parcelLineItemId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ParcelLineItemsApiService PATCHParcelLineItemsParcelLineItemId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var parcelLineItemId interface{}

		resp, httpRes, err := apiClient.ParcelLineItemsApi.PATCHParcelLineItemsParcelLineItemId(context.Background(), parcelLineItemId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ParcelLineItemsApiService POSTParcelLineItems", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ParcelLineItemsApi.POSTParcelLineItems(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
